{"version":3,"sources":["../src/components/external/FileBrowser.tsx","../src/redux/store.ts","../src/util/hooks-helpers.ts","../src/redux/reducers.ts","../src/util/logger.ts","../src/util/file-helper.ts","../src/redux/files-transforms.ts","../src/redux/selectors.ts","../src/action-definitions/option-ids.ts","../src/redux/thunks/file-actions.thunks.ts","../src/redux/thunks/dispatchers.thunks.ts","../src/types/file-view.types.ts","../src/types/icons.types.ts","../src/util/helpers.ts","../src/redux/thunks/index.ts","../src/action-definitions/essential.ts","../src/action-definitions/default.ts","../src/action-definitions/extra.ts","../src/action-definitions/index.ts","../src/redux/state.ts","../src/redux/watchers.ts","../src/components/internal/ChonkyIconPlaceholder.tsx","../src/util/default-config.ts","../src/util/i18n.ts","../src/util/icon-helper.ts","../src/util/styles.ts","../src/components/internal/ChonkyBusinessLogic.tsx","../src/util/file-browser-handle.ts","../src/components/internal/ChonkyPresentationLayer.tsx","../src/util/dnd-fallback.ts","../src/components/external/FileContextMenu-hooks.ts","../src/components/file-list/DnDFileListDragLayer.tsx","../src/types/dnd.types.ts","../src/components/internal/HotkeyListener.tsx","../src/components/external/FileNavbar.tsx","../src/components/external/FileNavbar-hooks.ts","../src/components/external/FolderChainButton.tsx","../src/util/dnd.ts","../src/components/file-list/FileEntry-hooks.tsx","../src/components/external/TextPlaceholder.tsx","../src/components/external/ToolbarButton.tsx","../src/types/action.types.ts","../src/util/file-actions.ts","../src/components/external/FileToolbar.tsx","../src/components/external/ToolbarDropdown.tsx","../src/components/external/ToolbarDropdownButton.tsx","../src/components/external/ToolbarInfo.tsx","../src/components/external/ToolbarSearch.tsx","../src/components/file-list/FileList.tsx","../src/components/file-list/FileListEmpty.tsx","../src/components/file-list/GridContainer.tsx","../src/components/file-list/FileEntry.tsx","../src/components/internal/ClickableWrapper.tsx","../src/components/internal/ClickableWrapper-hooks.tsx","../src/components/file-list/CompactEntry.tsx","../src/components/file-list/FileEntryName.tsx","../src/components/file-list/DnDFileEntry.tsx","../src/components/file-list/GridEntry.tsx","../src/components/file-list/GridEntryPreview.tsx","../src/components/file-list/FileThumbnail.tsx","../src/components/file-list/GridEntryDndIndicator.tsx","../src/components/file-list/ListEntry.tsx","../src/util/dotsInFiles.ts","../src/components/file-list/ListContainer.tsx","../src/components/external/FileContextMenu.tsx","../src/components/external/FullFileBrowser.tsx","../src/extensions/file-map.ts"],"sourcesContent":["import {\n    createMuiTheme,\n    ThemeProvider as MuiThemeProvider,\n} from '@material-ui/core/styles';\nimport merge from 'deepmerge';\nimport React, { ReactNode, useMemo } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { IntlProvider } from 'react-intl';\nimport { ThemeProvider } from 'react-jss';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport shortid from 'shortid';\n\nimport { useChonkyStore } from '../../redux/store';\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { defaultConfig } from '../../util/default-config';\nimport { getValueOrFallback } from '../../util/helpers';\nimport { useStaticValue } from '../../util/hooks-helpers';\nimport { ChonkyFormattersContext, defaultFormatters } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport {\n    darkThemeOverride,\n    lightTheme,\n    mobileThemeOverride,\n    useIsMobileBreakpoint,\n} from '../../util/styles';\nimport { ChonkyBusinessLogic } from '../internal/ChonkyBusinessLogic';\nimport { ChonkyIconPlaceholder } from '../internal/ChonkyIconPlaceholder';\nimport { ChonkyPresentationLayer } from '../internal/ChonkyPresentationLayer';\n\n// if (process.env.NODE_ENV === 'development') {\n//     const whyDidYouRender = require('@welldone-software/why-did-you-render');\n//     whyDidYouRender(React, {\n//         trackAllPureComponents: true,\n//     });\n// }\n\nexport const FileBrowser = React.forwardRef<\n    FileBrowserHandle,\n    FileBrowserProps & { children?: ReactNode }\n>((props, ref) => {\n    const { instanceId, iconComponent, children } = props;\n    const disableDragAndDrop = getValueOrFallback(\n        props.disableDragAndDrop,\n        defaultConfig.disableDragAndDrop,\n        'boolean'\n    );\n    const disableDragAndDropProvider = getValueOrFallback(\n        props.disableDragAndDropProvider,\n        defaultConfig.disableDragAndDropProvider,\n        'boolean'\n    );\n    const darkMode = getValueOrFallback(\n        props.darkMode,\n        defaultConfig.darkMode,\n        'boolean'\n    );\n    const i18n = getValueOrFallback(props.i18n, defaultConfig.i18n);\n    const formatters = useMemo(() => ({ ...defaultFormatters, ...i18n?.formatters }), [\n        i18n\n    ]);\n\n    const chonkyInstanceId = useStaticValue(() => instanceId ?? shortid.generate());\n    const store = useChonkyStore(chonkyInstanceId);\n\n    const isMobileBreakpoint = useIsMobileBreakpoint();\n    const theme = useMemo(() => {\n        const muiTheme = createMuiTheme({\n            palette: { type: darkMode ? 'dark' : 'light' },\n        });\n        const combinedTheme = merge(\n            muiTheme,\n            merge(lightTheme, darkMode ? darkThemeOverride : {})\n        );\n        return isMobileBreakpoint\n            ? merge(combinedTheme, mobileThemeOverride)\n            : combinedTheme;\n    }, [darkMode, isMobileBreakpoint]);\n\n    const chonkyComps = (\n        <>\n            <ChonkyBusinessLogic ref={ref} {...props} />\n            <ChonkyPresentationLayer>{children}</ChonkyPresentationLayer>\n        </>\n    );\n\n    return (\n        <IntlProvider locale=\"en\" defaultLocale=\"en\" {...i18n}>\n            <ChonkyFormattersContext.Provider value={formatters}>\n                <ReduxProvider store={store}>\n                    <ThemeProvider theme={theme}>\n                        <MuiThemeProvider theme={theme}>\n                            <ChonkyIconContext.Provider\n                                value={\n                                    iconComponent ??\n                                    defaultConfig.iconComponent ??\n                                    ChonkyIconPlaceholder\n                                }\n                            >\n                                {disableDragAndDrop || disableDragAndDropProvider ? (\n                                    chonkyComps\n                                ) : (\n                                    <DndProvider backend={HTML5Backend}>\n                                        {chonkyComps}\n                                    </DndProvider>\n                                )}\n                            </ChonkyIconContext.Provider>\n                        </MuiThemeProvider>\n                    </ThemeProvider>\n                </ReduxProvider>\n            </ChonkyFormattersContext.Provider>\n        </IntlProvider>\n    );\n});\nFileBrowser.displayName = 'FileBrowser';\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport { RootState } from '../types/redux.types';\nimport { useStaticValue } from '../util/hooks-helpers';\nimport { rootReducer } from './reducers';\nimport { initialRootState } from './state';\nimport { useStoreWatchers } from './watchers';\n\nexport const useChonkyStore = (chonkyInstanceId: string) => {\n    const store = useStaticValue(() => {\n        const preloadedState: RootState = {\n            ...initialRootState,\n            instanceId: chonkyInstanceId,\n        };\n\n        return configureStore({\n            preloadedState: preloadedState as any,\n            reducer: rootReducer,\n            middleware: getDefaultMiddleware =>\n                getDefaultMiddleware({\n                    serializableCheck: false,\n                }),\n            devTools: { name: `chonky_${chonkyInstanceId}` },\n        });\n    });\n    useStoreWatchers(store);\n    return store;\n};\n\n/**\n * Hook that can be used with parametrized selectors.\n */\nexport const useParamSelector = <Args extends Array<any>, Value>(\n    parametrizedSelector: (...args: Args) => (state: RootState) => Value,\n    ...selectorParams: Args\n) => {\n    const selector = useCallback(\n        (state: RootState) => parametrizedSelector(...selectorParams)(state),\n        // eslint-disable-next-line\n        [parametrizedSelector, ...selectorParams]\n    );\n    return useSelector(selector);\n};\n\n/**\n * DTE - DispatchThunkEffect. This method is used to decrease code duplication in\n * main Chonky method.\n */\nexport const useDTE = <Args extends Array<any>>(actionCreator: (...args: Args) => any, ...selectorParams: Args) => {\n    const dispatch = useDispatch();\n    useEffect(\n        () => {\n            dispatch(actionCreator(...selectorParams));\n        },\n        // eslint-disable-next-line\n        [dispatch, actionCreator, ...selectorParams]\n    );\n};\n\nexport const usePropReduxUpdate = <Payload extends any>(actionCreator: (payload: Payload) => any, payload: Payload) => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(actionCreator(payload));\n    }, [dispatch, actionCreator, payload]);\n};\n","import React, { useEffect, useRef, useState } from 'react';\n\nexport const useDebounce = <T>(\n    value: T,\n    delay: number\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return [debouncedValue, setDebouncedValue];\n};\n\nconst UNINITIALIZED_SENTINEL = {};\nexport const useStaticValue = <T>(factory: () => T): T => {\n    const valueRef = useRef<T>(UNINITIALIZED_SENTINEL as T);\n    if (valueRef.current === UNINITIALIZED_SENTINEL) valueRef.current = factory();\n    return valueRef.current;\n};\n\nexport const useInstanceVariable = <T>(value: T) => {\n    const ref = useRef(value);\n    useEffect(() => {\n        ref.current = value;\n    }, [ref, value]);\n    return ref;\n};\n","import { Nilable, Nullable } from 'tsdef';\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { GenericFileActionHandler } from '../types/action-handler.types';\nimport { FileActionMenuItem } from '../types/action-menus.types';\nimport { FileAction, FileActionMap } from '../types/action.types';\nimport { ContextMenuConfig } from '../types/context-menu.types';\nimport { FileViewConfig } from '../types/file-view.types';\nimport { FileArray, FileIdTrueMap, FileMap } from '../types/file.types';\nimport { OptionMap } from '../types/options.types';\nimport { RootState } from '../types/redux.types';\nimport { SortOrder } from '../types/sort.types';\nimport { ThumbnailGenerator } from '../types/thumbnails.types';\nimport { FileHelper } from '../util/file-helper';\nimport { sanitizeInputArray } from './files-transforms';\nimport { initialRootState } from './state';\n\nconst reducers = {\n    setExternalFileActionHandler(\n        state: RootState,\n        action: PayloadAction<Nilable<GenericFileActionHandler<FileAction>>>\n    ) {\n        state.externalFileActionHandler = action.payload ?? null;\n    },\n    setRawFileActions(state: RootState, action: PayloadAction<FileAction[] | any>) {\n        state.rawFileActions = action.payload;\n    },\n    setFileActionsErrorMessages(state: RootState, action: PayloadAction<string[]>) {\n        state.fileActionsErrorMessages = action.payload;\n    },\n    setFileActions(state: RootState, action: PayloadAction<FileAction[]>) {\n        const fileActionMap: FileActionMap = {};\n        action.payload.map(a => (fileActionMap[a.id] = a));\n        const fileIds = action.payload.map(a => a.id);\n\n        state.fileActionMap = fileActionMap as FileMap;\n        state.fileActionIds = fileIds;\n    },\n    updateFileActionMenuItems(state: RootState, action: PayloadAction<[FileActionMenuItem[], FileActionMenuItem[]]>) {\n        [state.toolbarItems, state.contextMenuItems] = action.payload;\n    },\n    setRawFolderChain(state: RootState, action: PayloadAction<FileArray | any>) {\n        const rawFolderChain = action.payload;\n        const { sanitizedArray: folderChain, errorMessages } = sanitizeInputArray('folderChain', rawFolderChain);\n        state.rawFolderChain = rawFolderChain;\n        state.folderChain = folderChain;\n        state.folderChainErrorMessages = errorMessages;\n    },\n    setRawFiles(state: RootState, action: PayloadAction<FileArray | any>) {\n        const rawFiles = action.payload;\n        const { sanitizedArray: files, errorMessages } = sanitizeInputArray('files', rawFiles);\n        state.rawFiles = rawFiles;\n        state.filesErrorMessages = errorMessages;\n\n        const fileMap: FileMap = {};\n        files.forEach((f: any) => {\n            if (f) fileMap[f.id] = f;\n        });\n        const fileIds = files.map((f: any) => (f ? f.id : null));\n        const cleanFileIds = fileIds.filter((f: any) => !!f) as string[];\n\n        state.fileMap = fileMap;\n        state.fileIds = fileIds;\n        state.cleanFileIds = cleanFileIds;\n\n        // Cleanup selection\n        for (const selectedFileId of Object.keys(state.selectionMap)) {\n            if (!fileMap[selectedFileId]) {\n                delete state.selectionMap[selectedFileId];\n            }\n        }\n    },\n    setSortedFileIds(state: RootState, action: PayloadAction<Nullable<string>[]>) {\n        state.sortedFileIds = action.payload;\n    },\n    setHiddenFileIds(state: RootState, action: PayloadAction<FileIdTrueMap>) {\n        state.hiddenFileIdMap = action.payload;\n\n        // Cleanup selection\n        for (const selectedFileId of Object.keys(state.selectionMap)) {\n            if (state.hiddenFileIdMap[selectedFileId]) {\n                delete state.selectionMap[selectedFileId];\n            }\n        }\n    },\n    setFocusSearchInput(state: RootState, action: PayloadAction<Nullable<() => void>>) {\n        state.focusSearchInput = action.payload;\n    },\n    setSearchString(state: RootState, action: PayloadAction<string>) {\n        state.searchString = action.payload;\n    },\n    selectAllFiles(state: RootState) {\n        state.fileIds\n            .filter(id => id && FileHelper.isSelectable(state.fileMap[id]))\n            .map(id => (id ? (state.selectionMap[id] = true) : null));\n    },\n    selectFiles(state: RootState, action: PayloadAction<{ fileIds: string[]; reset: boolean }>) {\n        if (state.disableSelection) return;\n        if (action.payload.reset) state.selectionMap = {};\n        action.payload.fileIds\n            .filter(id => id && FileHelper.isSelectable(state.fileMap[id]))\n            .map(id => (state.selectionMap[id] = true));\n    },\n    toggleSelection(state: RootState, action: PayloadAction<{ fileId: string; exclusive: boolean }>) {\n        if (state.disableSelection) return;\n        const oldValue = !!state.selectionMap[action.payload.fileId];\n        if (action.payload.exclusive) state.selectionMap = {};\n        if (oldValue) delete state.selectionMap[action.payload.fileId];\n        else if (FileHelper.isSelectable(state.fileMap[action.payload.fileId])) {\n            state.selectionMap[action.payload.fileId] = true;\n        }\n    },\n    clearSelection(state: RootState) {\n        if (state.disableSelection) return;\n        if (Object.keys(state.selectionMap).length !== 0) state.selectionMap = {};\n    },\n    setSelectionDisabled(state: RootState, action: PayloadAction<boolean>) {\n        state.disableSelection = action.payload;\n        if (Object.keys(state.selectionMap).length !== 0) state.selectionMap = {};\n    },\n    setFileViewConfig(state: RootState, action: PayloadAction<FileViewConfig>) {\n        state.fileViewConfig = action.payload;\n    },\n    setSort(state: RootState, action: PayloadAction<{ actionId: string; order: SortOrder }>) {\n        state.sortActionId = action.payload.actionId;\n        state.sortOrder = action.payload.order;\n    },\n    setOptionDefaults(state: RootState, action: PayloadAction<OptionMap>) {\n        for (const optionId of Object.keys(action.payload)) {\n            if (optionId in state.optionMap) continue;\n            state.optionMap[optionId] = action.payload[optionId];\n        }\n    },\n    toggleOption(state: RootState, action: PayloadAction<string>) {\n        state.optionMap[action.payload] = !state.optionMap[action.payload];\n    },\n    setThumbnailGenerator(state: RootState, action: PayloadAction<Nullable<ThumbnailGenerator>>) {\n        state.thumbnailGenerator = action.payload;\n    },\n    setDoubleClickDelay(state: RootState, action: PayloadAction<number>) {\n        state.doubleClickDelay = action.payload;\n    },\n    setDisableDragAndDrop(state: RootState, action: PayloadAction<boolean>) {\n        state.disableDragAndDrop = action.payload;\n    },\n    setClearSelectionOnOutsideClick(state: RootState, action: PayloadAction<boolean>) {\n        state.clearSelectionOnOutsideClick = action.payload;\n    },\n    setLastClickIndex(state: RootState, action: PayloadAction<Nullable<{ index: number; fileId: string }>>) {\n        state.lastClick = action.payload;\n    },\n    setContextMenuMounted(state: RootState, action: PayloadAction<boolean>) {\n        state.contextMenuMounted = action.payload;\n    },\n    showContextMenu(state: RootState, action: PayloadAction<ContextMenuConfig>) {\n        state.contextMenuConfig = action.payload;\n    },\n    hideContextMenu(state: RootState) {\n        if (!state.contextMenuConfig) return;\n        state.contextMenuConfig = null;\n    },\n};\n\nexport const { actions: reduxActions, reducer: rootReducer } = createSlice({\n    name: 'root',\n    initialState: initialRootState,\n    reducers,\n});\n","export class Logger {\n    public static error(...args: any[]): void {\n        // eslint-disable-next-line no-console\n        console.error('[Chonky runtime error]', ...args);\n    }\n\n    public static warn(...args: any[]): void {\n        // eslint-disable-next-line no-console\n        console.warn('[Chonky runtime warning]', ...args);\n    }\n\n    public static debug(...args: any[]): void {\n        // eslint-disable-next-line no-console\n        console.debug('[Chonky runtime debug]', ...args);\n    }\n\n    public static formatBullets(bullets: string[]): string {\n        return `\\n- ${bullets.join('\\n- ')}`;\n    }\n}\n","import { Nullable } from 'tsdef';\n\nimport { FileData } from '../types/file.types';\nimport { Logger } from './logger';\n\nexport class FileHelper {\n    public static isDirectory(file: Nullable<FileData>): file is FileData {\n        // Not a directory by default\n        return !!file && file.isDir === true;\n    }\n\n    public static isHidden(file: Nullable<FileData>): file is FileData {\n        // Not hidden by default\n        return !!file && file.isHidden === true;\n    }\n\n    public static isSymlink(file: Nullable<FileData>): file is FileData {\n        // Not a symlink by default\n        return !!file && file.isSymlink === true;\n    }\n\n    public static isEncrypted(file: Nullable<FileData>): file is FileData {\n        // Not encrypted by default\n        return !!file && file.isEncrypted === true;\n    }\n\n    public static isClickable(file: Nullable<FileData>): file is FileData {\n        // Clickable by default\n        return !!file;\n    }\n\n    public static isOpenable(file: Nullable<FileData>): file is FileData {\n        // Openable by default\n        return !!file && file.openable !== false;\n    }\n\n    public static isSelectable(file: Nullable<FileData>): file is FileData {\n        // Selectable by default\n        return !!file && file.selectable !== false;\n    }\n\n    public static isDraggable(file: Nullable<FileData>): file is FileData {\n        // File & folders are draggable by default, `null` is not\n        return !!file && file.draggable !== false;\n    }\n\n    public static isDroppable(file: Nullable<FileData>): file is FileData {\n        // Folders are droppable by default, files are not\n        if (!file) return false;\n        if (file.isDir && file.droppable !== false) return true;\n        return file.droppable === true;\n    }\n\n    public static isDndOpenable(file: Nullable<FileData>): file is FileData {\n        // Folders are DnD openable by default, files are not\n        if (!FileHelper.isOpenable(file)) return false;\n        if (file.isDir && file.dndOpenable !== false) return true;\n        return file.dndOpenable === true;\n    }\n\n    public static getModDate(file: Nullable<FileData>): Nullable<Date> {\n        if (!file || file.modDate === null || file.modDate === undefined) return null;\n        return FileHelper.parseDate(file.modDate);\n    }\n\n    public static parseDate(maybeDate: Date | string | any): Nullable<Date> {\n        if (typeof maybeDate === 'string' || typeof maybeDate === 'number') {\n            // We allow users to provide string and numerical representations of dates.\n            try {\n                return new Date(maybeDate);\n            } catch (error: any) {\n                Logger.error(\n                    `Could not convert provided string/number into a date: ${error.message} `,\n                    'Invalid value:',\n                    maybeDate\n                );\n            }\n        }\n        if (maybeDate instanceof Date && !isNaN(maybeDate.getTime())) {\n            // We only allow valid dates objects\n            return maybeDate;\n        }\n\n        // If we have an invalid date representation, we just return null.\n        Logger.warn('Unsupported date representation:', maybeDate);\n        return null;\n    }\n\n    public static getChildrenCount(file: Nullable<FileData>): Nullable<number> {\n        if (!file || typeof file.childrenCount !== 'number') return null;\n\n        return file.childrenCount;\n    }\n}\n","import { Nullable } from 'tsdef';\n\nimport { FileAction } from '../types/action.types';\nimport { FileArray } from '../types/file.types';\nimport { Logger } from '../util/logger';\n\ninterface SanitizeFiles {\n    (mode: 'files', rawArray: FileArray | any): {\n        sanitizedArray: FileArray;\n        errorMessages: string[];\n    };\n    (mode: 'folderChain', rawArray: Nullable<FileArray> | any): {\n        sanitizedArray: FileArray;\n        errorMessages: string[];\n    };\n    (mode: 'fileActions', rawArray: FileAction[] | any): {\n        sanitizedArray: FileAction[];\n        errorMessages: string[];\n    };\n}\n\nexport const sanitizeInputArray: SanitizeFiles = (mode: string, rawArray: any[]) => {\n    const sanitizedFiles = [];\n    const errorMessages: string[] = [];\n\n    if ((mode === 'folderChain' || mode === 'fileActions') && !rawArray) {\n        // Do nothing, we allow folder chain to be null.\n    } else if (!Array.isArray(rawArray)) {\n        errorMessages.push(\n            `Expected \"${mode}\" prop to be an array, got \"${typeof rawArray}\" instead.`\n        );\n    } else {\n        let nonObjectFileCount = 0;\n        let missingFieldFileCount = 0;\n        const seenIds = new Set<string>();\n        const duplicateIds = new Set<string>();\n\n        for (let i = 0; i < rawArray.length; ++i) {\n            const item = rawArray[i];\n            if (!item) {\n                if (mode === 'fileActions') nonObjectFileCount++;\n                else sanitizedFiles.push(null);\n            } else if (typeof item !== 'object') {\n                nonObjectFileCount++;\n            } else {\n                if (!item.id || (mode !== 'fileActions' && !item.name)) {\n                    missingFieldFileCount++;\n                } else if (seenIds.has(item.id)) {\n                    duplicateIds.add(item.id);\n                } else {\n                    seenIds.add(item.id);\n                    sanitizedFiles.push(item);\n                }\n            }\n        }\n\n        if (nonObjectFileCount) {\n            errorMessages.push(\n                `Detected ${nonObjectFileCount} file(s) of invalid type. Remember ` +\n                    `that \"files\" array should contain either objects or nulls.`\n            );\n        }\n        if (missingFieldFileCount) {\n            errorMessages.push(\n                `Detected ${missingFieldFileCount} file(s) that are missing the ` +\n                    `required fields. Remember that file object should define an ` +\n                    `\"id\" and a \"name\".`\n            );\n        }\n        if (duplicateIds.size > 0) {\n            const repeatedIdsString = '\"' + Array.from(duplicateIds).join('\", \"') + '\"';\n            errorMessages.push(\n                `Detected ${duplicateIds.size} file IDs that are used multiple ` +\n                    `times. Remember that each file should have a unique IDs. The ` +\n                    `following IDs were seen multiple times: ${repeatedIdsString}`\n            );\n        }\n    }\n\n    if (errorMessages.length > 0) {\n        const errorMessageString = '\\n- ' + errorMessages.join('\\n- ');\n        let arrayString: string;\n        let itemString: string;\n        if (mode === 'folderChain') {\n            arrayString = 'folder chain';\n            itemString = 'files';\n        } else if (mode === 'fileActions') {\n            arrayString = 'file actions';\n            itemString = 'file actions';\n        } else {\n            // mode === 'files'\n            arrayString = 'files';\n            itemString = 'files';\n        }\n\n        Logger.error(\n            `Errors were detected when sanitizing the ${arrayString} array. ` +\n                `Offending ${itemString} were removed from the array. Summary of ` +\n                `validation errors: ${errorMessageString}`\n        );\n    }\n\n    return {\n        sanitizedArray: sanitizedFiles,\n        errorMessages,\n    };\n};\n","import sort from 'fast-sort';\nimport FuzzySearch from 'fuzzy-search';\nimport { Nilable, Nullable } from 'tsdef';\n\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { OptionIds } from '../action-definitions/option-ids';\nimport { FileArray, FileData, FileFilter } from '../types/file.types';\nimport { RootState } from '../types/redux.types';\nimport { FileSortKeySelector, SortOrder } from '../types/sort.types';\nimport { FileHelper } from '../util/file-helper';\n\n// Raw selectors\nexport const selectInstanceId = (state: RootState) => state.instanceId;\nexport const selectExternalFileActionHandler = (state: RootState) => state.externalFileActionHandler;\n\nexport const selectFileActionMap = (state: RootState) => state.fileActionMap;\nexport const selectFileActionIds = (state: RootState) => state.fileActionIds;\nexport const selectFileActionData = (fileActionId: string) => (state: RootState) =>\n    selectFileActionMap(state)[fileActionId];\nexport const selectToolbarItems = (state: RootState) => state.toolbarItems;\nexport const selectContextMenuItems = (state: RootState) => state.contextMenuItems;\n\nexport const selectFolderChain = (state: RootState) => state.folderChain;\nexport const selectCurrentFolder = (state: RootState) => {\n    const folderChain = selectFolderChain(state);\n    const currentFolder = folderChain.length > 0 ? folderChain[folderChain.length - 1] : null;\n    return currentFolder;\n};\nexport const selectParentFolder = (state: RootState) => {\n    const folderChain = selectFolderChain(state);\n    const parentFolder = folderChain.length > 1 ? folderChain[folderChain.length - 2] : null;\n    return parentFolder;\n};\n\nexport const selectRawFiles = (state: RootState) => state.rawFiles;\nexport const selectFileMap = (state: RootState) => state.fileMap;\nexport const selectCleanFileIds = (state: RootState) => state.cleanFileIds;\nexport const selectFileData = (fileId: Nullable<string>) => (state: RootState) =>\n    fileId ? selectFileMap(state)[fileId] : null;\n\nexport const selectHiddenFileIdMap = (state: RootState) => state.hiddenFileIdMap;\nexport const selectHiddenFileCount = (state: RootState) => Object.keys(selectHiddenFileIdMap(state)).length;\n\nexport const selectFocusSearchInput = (state: RootState) => state.focusSearchInput;\nexport const selectSearchString = (state: RootState) => state.searchString;\n\nexport const selectSelectionMap = (state: RootState) => state.selectionMap;\nexport const selectSelectedFileIds = (state: RootState) => Object.keys(selectSelectionMap(state));\nexport const selectSelectionSize = (state: RootState) => selectSelectedFileIds(state).length;\nexport const selectIsFileSelected = (fileId: Nullable<string>) => (state: RootState) =>\n    !!fileId && !!selectSelectionMap(state)[fileId];\nexport const selectSelectedFiles = (state: RootState) => {\n    const fileMap = selectFileMap(state);\n    return Object.keys(selectSelectionMap(state)).map(id => fileMap[id]);\n};\nexport const selectSelectedFilesForAction = (fileActionId: string) => (state: RootState) => {\n    const { fileActionMap } = state;\n    const action = fileActionMap[fileActionId];\n    if (!action || !action.requiresSelection) return undefined;\n\n    return getSelectedFiles(state, action.fileFilter);\n};\nexport const selectSelectedFilesForActionCount = (fileActionId: string) => (state: RootState) =>\n    getSelectedFilesForAction(state, fileActionId)?.length;\nexport const selectDisableSelection = (state: RootState) => state.disableSelection;\n\nexport const selectFileViewConfig = (state: RootState) => state.fileViewConfig;\n\nexport const selectSortActionId = (state: RootState) => state.sortActionId;\nexport const selectSortOrder = (state: RootState) => state.sortOrder;\n\nexport const selectOptionMap = (state: RootState) => state.optionMap;\nexport const selectOptionValue = (optionId: string) => (state: RootState) => selectOptionMap(state)[optionId];\n\nexport const selectThumbnailGenerator = (state: RootState) => state.thumbnailGenerator;\nexport const selectDoubleClickDelay = (state: RootState) => state.doubleClickDelay;\nexport const selectIsDnDDisabled = (state: RootState) => state.disableDragAndDrop;\nexport const selectClearSelectionOnOutsideClick = (state: RootState) => state.clearSelectionOnOutsideClick;\n\nexport const selectContextMenuMounted = (state: RootState) => state.contextMenuMounted;\nexport const selectContextMenuConfig = (state: RootState) => state.contextMenuConfig;\nexport const selectContextMenuTriggerFile = (state: RootState) => {\n    const config = selectContextMenuConfig(state);\n    if (!config || !config.triggerFileId) return null;\n    const fileMap = selectFileMap(state);\n    return fileMap[config.triggerFileId] ?? null;\n};\n\n// Raw selectors\nconst getFileActionMap = (state: RootState) => state.fileActionMap;\nconst getOptionMap = (state: RootState) => state.optionMap;\nconst getFileMap = (state: RootState) => state.fileMap;\nconst getFileIds = (state: RootState) => state.fileIds;\nconst getCleanFileIds = (state: RootState) => state.cleanFileIds;\nconst getSortActionId = (state: RootState) => state.sortActionId;\nconst getSortOrder = (state: RootState) => state.sortOrder;\nconst getSearchString = (state: RootState) => state.searchString;\nconst _getLastClick = (state: RootState) => state.lastClick;\n\n// Memoized selectors\nconst makeGetAction = (fileActionSelector: (state: RootState) => Nullable<string>) =>\n    createSelector([getFileActionMap, fileActionSelector], (fileActionMap, fileActionId) =>\n        fileActionId && fileActionMap[fileActionId] ? fileActionMap[fileActionId] : null\n    );\nconst makeGetOptionValue = (optionId: string, defaultValue: any = undefined) =>\n    createSelector([getOptionMap], optionMap => {\n        const value = optionMap[optionId];\n        if (value === undefined) {\n            return defaultValue;\n        }\n        return value;\n    });\nconst makeGetFiles = (fileIdsSelector: (state: RootState) => Nullable<string>[]) =>\n    createSelector(\n        [getFileMap, fileIdsSelector],\n        (fileMap, fileIds): FileArray => fileIds.map(fileId => (fileId && fileMap[fileId] ? fileMap[fileId] : null))\n    );\nconst getSortedFileIds = createSelector(\n    [\n        getFileIds,\n        getSortOrder,\n        makeGetFiles(getFileIds),\n        makeGetAction(getSortActionId),\n        makeGetOptionValue(OptionIds.ShowFoldersFirst, false),\n    ],\n    (fileIds, sortOrder, files, sortAction, showFolderFirst) => {\n        if (!sortAction) {\n            // We allow users to set the sort action ID to `null` if they want to use their\n            // own sorting mechanisms instead of relying on Chonky built-in sort.\n            return fileIds;\n        }\n\n        const prepareSortKeySelector = (selector: FileSortKeySelector) => (file: Nullable<FileData>) => selector(file);\n\n        const sortFunctions: {\n            asc?: (file: FileData) => any;\n            desc?: (file: FileData) => any;\n        }[] = [];\n\n        if (showFolderFirst) {\n            // If option is undefined (relevant actions is not enabled), we don't show\n            // folders first.\n            sortFunctions.push({\n                desc: prepareSortKeySelector(FileHelper.isDirectory),\n            });\n        }\n        if (sortAction.sortKeySelector) {\n            const configKeyName = sortOrder === SortOrder.ASC ? 'asc' : 'desc';\n            sortFunctions.push({\n                [configKeyName]: prepareSortKeySelector(sortAction.sortKeySelector),\n            });\n        }\n        if (sortFunctions.length === 0) return fileIds;\n\n        // We copy the array because `fast-sort` mutates it\n        const sortedFileIds = sort([...files])\n            .by(sortFunctions as any)\n            .map(file => (file ? file.id : null));\n        return sortedFileIds;\n    }\n);\nconst getSearcher = createSelector(\n    [makeGetFiles(getCleanFileIds)],\n    cleanFiles => new FuzzySearch(cleanFiles as FileData[], ['name'], { caseSensitive: false })\n);\nconst getSearchFilteredFileIds = createSelector(\n    [getCleanFileIds, getSearchString, getSearcher],\n    (cleanFileIds, searchString, searcher) =>\n        searchString ? searcher.search(searchString).map(f => f.id) : cleanFileIds\n);\nconst getHiddenFileIdMap = createSelector(\n    [getSearchFilteredFileIds, makeGetFiles(getCleanFileIds), makeGetOptionValue(OptionIds.ShowHiddenFiles)],\n    (searchFilteredFileIds, cleanFiles, showHiddenFiles) => {\n        const searchFilteredFileIdsSet = new Set(searchFilteredFileIds);\n        const hiddenFileIdMap: any = {};\n        cleanFiles.forEach((file: any) => {\n            if (!file) return;\n            else if (!searchFilteredFileIdsSet.has(file.id)) {\n                // Hidden by search\n                hiddenFileIdMap[file.id] = true;\n            } else if (!showHiddenFiles && FileHelper.isHidden(file)) {\n                // Hidden by options\n                hiddenFileIdMap[file.id] = true;\n            }\n        });\n        return hiddenFileIdMap;\n    }\n);\nconst getDisplayFileIds = createSelector(\n    [getSortedFileIds, getHiddenFileIdMap],\n    /** Returns files that will actually be shown to the user. */\n    (sortedFileIds, hiddenFileIdMap) => sortedFileIds.filter(id => !id || !hiddenFileIdMap[id])\n);\nconst getLastClickIndex = createSelector(\n    [_getLastClick, getSortedFileIds],\n    /** Returns the last click index after ensuring it is actually still valid. */\n    (lastClick, displayFileIds) => {\n        if (\n            !lastClick ||\n            lastClick.index > displayFileIds.length - 1 ||\n            lastClick.fileId != displayFileIds[lastClick.index]\n        ) {\n            return null;\n        }\n        return lastClick.index;\n    }\n);\n\nexport const selectors = {\n    // Raw selectors\n    getFileActionMap,\n    getOptionMap,\n    getFileMap,\n    getFileIds,\n    getCleanFileIds,\n    getSortActionId,\n    getSortOrder,\n    getSearchString,\n    _getLastClick,\n\n    // Memoized selectors\n    getSortedFileIds,\n    getSearcher,\n    getSearchFilteredFileIds,\n    getHiddenFileIdMap,\n    getDisplayFileIds,\n    getLastClickIndex,\n\n    // Parametrized selectors\n    makeGetAction,\n    makeGetOptionValue,\n    makeGetFiles,\n};\n\n// Selectors meant to be used outside of Redux code\nexport const getFileData = (state: RootState, fileId: Nullable<string>) =>\n    fileId ? selectFileMap(state)[fileId] : null;\nexport const getIsFileSelected = (state: RootState, file: FileData) => {\n    // !!! We deliberately don't use `FileHelper.isSelectable` here as we want to\n    //     reflect the state of Redux store accurately.\n    return !!selectSelectionMap(state)[file.id];\n};\nexport const getSelectedFiles = (state: RootState, ...filters: Nilable<FileFilter>[]) => {\n    const { fileMap, selectionMap } = state;\n\n    const selectedFiles = Object.keys(selectionMap).map(id => fileMap[id]);\n    const filteredSelectedFiles = filters.reduce(\n        (prevFiles, filter) => (filter ? prevFiles.filter(filter) : prevFiles),\n        selectedFiles\n    );\n    return filteredSelectedFiles;\n};\nexport const getSelectedFilesForAction = (state: RootState, fileActionId: string) =>\n    selectSelectedFilesForAction(fileActionId)(state);\n","/**\n * We have option IDs in a separate file to avoid circular deps...\n */\nexport const OptionIds = {\n    ShowHiddenFiles: 'show_hidden_files',\n    ShowFoldersFirst: 'show_folders_first',\n    DarkMode: 'dark_mode',\n};\n","import { Nilable } from 'tsdef';\n\nimport { ChonkyActions, DefaultFileActions, EssentialFileActions } from '../../action-definitions/index';\nimport { FileActionGroup, FileActionMenuItem } from '../../types/action-menus.types';\nimport { FileAction } from '../../types/action.types';\nimport { ChonkyThunk } from '../../types/redux.types';\nimport { SortOrder } from '../../types/sort.types';\nimport { sanitizeInputArray } from '../files-transforms';\nimport { reduxActions } from '../reducers';\nimport { selectCleanFileIds, selectFileMap, selectHiddenFileIdMap, selectSelectionMap } from '../selectors';\n\n/**\n * Merges multiple file action arrays into one while removing duplicates\n */\nconst mergeFileActionsArrays = (...fileActionArrays: FileAction[][]): FileAction[] => {\n    const seenActionIds = new Set<string>();\n    const addToSeen = (a: FileAction) => !!seenActionIds.add(a.id);\n    const wasNotSeen = (a: FileAction) => !seenActionIds.has(a.id);\n\n    const duplicateFreeArrays = fileActionArrays.map(arr => {\n        const duplicateFreeArray = arr.filter(wasNotSeen);\n        duplicateFreeArray.map(addToSeen);\n        return duplicateFreeArray;\n    });\n    return new Array<FileAction>().concat(...duplicateFreeArrays);\n};\n\nexport const thunkUpdateRawFileActions = (\n    rawFileActions: FileAction[] | any,\n    disableDefaultFileActions: Nilable<boolean | string[]>\n): ChonkyThunk => dispatch => {\n    const { sanitizedArray, errorMessages } = sanitizeInputArray('fileActions', rawFileActions);\n\n    // Add default actions unless user disabled them\n    let defaultActionsToAdd: FileAction[];\n    if (Array.isArray(disableDefaultFileActions)) {\n        const disabledActionIds = new Set(disableDefaultFileActions);\n        defaultActionsToAdd = DefaultFileActions.filter(action => !disabledActionIds.has(action.id));\n    } else if (disableDefaultFileActions) {\n        defaultActionsToAdd = [];\n    } else {\n        defaultActionsToAdd = DefaultFileActions;\n    }\n\n    const fileActions = mergeFileActionsArrays(sanitizedArray, EssentialFileActions, defaultActionsToAdd);\n    const optionDefaults: any = {};\n    fileActions.map(a => (a.option ? (optionDefaults[a.option.id] = a.option.defaultValue) : null));\n\n    dispatch(reduxActions.setRawFileActions(rawFileActions));\n    dispatch(reduxActions.setFileActionsErrorMessages(errorMessages));\n    dispatch(reduxActions.setFileActions(fileActions));\n    dispatch(reduxActions.setOptionDefaults(optionDefaults));\n    dispatch(thunkUpdateToolbarNContextMenuItems(fileActions));\n};\n\nexport const thunkUpdateToolbarNContextMenuItems = (fileActions: FileAction[]): ChonkyThunk => dispatch => {\n    const excludedToolbarFileActionIds = new Set<string>([\n        // TODO: Move decision to exclude actions somewhere else, as users' custom\n        //  components might not give these actions special treatment like Chonky does.\n        ChonkyActions.OpenParentFolder.id,\n    ]);\n\n    type SeenGroupMap = { [groupName: string]: FileActionGroup };\n\n    const toolbarItems: FileActionMenuItem[] = [];\n    const seenToolbarGroups: SeenGroupMap = {};\n\n    const contextMenuItems: FileActionMenuItem[] = [];\n    const seenContextMenuGroups: SeenGroupMap = {};\n\n    const getGroup = (itemArray: FileActionMenuItem[], seenMap: SeenGroupMap, groupName: string): FileActionGroup => {\n        if (seenMap[groupName]) return seenMap[groupName];\n        const group: FileActionGroup = { name: groupName, fileActionIds: [] };\n        itemArray.push(group);\n        seenMap[groupName] = group;\n        return group;\n    };\n\n    for (const action of fileActions) {\n        const button = action.button;\n        if (!button) continue;\n\n        if (button.toolbar && !excludedToolbarFileActionIds.has(action.id)) {\n            if (button.group) {\n                const group = getGroup(toolbarItems, seenToolbarGroups, button.group);\n                group.fileActionIds.push(action.id);\n            } else {\n                toolbarItems.push(action.id);\n            }\n        }\n\n        if (button.contextMenu) {\n            if (button.group) {\n                const group = getGroup(contextMenuItems, seenContextMenuGroups, button.group);\n                group.fileActionIds.push(action.id);\n            } else {\n                contextMenuItems.push(action.id);\n            }\n        }\n    }\n\n    dispatch(reduxActions.updateFileActionMenuItems([toolbarItems, contextMenuItems]));\n};\n\nexport const thunkUpdateDefaultFileViewActionId = (fileActionId: Nilable<string>): ChonkyThunk => (\n    dispatch,\n    getState\n) => {\n    const { fileActionMap } = getState();\n    const action = fileActionId ? fileActionMap[fileActionId] : null;\n    if (action && action.fileViewConfig) {\n        dispatch(reduxActions.setFileViewConfig(action.fileViewConfig));\n    }\n};\n\nexport const thunkActivateSortAction = (fileActionId: Nilable<string>): ChonkyThunk => (dispatch, getState) => {\n    if (!fileActionId) return;\n\n    const { sortActionId: oldActionId, sortOrder: oldOrder, fileActionMap } = getState();\n    const action = fileActionMap[fileActionId];\n    if (!action || !action.sortKeySelector) return;\n\n    let order = oldOrder === SortOrder.DESC ? SortOrder.DESC : SortOrder.ASC;\n    if (oldActionId !== fileActionId) {\n        order = SortOrder.ASC;\n    }\n\n    dispatch(reduxActions.setSort({ actionId: fileActionId, order: order }));\n};\n\nexport const thunkApplySelectionTransform = (action: FileAction): ChonkyThunk => (dispatch, getState) => {\n    const selectionTransform = action.selectionTransform;\n    if (!selectionTransform) return;\n\n    const state = getState();\n    const prevSelection = new Set<string>(Object.keys(selectSelectionMap(state)));\n    const hiddenFileIds = new Set<string>(Object.keys(selectHiddenFileIdMap(state)));\n\n    const newSelection = selectionTransform({\n        prevSelection,\n        fileIds: selectCleanFileIds(state),\n        fileMap: selectFileMap(state),\n        hiddenFileIds,\n    });\n    if (!newSelection) return;\n\n    if (newSelection.size === 0) {\n        dispatch(reduxActions.clearSelection());\n    } else {\n        dispatch(reduxActions.selectFiles({ fileIds: Array.from(newSelection), reset: true }));\n    }\n};\n","import { MaybePromise, Undefinable } from 'tsdef';\n\nimport { FileActionData, FileActionState } from '../../types/action-handler.types';\nimport { FileAction } from '../../types/action.types';\nimport { ChonkyDispatch, ChonkyThunk } from '../../types/redux.types';\nimport { Logger } from '../../util/logger';\nimport { reduxActions } from '../reducers';\nimport {\n    selectContextMenuTriggerFile, selectExternalFileActionHandler, selectFileActionMap,\n    selectInstanceId, selectSelectedFiles\n} from '../selectors';\nimport { thunkActivateSortAction, thunkApplySelectionTransform } from './file-actions.thunks';\n\n/**\n * Thunk that dispatches actions to the external (user-provided) action handler.\n */\nexport const thunkDispatchFileAction = (data: FileActionData<FileAction>): ChonkyThunk => (_dispatch, getState) => {\n    Logger.debug(`FILE ACTION DISPATCH: [${data.id}]`, 'data:', data);\n    const state = getState();\n    const action = selectFileActionMap(state)[data.id];\n    const externalFileActionHandler = selectExternalFileActionHandler(state);\n    if (action) {\n        if (externalFileActionHandler) {\n            Promise.resolve(externalFileActionHandler(data)).catch((error: any) =>\n                Logger.error(`User-defined file action handler threw an error: ${error.message}`)\n            );\n        }\n    } else {\n        Logger.warn(\n            `Internal components dispatched the \"${data.id}\" file action, but such ` + `action was not registered.`\n        );\n    }\n};\n\n/**\n * Thunk that is used by internal components (and potentially the user) to \"request\"\n * actions. When action is requested, Chonky \"prepares\" the action data by extracting it\n * from Redux state. Once action data is ready, Chonky executes some side effect and/or\n * dispatches the action to the external action handler.\n */\nexport const thunkRequestFileAction = <Action extends FileAction>(\n    action: Action,\n    payload: Action['__payloadType']\n): ChonkyThunk => (dispatch, getState) => {\n    Logger.debug(`FILE ACTION REQUEST: [${action.id}]`, 'action:', action, 'payload:', payload);\n    const state = getState();\n    const instanceId = selectInstanceId(state);\n\n    if (!selectFileActionMap(state)[action.id]) {\n        Logger.warn(\n            `The action \"${action.id}\" was requested, but it is not registered. The ` +\n                `action will still be dispatched, but this might indicate a bug in ` +\n                `the code. Please register your actions by passing them to ` +\n                `\"fileActions\" prop.`\n        );\n    }\n\n    // Determine files for the action if action requires selection\n    const selectedFiles = selectSelectedFiles(state);\n    const selectedFilesForAction = action.fileFilter ? selectedFiles.filter(action.fileFilter) : selectedFiles;\n    if (action.requiresSelection && selectedFilesForAction.length === 0) {\n        Logger.warn(\n            `Internal components requested the \"${action.id}\" file ` +\n                `action, but the selection for this action was empty. This ` +\n                `might a bug in the code of the presentational components.`\n        );\n        return;\n    }\n\n    const contextMenuTriggerFile = selectContextMenuTriggerFile(state);\n    const actionState: FileActionState<{}> = {\n        instanceId,\n        selectedFiles,\n        selectedFilesForAction,\n        contextMenuTriggerFile,\n    };\n\n    // === Update sort state if necessary\n    const sortKeySelector = action.sortKeySelector;\n    if (sortKeySelector) dispatch(thunkActivateSortAction(action.id));\n\n    // === Update file view state if necessary\n    const fileViewConfig = action.fileViewConfig;\n    if (fileViewConfig) dispatch(reduxActions.setFileViewConfig(fileViewConfig));\n\n    // === Update option state if necessary\n    const option = action.option;\n    if (option) dispatch(reduxActions.toggleOption(option.id));\n\n    // === Apply selection transform if necessary\n    const selectionTransform = action.selectionTransform;\n    if (selectionTransform) dispatch(thunkApplySelectionTransform(action));\n\n    // Apply the effect\n    const effect = action.effect;\n    let maybeEffectPromise: MaybePromise<boolean | undefined> = undefined;\n    if (effect) {\n        try {\n            maybeEffectPromise = effect({\n                action,\n                payload,\n                state: actionState,\n                reduxDispatch: dispatch,\n                getReduxState: getState,\n            }) as MaybePromise<boolean | undefined>;\n        } catch (error: any) {\n            Logger.error(`User-defined effect function for action ${action.id} threw an ` + `error: ${error.message}`);\n        }\n    }\n\n    // Dispatch the action to user code. Deliberately call it after all other\n    // operations are over.\n    return Promise.resolve(maybeEffectPromise)\n        .then(effectResult => {\n            const data: FileActionData<Action> = {\n                id: action.id,\n                action,\n                payload,\n                state: actionState,\n            };\n            triggerDispatchAfterEffect(dispatch, data, effectResult);\n        })\n        .catch(error => {\n            Logger.error(\n                `User-defined effect function for action ${action.id} returned a ` +\n                    `promise that was rejected: ${error.message}`\n            );\n            const data: FileActionData<Action> = {\n                id: action.id,\n                action,\n                payload,\n                state: actionState,\n            };\n            triggerDispatchAfterEffect(dispatch, data, undefined);\n        });\n};\n\nexport const triggerDispatchAfterEffect = <Action extends FileAction>(\n    dispatch: ChonkyDispatch,\n    data: FileActionData<Action>,\n    effectResult: Undefinable<boolean>\n) => {\n    const preventDispatch = effectResult === true;\n    if (!preventDispatch) dispatch(thunkDispatchFileAction(data));\n};\n","export enum FileViewMode {\n    List = 'list',\n    Compact = 'compact',\n    Grid = 'grid',\n}\n\nexport type FileViewConfigList = {\n    mode: FileViewMode.List;\n    entryHeight: number;\n};\n\nexport type FileViewConfigGrid = {\n    mode: FileViewMode.Compact | FileViewMode.Grid;\n    entryWidth: number;\n    entryHeight: number;\n};\n\nexport type FileViewConfig = FileViewConfigList | FileViewConfigGrid;\n","import React from 'react';\n\nexport enum ChonkyIconName {\n    // Misc\n    loading = 'loading',\n    dropdown = 'dropdown',\n    placeholder = 'placeholder',\n\n    // File Actions: Drag & drop\n    dndDragging = 'dndDragging',\n    dndCanDrop = 'dndCanDrop',\n    dndCannotDrop = 'dndCannotDrop',\n\n    // File Actions: File operations\n    openFiles = 'openFiles',\n    openParentFolder = 'openParentFolder',\n    copy = 'copy',\n    paste = 'paste',\n    share = 'share',\n    search = 'search',\n    selectAllFiles = 'selectAllFiles',\n    clearSelection = 'clearSelection',\n\n    // File Actions: Sorting & options\n    sortAsc = 'sortAsc',\n    sortDesc = 'sortDesc',\n    toggleOn = 'toggleOn',\n    toggleOff = 'toggleOff',\n\n    // File Actions: File Views\n    list = 'list',\n    compact = 'compact',\n    smallThumbnail = 'smallThumbnail',\n    largeThumbnail = 'largeThumbnail',\n\n    // File Actions: Unsorted\n    folder = 'folder',\n    folderCreate = 'folderCreate',\n    folderOpen = 'folderOpen',\n    folderChainSeparator = 'folderChainSeparator',\n    download = 'download',\n    upload = 'upload',\n    trash = 'trash',\n    fallbackIcon = 'fallbackIcon',\n\n    // File modifiers\n    symlink = 'symlink',\n    hidden = 'hidden',\n\n    // Generic file types\n    file = 'file',\n    license = 'license',\n    code = 'code',\n    config = 'config',\n    model = 'model',\n    database = 'database',\n    text = 'text',\n    archive = 'archive',\n    image = 'image',\n    video = 'video',\n    info = 'info',\n    key = 'key',\n    lock = 'lock',\n    music = 'music',\n    terminal = 'terminal',\n    users = 'users',\n\n    // OS file types\n    linux = 'linux',\n    ubuntu = 'ubuntu',\n    windows = 'windows',\n\n    // Programming language file types\n    rust = 'rust',\n    python = 'python',\n    nodejs = 'nodejs',\n    php = 'php',\n\n    // Development tools file types\n    git = 'git',\n\n    // Brands file types\n    adobe = 'adobe',\n\n    // Other program file types\n    pdf = 'pdf',\n    excel = 'excel',\n    word = 'word',\n    flash = 'flash',\n}\n\nexport interface FileIconData {\n    icon: ChonkyIconName | string;\n    colorCode: number;\n}\n\nexport interface ChonkyIconProps {\n    icon: ChonkyIconName | string;\n    spin?: boolean;\n    className?: string;\n    fixedWidth?: boolean;\n    style?: React.CSSProperties;\n    file?: object | null;\n}\n","// Used in React hooks to indicate empty deps are intentional.\nimport { MaybePromise, Nullable, WritableProps } from 'tsdef';\n\nimport { FileAction, FileActionEffect } from '../types/action.types';\nimport { Logger } from './logger';\n\n// Used in contexts that need to provide some default value for a function.\n// eslint-disable-next-line no-unused-vars,@typescript-eslint/no-unused-vars\nexport const NOOP_FUNCTION = (...args: any[]) => {\n    Logger.warn(\n        `The \"NOOP_FUNCTION\" from the constants module was called. ` +\n            `This can indicate a bug in one of the components. Supplied args:`,\n        args\n    );\n};\n\nexport const isPromise = <T>(value: MaybePromise<T> | any): value is Promise<T> => {\n    if (typeof value !== 'object' || !value) return false;\n    const then = (value as Promise<T>).then;\n    return then && typeof then === 'function';\n};\n\nexport const defineFileAction = <Action extends FileAction>(\n    action: Action,\n    effect?: FileActionEffect<FileAction>\n): WritableProps<Action> => {\n    if (action.__payloadType !== undefined && (action.hotkeys || action.button)) {\n        const errorMessage =\n            `Invalid definition was provided for file action \"${action.id}\". Actions ` +\n            `that specify hotkeys or buttons cannot define a payload type. If ` +\n            `your application requires this functionality, define two actions ` +\n            `and chain them using effects.`;\n        Logger.error(errorMessage);\n        throw new Error(errorMessage);\n    }\n\n    action.effect = effect;\n    return action;\n};\n\n/**\n * Recursively check the current element and the parent elements, going bottom-up.\n * Returns the first element to match the predicate, otherwise returns null if such\n * element is not found.\n */\nexport const findElementAmongAncestors = (\n    maybeElement: HTMLElement | any,\n    predicate: (maybeElement: HTMLElement | any) => boolean\n): Nullable<HTMLElement> => {\n    if (!maybeElement) return maybeElement;\n\n    if (predicate(maybeElement)) return maybeElement;\n\n    if (maybeElement.parentElement) {\n        return findElementAmongAncestors(maybeElement.parentElement, predicate);\n    }\n\n    return null;\n};\n\nexport const elementIsInsideButton = (buttonCandidate: HTMLElement | any): boolean => {\n    return !!findElementAmongAncestors(\n        buttonCandidate,\n        (element: any) => element.tagName && element.tagName.toLowerCase() === 'button'\n    );\n};\n\nexport const getValueOrFallback = <T extends any>(\n    value: T | undefined,\n    fallback: T,\n    desiredType?: 'boolean' | 'string' | 'number'\n): NonNullable<T> => {\n    if (desiredType) {\n        return (typeof value === desiredType ? value : fallback) as NonNullable<T>;\n    }\n    return (value !== undefined ? value : fallback) as NonNullable<T>;\n};\n","import { ChonkyThunk } from '../../types/redux.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { reduxActions } from '../reducers';\nimport { selectors } from '../selectors';\n\nexport const reduxThunks = {\n    selectRange: (params: {\n        rangeStart: number;\n        rangeEnd: number;\n        reset?: boolean;\n    }): ChonkyThunk => (dispatch, getState) => {\n        const state = getState();\n        if (state.disableSelection) return;\n        const displayFileIds = selectors.getDisplayFileIds(state);\n        const fileIdsToSelect = displayFileIds\n            .slice(params.rangeStart, params.rangeEnd + 1)\n            .filter(id => id && FileHelper.isSelectable(state.fileMap[id])) as string[];\n        dispatch(\n            reduxActions.selectFiles({\n                fileIds: fileIdsToSelect,\n                reset: !!params.reset,\n            })\n        );\n    },\n};\n","import { reduxActions } from '../redux/reducers';\nimport {\n    getFileData, getIsFileSelected, selectDisableSelection, selectors, selectParentFolder,\n    selectSelectionSize\n} from '../redux/selectors';\nimport { reduxThunks } from '../redux/thunks';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport {\n    ChangeSelectionPayload, EndDragNDropPayload, KeyboardClickFilePayload, MouseClickFilePayload,\n    MoveFilesPayload, OpenFileContextMenuPayload, OpenFilesPayload, StartDragNDropPayload\n} from '../types/action-payloads.types';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { FileHelper } from '../util/file-helper';\nimport { defineFileAction } from '../util/helpers';\nimport { Logger } from '../util/logger';\nimport { ChonkyActions } from './index';\n\nexport const EssentialActions = {\n    /**\n     * Action that is dispatched when the user clicks on a file entry using their mouse.\n     * Both single clicks and double clicks trigger this action.\n     */\n    MouseClickFile: defineFileAction(\n        {\n            id: 'mouse_click_file',\n            __payloadType: {} as MouseClickFilePayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            if (payload.clickType === 'double') {\n                if (FileHelper.isOpenable(payload.file)) {\n                    reduxDispatch(\n                        thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                            targetFile: payload.file,\n\n                            // To simulate Windows Explorer and Nautilus behaviour,\n                            // a double click on a file only opens that file even if\n                            // there is a selection.\n                            files: [payload.file],\n                        })\n                    );\n                }\n            } else {\n                // We're dealing with a single click\n\n                const disableSelection = selectDisableSelection(getReduxState());\n                if (FileHelper.isSelectable(payload.file) && !disableSelection) {\n                    if (payload.ctrlKey) {\n                        // Multiple selection\n                        reduxDispatch(\n                            reduxActions.toggleSelection({\n                                fileId: payload.file.id,\n                                exclusive: false,\n                            })\n                        );\n                        reduxDispatch(\n                            reduxActions.setLastClickIndex({\n                                index: payload.fileDisplayIndex,\n                                fileId: payload.file.id,\n                            })\n                        );\n                    } else if (payload.shiftKey) {\n                        // Range selection\n                        const lastClickIndex = selectors.getLastClickIndex(getReduxState());\n                        if (typeof lastClickIndex === 'number') {\n                            // We have the index of the previous click\n                            let rangeStart = lastClickIndex;\n                            let rangeEnd = payload.fileDisplayIndex;\n                            if (rangeStart > rangeEnd) {\n                                [rangeStart, rangeEnd] = [rangeEnd, rangeStart];\n                            }\n\n                            reduxDispatch(reduxThunks.selectRange({ rangeStart, rangeEnd }));\n                        } else {\n                            // Since we can't do a range selection, do a\n                            // multiple selection\n                            reduxDispatch(\n                                reduxActions.toggleSelection({\n                                    fileId: payload.file.id,\n                                    exclusive: false,\n                                })\n                            );\n                            reduxDispatch(\n                                reduxActions.setLastClickIndex({\n                                    index: payload.fileDisplayIndex,\n                                    fileId: payload.file.id,\n                                })\n                            );\n                        }\n                    } else {\n                        // Exclusive selection\n                        reduxDispatch(\n                            reduxActions.toggleSelection({\n                                fileId: payload.file.id,\n                                exclusive: true,\n                            })\n                        );\n                        reduxDispatch(\n                            reduxActions.setLastClickIndex({\n                                index: payload.fileDisplayIndex,\n                                fileId: payload.file.id,\n                            })\n                        );\n                    }\n                } else {\n                    if (!payload.ctrlKey && !disableSelection) {\n                        reduxDispatch(reduxActions.clearSelection());\n                    }\n                    reduxDispatch(\n                        reduxActions.setLastClickIndex({\n                            index: payload.fileDisplayIndex,\n                            fileId: payload.file.id,\n                        })\n                    );\n                }\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when the user \"clicks\" on a file using their keyboard.\n     * Using Space and Enter keys counts as clicking.\n     */\n    KeyboardClickFile: defineFileAction(\n        {\n            id: 'keyboard_click_file',\n            __payloadType: {} as KeyboardClickFilePayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            reduxDispatch(\n                reduxActions.setLastClickIndex({\n                    index: payload.fileDisplayIndex,\n                    fileId: payload.file.id,\n                })\n            );\n            if (payload.enterKey) {\n                // We only dispatch the Open Files action here when the selection is\n                // empty. Otherwise, `Enter` key presses are handled by the\n                // hotkey manager for the Open Files action.\n                if (selectSelectionSize(getReduxState()) === 0) {\n                    reduxDispatch(\n                        thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                            targetFile: payload.file,\n                            files: [payload.file],\n                        })\n                    );\n                }\n            } else if (payload.spaceKey && FileHelper.isSelectable(payload.file)) {\n                reduxDispatch(\n                    reduxActions.toggleSelection({\n                        fileId: payload.file.id,\n                        exclusive: payload.ctrlKey,\n                    })\n                );\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when user starts dragging some file.\n     */\n    StartDragNDrop: defineFileAction(\n        {\n            id: 'start_drag_n_drop',\n            __payloadType: {} as StartDragNDropPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            const file = payload.draggedFile;\n            if (!getIsFileSelected(getReduxState(), file)) {\n                if (FileHelper.isSelectable(file)) {\n                    reduxDispatch(\n                        reduxActions.selectFiles({\n                            fileIds: [file.id],\n                            reset: true,\n                        })\n                    );\n                }\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when user either cancels the drag & drop interaction,\n     * or drops a file somewhere.\n     */\n    EndDragNDrop: defineFileAction(\n        {\n            id: 'end_drag_n_drop',\n            __payloadType: {} as EndDragNDropPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            if (getIsFileSelected(getReduxState(), payload.destination)) {\n                // Can't drop a selection into itself\n                return;\n            }\n\n            const { draggedFile, selectedFiles } = payload as EndDragNDropPayload;\n            const droppedFiles = selectedFiles.length > 0 ? selectedFiles : [draggedFile];\n            reduxDispatch(\n                thunkRequestFileAction(ChonkyActions.MoveFiles, {\n                    ...payload,\n                    files: droppedFiles,\n                })\n            );\n        }\n    ),\n    /**\n     * Action that is dispatched when user moves files from one folder to another,\n     * usually by dragging & dropping some files into the folder.\n     */\n    MoveFiles: defineFileAction({\n        id: 'move_files',\n        __payloadType: {} as MoveFilesPayload,\n    } as const),\n    /**\n     * Action that is dispatched when the selection changes for any reason.\n     */\n    ChangeSelection: defineFileAction({\n        id: 'change_selection',\n        __payloadType: {} as ChangeSelectionPayload,\n    } as const),\n    /**\n     * Action that is dispatched when user wants to open some files. This action is\n     * often triggered by other actions.\n     */\n    OpenFiles: defineFileAction({\n        id: 'open_files',\n        __payloadType: {} as OpenFilesPayload,\n    } as const),\n    /**\n     * Action that is triggered when user wants to go up a directory.\n     */\n    OpenParentFolder: defineFileAction(\n        {\n            id: 'open_parent_folder',\n            hotkeys: ['backspace'],\n            button: {\n                name: 'Go up a directory',\n                toolbar: true,\n                contextMenu: false,\n                icon: ChonkyIconName.openParentFolder,\n                iconOnly: true,\n            },\n        } as const,\n        ({ reduxDispatch, getReduxState }) => {\n            const parentFolder = selectParentFolder(getReduxState());\n            if (FileHelper.isOpenable(parentFolder)) {\n                reduxDispatch(\n                    thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                        targetFile: parentFolder,\n                        files: [parentFolder],\n                    })\n                );\n            } else {\n                Logger.warn(\n                    'Open parent folder effect was triggered  even though the parent folder' +\n                        ' is not openable. This indicates a bug in presentation components.'\n                );\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when user opens the context menu, either by right click\n     * on something or using the context menu button on their keyboard.\n     */\n    OpenFileContextMenu: defineFileAction(\n        {\n            id: 'open_file_context_menu',\n            __payloadType: {} as OpenFileContextMenuPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            // TODO: Check if the context menu component is actually enabled. There is a\n            //  chance it doesn't matter if it is enabled or not - if it is not mounted,\n            //  the action will simply have no effect. It also allows users to provide\n            //  their own components - however, users could also flip the \"context menu\n            //  component mounted\" switch...\n            const triggerFile = getFileData(getReduxState(), payload.triggerFileId);\n            if (triggerFile) {\n                const fileSelected = getIsFileSelected(getReduxState(), triggerFile);\n                if (!fileSelected) {\n                    // If file is selected, we leave the selection as is. If it is not\n                    // selected, it means user right clicked the file with no selection.\n                    // We simulate the Windows Explorer/Nautilus behaviour of moving\n                    // selection to this file.\n                    if (FileHelper.isSelectable(triggerFile)) {\n                        reduxDispatch(\n                            reduxActions.selectFiles({\n                                fileIds: [payload.triggerFileId],\n                                reset: true,\n                            })\n                        );\n                    } else {\n                        reduxDispatch(reduxActions.clearSelection());\n                    }\n                }\n            }\n\n            reduxDispatch(\n                reduxActions.showContextMenu({\n                    triggerFileId: payload.triggerFileId,\n                    mouseX: payload.clientX - 2,\n                    mouseY: payload.clientY - 4,\n                })\n            );\n        }\n    ),\n};\n","import { Nullable } from 'tsdef';\n\nimport { selectFocusSearchInput } from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { FileSelectionTransform } from '../types/action.types';\nimport { FileViewMode } from '../types/file-view.types';\nimport { FileData } from '../types/file.types';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { FileHelper } from '../util/file-helper';\nimport { defineFileAction } from '../util/helpers';\nimport { EssentialActions } from './essential';\nimport { OptionIds } from './option-ids';\n\nexport const DefaultActions = {\n    /**\n     * Action that can be used to open currently selected files.\n     */\n    OpenSelection: defineFileAction(\n        {\n            id: 'open_selection',\n            hotkeys: ['enter'],\n            requiresSelection: true,\n            fileFilter: FileHelper.isOpenable,\n            button: {\n                name: 'Open selection',\n                toolbar: true,\n                contextMenu: true,\n                group: 'Actions',\n                icon: ChonkyIconName.openFiles,\n            },\n        } as const,\n        ({ state, reduxDispatch }) => {\n            reduxDispatch(\n                thunkRequestFileAction(EssentialActions.OpenFiles, {\n                    files: state.selectedFilesForAction!,\n                })\n            );\n            return undefined;\n        }\n    ),\n    /**\n     * Action that selects all files.\n     */\n    SelectAllFiles: defineFileAction({\n        id: 'select_all_files',\n        hotkeys: ['ctrl+a'],\n        button: {\n            name: 'Select all files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.selectAllFiles,\n        },\n        selectionTransform: (({ fileIds, hiddenFileIds }) => {\n            const newSelection = new Set<string>();\n            fileIds.map(fileId => {\n                // We don't need to check if file is selectable because Chonky does\n                // it own checks internally.\n                if (!hiddenFileIds.has(fileId)) newSelection.add(fileId);\n            });\n            return newSelection;\n        }) as FileSelectionTransform,\n    } as const),\n    /**\n     * Action that clear the file selection.\n     */\n    ClearSelection: defineFileAction({\n        id: 'clear_selection',\n        hotkeys: ['escape'],\n        button: {\n            name: 'Clear selection',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.clearSelection,\n        },\n        selectionTransform: (({ prevSelection }) => {\n            if (prevSelection.size === 0) return null;\n            return new Set<string>();\n        }) as FileSelectionTransform,\n    } as const),\n    /**\n     * Action that enables List view.\n     */\n    EnableListView: defineFileAction({\n        id: 'enable_list_view',\n        fileViewConfig: {\n            mode: FileViewMode.List,\n            entryHeight: 30,\n        },\n        button: {\n            name: 'Switch to List view',\n            toolbar: true,\n            icon: ChonkyIconName.list,\n            iconOnly: true,\n        },\n    } as const),\n    /**\n     * Action that enables Compact view. Note that compact view is still\n     * experimental and should not be used in production.\n     */\n    EnableCompactView: defineFileAction({\n        // TODO: Don't enable until compact view is fully supported\n        id: 'enable_compact_view',\n        fileViewConfig: {\n            mode: FileViewMode.Compact,\n            entryHeight: 40,\n            entryWidth: 220,\n        },\n        button: {\n            name: 'Switch to Compact view',\n            toolbar: true,\n            icon: ChonkyIconName.compact,\n            iconOnly: true,\n        },\n    } as const),\n    /**\n     * Action that enables Grid view.\n     */\n    EnableGridView: defineFileAction({\n        id: 'enable_grid_view',\n        fileViewConfig: { mode: FileViewMode.Grid, entryWidth: 165, entryHeight: 130 },\n        button: {\n            name: 'Switch to Grid view',\n            toolbar: true,\n            icon: ChonkyIconName.smallThumbnail,\n            iconOnly: true,\n        },\n    } as const),\n    /**\n     * Action that sorts files by `file.name`.\n     */\n    SortFilesByName: defineFileAction({\n        id: 'sort_files_by_name',\n        sortKeySelector: (file: Nullable<FileData>) => (file ? file.name.toLowerCase() : undefined),\n        button: {\n            name: 'Sort by name',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that sorts files by `file.size`.\n     */\n    SortFilesBySize: defineFileAction({\n        id: 'sort_files_by_size',\n        sortKeySelector: (file: Nullable<FileData>) => (file ? file.size : undefined),\n        button: {\n            name: 'Sort by size',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that sorts files by `file.modDate`.\n     */\n    SortFilesByDate: defineFileAction({\n        id: 'sort_files_by_date',\n        sortKeySelector: (file: Nullable<FileData>) => (file ? file.modDate : undefined),\n        button: {\n            name: 'Sort by date',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that toggles whether hidden files are shown to the user or not.\n     */\n    ToggleHiddenFiles: defineFileAction({\n        id: 'toggle_hidden_files',\n        hotkeys: ['ctrl+h'],\n        option: {\n            id: OptionIds.ShowHiddenFiles,\n            defaultValue: true,\n        },\n        button: {\n            name: 'Show hidden files',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that toggles whether folders should appear before files regardless of\n     * current sort function.\n     */\n    ToggleShowFoldersFirst: defineFileAction({\n        id: 'toggle_show_folders_first',\n        option: {\n            id: OptionIds.ShowFoldersFirst,\n            defaultValue: true,\n        },\n        button: {\n            name: 'Show folders first',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that focuses the search input when it is dispatched.\n     */\n    FocusSearchInput: defineFileAction(\n        {\n            id: 'focus_search_input',\n            hotkeys: ['ctrl+f'],\n        } as const,\n        ({ getReduxState }) => {\n            const focusSearchInput = selectFocusSearchInput(getReduxState());\n            if (focusSearchInput) focusSearchInput();\n        }\n    ),\n    /**\n     * Action that enables List view.\n     */\n    ToggleDarkMode: defineFileAction({\n        id: 'enable_dark_mode',\n        option: {\n            id: OptionIds.DarkMode,\n            defaultValue: false,\n        },\n        button: {\n            name: 'Enable dark mode',\n            toolbar: true,\n            icon: ChonkyIconName.list,\n            iconOnly: true,\n        },\n    } as const),\n};\n","import { ChonkyIconName } from '../types/icons.types';\nimport { defineFileAction } from '../util/helpers';\n\nexport const ExtraActions = {\n    /**\n     * Action that adds a button and shortcut to copy files.\n     */\n    CopyFiles: defineFileAction({\n        id: 'copy_files',\n        requiresSelection: true,\n        hotkeys: ['ctrl+c'],\n        button: {\n            name: 'Copy selection',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.copy,\n        },\n    } as const),\n    /**\n     * Action that adds a button to create a new folder.\n     */\n    CreateFolder: defineFileAction({\n        id: 'create_folder',\n        button: {\n            name: 'Create folder',\n            toolbar: true,\n            tooltip: 'Create a folder',\n            icon: ChonkyIconName.folderCreate,\n        },\n    } as const),\n    /**\n     * Action that adds a button to upload files.\n     */\n    UploadFiles: defineFileAction({\n        id: 'upload_files',\n        button: {\n            name: 'Upload files',\n            toolbar: true,\n            tooltip: 'Upload files',\n            icon: ChonkyIconName.upload,\n        },\n    } as const),\n    /**\n     * Action that adds a button to download files.\n     */\n    DownloadFiles: defineFileAction({\n        id: 'download_files',\n        requiresSelection: true,\n        button: {\n            name: 'Download files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.download,\n        },\n    } as const),\n    /**\n     * Action that adds a button and shortcut to delete files.\n     */\n    DeleteFiles: defineFileAction({\n        id: 'delete_files',\n        requiresSelection: true,\n        hotkeys: ['delete'],\n        button: {\n            name: 'Delete files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.trash,\n        },\n    } as const),\n};\n","import { DefaultActions } from './default';\nimport { EssentialActions } from './essential';\nimport { ExtraActions } from './extra';\n\nexport { OptionIds } from './option-ids';\n\nexport const ChonkyActions = {\n    ...EssentialActions,\n    ...DefaultActions,\n    ...ExtraActions,\n};\n\nexport const EssentialFileActions = [\n    ChonkyActions.MouseClickFile,\n    ChonkyActions.KeyboardClickFile,\n    ChonkyActions.StartDragNDrop,\n    ChonkyActions.EndDragNDrop,\n    ChonkyActions.MoveFiles,\n    ChonkyActions.ChangeSelection,\n    ChonkyActions.OpenFiles,\n    ChonkyActions.OpenParentFolder,\n    ChonkyActions.OpenFileContextMenu,\n];\n\nexport const DefaultFileActions = [\n    ChonkyActions.OpenSelection,\n    ChonkyActions.SelectAllFiles,\n    ChonkyActions.ClearSelection,\n    ChonkyActions.EnableListView,\n    // TODO: Don't enable until compact view is fully supported\n    // ChonkyActions.EnableCompactView,\n    ChonkyActions.EnableGridView,\n    ChonkyActions.SortFilesByName,\n    ChonkyActions.SortFilesBySize,\n    ChonkyActions.SortFilesByDate,\n    ChonkyActions.ToggleHiddenFiles,\n    ChonkyActions.ToggleShowFoldersFirst,\n    ChonkyActions.FocusSearchInput,\n];\n","import { ChonkyActions } from '../action-definitions/index';\nimport { RootState } from '../types/redux.types';\nimport { SortOrder } from '../types/sort.types';\n\nexport const initialRootState: RootState = {\n    instanceId: 'CHONKY_INVALID_ID', // should be overwritten by preloaded state\n\n    externalFileActionHandler: null,\n\n    rawFileActions: [],\n    fileActionsErrorMessages: [],\n    fileActionMap: {},\n    fileActionIds: [],\n    toolbarItems: [],\n    contextMenuItems: [],\n\n    rawFolderChain: null,\n    folderChainErrorMessages: [],\n    folderChain: [],\n\n    rawFiles: [],\n    filesErrorMessages: [],\n    fileMap: {},\n    fileIds: [],\n    cleanFileIds: [],\n\n    sortedFileIds: [],\n    hiddenFileIdMap: {},\n\n    focusSearchInput: null,\n    searchString: '',\n    searchMode: 'currentFolder',\n\n    selectionMap: {},\n    disableSelection: false,\n\n    fileViewConfig: ChonkyActions.EnableGridView.fileViewConfig,\n\n    sortActionId: null,\n    sortOrder: SortOrder.ASC,\n\n    optionMap: {},\n\n    thumbnailGenerator: null,\n    doubleClickDelay: 300,\n    disableDragAndDrop: false,\n    clearSelectionOnOutsideClick: true,\n\n    lastClick: null,\n\n    contextMenuMounted: false,\n    contextMenuConfig: null,\n};\n","import { useEffect } from 'react';\nimport watch from 'redux-watch';\n\nimport { Store } from '@reduxjs/toolkit';\n\nimport { ChonkyActions } from '../action-definitions';\nimport { RootState } from '../types/redux.types';\nimport { FileSelection } from '../types/selection.types';\nimport { selectSelectedFileIds, selectSelectionMap } from './selectors';\nimport { thunkRequestFileAction } from './thunks/dispatchers.thunks';\n\nexport const useStoreWatchers = (store: Store<RootState>) => {\n    useEffect(() => {\n        const selectionWatcher = watch(() => selectSelectionMap(store.getState()));\n        const onSelectionChange = (\n            newSelection: FileSelection,\n            oldSelection: FileSelection\n        ) => {\n            // We don't check for deep equality here as we expect the\n            // reducers to prevent all unnecessary updates.\n            if (newSelection === oldSelection) return;\n\n            // Notify users the selection has changed.\n            const selectedFilesIds = selectSelectedFileIds(store.getState());\n            const selection = new Set<string>(selectedFilesIds);\n            store.dispatch(\n                thunkRequestFileAction(ChonkyActions.ChangeSelection, {\n                    selection,\n                }) as any\n            );\n        };\n\n        const unsubscribeCallbacks = [\n            store.subscribe(selectionWatcher(onSelectionChange)),\n        ];\n        return () => {\n            for (const unsubscribe of unsubscribeCallbacks) unsubscribe();\n        };\n    }, [store]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { ChonkyIconProps } from '../../types/icons.types';\n\nexport const ChonkyIconPlaceholder: React.FC<ChonkyIconProps> = () => {\n    // This component should not be rendered unless the user has misconfigured Chonky\n    const title =\n        'No icon component found. Please follow Chonky installation instructions to ' +\n        'provide a pre-made icon component (or a custom icon).';\n    return <span title={title}>⚠️</span>;\n};\n","import { ChonkyActions } from '../action-definitions/index';\nimport { ChonkyIconPlaceholder } from '../components/internal/ChonkyIconPlaceholder';\nimport { FileBrowserProps } from '../types/file-browser.types';\n\nexport type ChonkyConfig = Pick<\n    FileBrowserProps,\n    | 'fileActions'\n    | 'onFileAction'\n    | 'thumbnailGenerator'\n    | 'doubleClickDelay'\n    | 'disableSelection'\n    | 'disableDefaultFileActions'\n    | 'disableDragAndDrop'\n    | 'disableDragAndDropProvider'\n    | 'defaultSortActionId'\n    | 'defaultFileViewActionId'\n    | 'clearSelectionOnOutsideClick'\n    | 'iconComponent'\n    | 'darkMode'\n    | 'i18n'\n>;\n\nexport const defaultConfig: ChonkyConfig = {\n    fileActions: null,\n    onFileAction: null,\n    thumbnailGenerator: null,\n    doubleClickDelay: 300,\n    disableSelection: false,\n    disableDefaultFileActions: false,\n    disableDragAndDrop: false,\n    disableDragAndDropProvider: false,\n    defaultSortActionId: ChonkyActions.SortFilesByDate.id,\n    defaultFileViewActionId: ChonkyActions.EnableGridView.id,\n    clearSelectionOnOutsideClick: true,\n    iconComponent: ChonkyIconPlaceholder,\n    darkMode: false,\n    i18n: {},\n};\n\nexport const setChonkyDefaults = (config: Partial<ChonkyConfig>) => {\n    for (const key of Object.keys(defaultConfig)) {\n        if (key in config) {\n            defaultConfig[key as keyof ChonkyConfig] = config[\n                key as keyof ChonkyConfig\n            ] as any;\n        }\n    }\n};\n","import filesize from 'filesize';\nimport { createContext, useContext, useMemo } from 'react';\nimport { IntlShape, useIntl } from 'react-intl';\nimport { Nullable, Undefinable } from 'tsdef';\n\nimport { FileAction } from '../types/action.types';\nimport { FileData } from '../types/file.types';\nimport { ChonkyFormatters } from '../types/i18n.types';\nimport { FileHelper } from './file-helper';\n\nexport enum I18nNamespace {\n    Toolbar = 'toolbar',\n    FileList = 'fileList',\n    FileEntry = 'fileEntry',\n    FileContextMenu = 'contextMenu',\n\n    FileActions = 'actions',\n    FileActionGroups = 'actionGroups',\n}\n\nexport const getI18nId = (namespace: I18nNamespace, stringId: string): string =>\n    `chonky.${namespace}.${stringId}`;\n\nexport const getActionI18nId = (actionId: string, stringId: string): string =>\n    `chonky.${I18nNamespace.FileActions}.${actionId}.${stringId}`;\n\nexport const useLocalizedFileActionGroup = (groupName: string) => {\n    const intl = useIntl();\n    return useMemo(() => {\n        return intl.formatMessage({\n            id: getI18nId(I18nNamespace.FileActionGroups, groupName),\n            defaultMessage: groupName,\n        });\n    }, [groupName, intl]);\n};\n\nexport const useLocalizedFileActionStrings = (action: Nullable<FileAction>) => {\n    const intl = useIntl();\n    return useMemo(() => {\n        if (!action) {\n            return {\n                buttonName: '',\n                buttonTooltip: undefined,\n            };\n        }\n\n        const buttonName = intl.formatMessage({\n            id: getActionI18nId(action.id, 'button.name'),\n            defaultMessage: action.button?.name,\n        });\n\n        let buttonTooltip: Undefinable<string> = undefined;\n        if (action.button?.tooltip) {\n            // We only translate the tooltip if the original action has a tooltip.\n            buttonTooltip = intl.formatMessage({\n                id: getActionI18nId(action.id, 'button.tooltip'),\n                defaultMessage: action.button?.tooltip,\n            });\n        }\n\n        return {\n            buttonName,\n            buttonTooltip,\n        };\n    }, [action, intl]);\n};\n\nexport const useLocalizedFileEntryStrings = (file: Nullable<FileData>) => {\n    const intl = useIntl();\n    const formatters = useContext(ChonkyFormattersContext);\n    return useMemo(() => {\n        return {\n            fileModDateString: formatters.formatFileModDate(intl, file),\n            fileSizeString: formatters.formatFileSize(intl, file),\n        };\n    }, [file, formatters, intl]);\n};\n\nexport const defaultFormatters: ChonkyFormatters = {\n    formatFileModDate: (\n        intl: IntlShape,\n        file: Nullable<FileData>\n    ): Nullable<string> => {\n        const safeModDate = FileHelper.getModDate(file);\n        if (safeModDate) {\n            return intl.formatDate(safeModDate, {\n                dateStyle: 'medium',\n                // timeStyle: 'short', // TODO: show time to uncomment\n            });\n        } else {\n            return null;\n        }\n    },\n    formatFileSize: (_intl: IntlShape, file: Nullable<FileData>): Nullable<string> => {\n        if (!file || typeof file.size !== 'number') return null;\n\n        const size = file.size;\n        const sizeData = filesize(size, { bits: false, output: 'object' }) as any;\n        if (sizeData.symbol === 'B') {\n            return `${Math.round(sizeData.value / 10) / 100.0} KB`;\n        } else if (sizeData.symbol === 'KB') {\n            return `${Math.round(sizeData.value)} ${sizeData.symbol}`;\n        }\n        return `${sizeData.value} ${sizeData.symbol}`;\n    },\n};\n\nexport const ChonkyFormattersContext = createContext(defaultFormatters);\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2019\n * @license MIT\n */\n\nimport { createContext, ElementType, useMemo } from 'react';\n\nimport ExactTrie from 'exact-trie';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyIconPlaceholder } from '../components/internal/ChonkyIconPlaceholder';\nimport { FileData } from '../types/file.types';\nimport { ChonkyIconName, ChonkyIconProps, FileIconData } from '../types/icons.types';\n\nexport const ChonkyIconContext = createContext<ElementType<ChonkyIconProps>>(ChonkyIconPlaceholder);\n\nexport const VideoExtensions: string[] = [\n    '3g2',\n    '3gp',\n    '3gpp',\n    'asf',\n    'asx',\n    'avi',\n    'dvb',\n    'f4v',\n    'fli',\n    'flv',\n    'fvt',\n    'h261',\n    'h263',\n    'h264',\n    'jpgm',\n    'jpgv',\n    'jpm',\n    'm1v',\n    'm2v',\n    'm4u',\n    'm4v',\n    'mj2',\n    'mjp2',\n    'mk3d',\n    'mks',\n    'mkv',\n    'mng',\n    'mov',\n    'movie',\n    'mp4',\n    'mp4v',\n    'mpe',\n    'mpeg',\n    'mpg',\n    'mpg4',\n    'mxu',\n    'ogv',\n    'pyv',\n    'qt',\n    'smv',\n    'ts',\n    'uvh',\n    'uvm',\n    'uvp',\n    'uvs',\n    'uvu',\n    'uvv',\n    'uvvh',\n    'uvvm',\n    'uvvp',\n    'uvvs',\n    'uvvu',\n    'uvvv',\n    'viv',\n    'vob',\n    'webm',\n    'wm',\n    'wmv',\n    'wmx',\n    'wvx',\n];\nexport const ImageExtensions: string[] = [\n    '3ds',\n    'apng',\n    'azv',\n    'bmp',\n    'bmp',\n    'btif',\n    'cgm',\n    'cmx',\n    'djv',\n    'djvu',\n    'drle',\n    'dwg',\n    'dxf',\n    'emf',\n    'exr',\n    'fbs',\n    'fh',\n    'fh4',\n    'fh5',\n    'fh7',\n    'fhc',\n    'fits',\n    'fpx',\n    'fst',\n    'g3',\n    'gif',\n    'heic',\n    'heics',\n    'heif',\n    'heifs',\n    'ico',\n    'ico',\n    'ief',\n    'jls',\n    'jng',\n    'jp2',\n    'jpe',\n    'jpeg',\n    'jpf',\n    'jpg',\n    'jpg2',\n    'jpm',\n    'jpx',\n    'jxr',\n    'ktx',\n    'mdi',\n    'mmr',\n    'npx',\n    'pbm',\n    'pct',\n    'pcx',\n    'pcx',\n    'pgm',\n    'pic',\n    'png',\n    'pnm',\n    'ppm',\n    'psd',\n    'pti',\n    'ras',\n    'rgb',\n    'rlc',\n    'sgi',\n    'sid',\n    'sub',\n    'svg',\n    'svgz',\n    't38',\n    'tap',\n    'tfx',\n    'tga',\n    'tif',\n    'tiff',\n    'uvg',\n    'uvi',\n    'uvvg',\n    'uvvi',\n    'vtf',\n    'wbmp',\n    'wdp',\n    'webp',\n    'wmf',\n    'xbm',\n    'xif',\n    'xpm',\n    'xwd',\n];\nexport const AudioExtensions: string[] = [\n    '3gpp',\n    'aac',\n    'adp',\n    'aif',\n    'aifc',\n    'aiff',\n    'au',\n    'caf',\n    'dra',\n    'dts',\n    'dtshd',\n    'ecelp4800',\n    'ecelp7470',\n    'ecelp9600',\n    'eol',\n    'flac',\n    'kar',\n    'lvp',\n    'm2a',\n    'm3a',\n    'm3u',\n    'm4a',\n    'm4a',\n    'mid',\n    'midi',\n    'mka',\n    'mp2',\n    'mp2a',\n    'mp3',\n    'mp3',\n    'mp4a',\n    'mpga',\n    'oga',\n    'ogg',\n    'pya',\n    'ra',\n    'ra',\n    'ram',\n    'rip',\n    'rmi',\n    'rmp',\n    's3m',\n    'sil',\n    'snd',\n    'spx',\n    'uva',\n    'uvva',\n    'wav',\n    'wav',\n    'wav',\n    'wax',\n    'weba',\n    'wma',\n    'xm',\n];\nexport const ColorsLight: string[] = [\n    '#bbbbbb',\n    '#d65c5c',\n    '#d6665c',\n    '#d6705c',\n    '#d67a5c',\n    '#d6855c',\n    '#d68f5c',\n    '#d6995c',\n    '#d6a35c',\n    '#d6ad5c',\n    '#d6b85c',\n    '#d6c25c',\n    '#d6cc5c',\n    '#d6d65c',\n    '#ccd65c',\n    '#c2d65c',\n    '#b8d65c',\n    '#add65c',\n    '#a3d65c',\n    '#99d65c',\n    '#8fd65c',\n    '#85d65c',\n    '#7ad65c',\n    '#70d65c',\n    '#66d65c',\n    '#5cd65c',\n    '#5cd666',\n    '#5cd670',\n    '#5cd67a',\n    '#5cd685',\n    '#5cd68f',\n    '#5cd699',\n    '#5cd6a3',\n    '#5cd6ad',\n    '#5cd6b8',\n    '#5cd6c2',\n    '#5cd6cc',\n    '#5cd6d6',\n    '#5cccd6',\n    '#5cc2d6',\n    '#5cb8d6',\n    '#5cadd6',\n    '#5ca3d6',\n    '#5c99d6',\n    '#5c8fd6',\n    '#5c85d6',\n    '#5c7ad6',\n    '#5c70d6',\n    '#5c66d6',\n    '#5c5cd6',\n    '#665cd6',\n    '#705cd6',\n    '#7a5cd6',\n    '#855cd6',\n    '#8f5cd6',\n    '#995cd6',\n    '#a35cd6',\n    '#ad5cd6',\n    '#b85cd6',\n    '#c25cd6',\n    '#cc5cd6',\n    '#d65cd6',\n    '#d65ccc',\n    '#d65cc2',\n    '#d65cb8',\n    '#d65cad',\n    '#d65ca3',\n    '#d65c99',\n    '#d65c8f',\n    '#d65c85',\n    '#d65c7a',\n    '#d65c70',\n    '#d65c66',\n];\nexport const ColorsDark: string[] = [\n    '#777',\n    '#8f3d3d',\n    '#8f443d',\n    '#8f4b3d',\n    '#8f523d',\n    '#8f583d',\n    '#8f5f3d',\n    '#8f663d',\n    '#8f6d3d',\n    '#8f743d',\n    '#8f7a3d',\n    '#8f813d',\n    '#8f883d',\n    '#8f8f3d',\n    '#888f3d',\n    '#818f3d',\n    '#7a8f3d',\n    '#748f3d',\n    '#6d8f3d',\n    '#668f3d',\n    '#5f8f3d',\n    '#588f3d',\n    '#528f3d',\n    '#4b8f3d',\n    '#448f3d',\n    '#3d8f3d',\n    '#3d8f44',\n    '#3d8f4b',\n    '#3d8f52',\n    '#3d8f58',\n    '#3d8f5f',\n    '#3d8f66',\n    '#3d8f6d',\n    '#3d8f74',\n    '#3d8f7a',\n    '#3d8f81',\n    '#3d8f88',\n    '#3d8f8f',\n    '#3d888f',\n    '#3d818f',\n    '#3d7a8f',\n    '#3d748f',\n    '#3d6d8f',\n    '#3d668f',\n    '#3d5f8f',\n    '#3d588f',\n    '#3d528f',\n    '#3d4b8f',\n    '#3d448f',\n    '#3d3d8f',\n    '#443d8f',\n    '#4b3d8f',\n    '#523d8f',\n    '#583d8f',\n    '#5f3d8f',\n    '#663d8f',\n    '#6d3d8f',\n    '#743d8f',\n    '#7a3d8f',\n    '#813d8f',\n    '#883d8f',\n    '#8f3d8f',\n    '#8f3d88',\n    '#8f3d81',\n    '#8f3d7a',\n    '#8f3d74',\n    '#8f3d6d',\n    '#8f3d66',\n    '#8f3d5f',\n    '#8f3d58',\n    '#8f3d52',\n    '#8f3d4b',\n    '#8f3d44',\n];\n\nconst getIconTrie = () => {\n    let colourIndex = 0;\n    const step = 5;\n\n    const IconsToExtensions = [\n        // Generic file types\n        [ChonkyIconName.license, ['license']],\n        [ChonkyIconName.config, ['sfk', 'ini', 'yml', 'toml', 'iml']],\n        [ChonkyIconName.model, ['3ds', 'obj', 'ply', 'fbx']],\n        [ChonkyIconName.database, ['csv', 'json', 'sql', 'sqlite', 'sqlite3', 'npy', 'npz', 'rec', 'idx', 'hdf5']],\n        [ChonkyIconName.text, ['txt', 'md', 'mdx']],\n        [ChonkyIconName.archive, ['zip', 'rar', 'tar', 'tar.gz', '7z']],\n        [ChonkyIconName.image, ImageExtensions],\n        [ChonkyIconName.video, VideoExtensions],\n        [ChonkyIconName.code, ['html', 'php', 'css', 'sass', 'scss', 'less', 'cpp', 'h', 'hpp', 'c', 'xml']],\n        [ChonkyIconName.info, ['bib', 'readme', 'nfo']],\n        [ChonkyIconName.key, ['pem', 'pub']],\n        [ChonkyIconName.lock, ['lock', 'lock.json', 'shrinkwrap.json']],\n        [ChonkyIconName.music, AudioExtensions],\n        [ChonkyIconName.terminal, ['run', 'sh']],\n        [ChonkyIconName.trash, ['.Trashes']],\n        [ChonkyIconName.users, ['authors', 'contributors']],\n\n        // OS file types\n        [ChonkyIconName.linux, ['AppImage']],\n        [ChonkyIconName.ubuntu, ['deb']],\n        [ChonkyIconName.windows, ['exe']],\n\n        // Programming language file types\n        [ChonkyIconName.rust, ['rs', 'rlib']],\n        [ChonkyIconName.python, ['py', 'ipynb']],\n        [ChonkyIconName.nodejs, ['js', 'jsx', 'ts', 'tsx', 'd.ts']],\n        [ChonkyIconName.php, ['php']],\n\n        // Development tools file types\n        [ChonkyIconName.git, ['.gitignore']],\n\n        // Brands file types\n        [ChonkyIconName.adobe, ['psd']],\n\n        // Other program file types\n        [ChonkyIconName.pdf, ['pdf']],\n        [ChonkyIconName.excel, ['xls', 'xlsx']],\n        [ChonkyIconName.word, ['doc', 'docx', 'odt']],\n        [ChonkyIconName.flash, ['swf']],\n    ] as const;\n\n    const exactTrie = new ExactTrie({ ignoreCase: true });\n    for (const pair of IconsToExtensions) {\n        const [icon, extensions] = pair;\n\n        for (let i = 0; i < extensions.length; ++i) {\n            colourIndex += step;\n            const colorCode = (colourIndex % (ColorsLight.length - 1)) + 1;\n            const iconData: FileIconData = {\n                icon,\n                colorCode,\n            };\n            exactTrie.put(extensions[i], iconData, true);\n        }\n    }\n\n    return exactTrie;\n};\n\nconst iconTrie = getIconTrie();\n\nexport const useIconData = (file: Nullable<FileData>): FileIconData => {\n    return useMemo(() => {\n        if (!file) return { icon: ChonkyIconName.loading, colorCode: 0 };\n        if (file.isDir === true) return { icon: ChonkyIconName.folder, colorCode: 0 };\n\n        const match = iconTrie.getWithCheckpoints(file.name, '.', true);\n        return match ? match : { icon: ChonkyIconName.file, colorCode: 32 };\n    }, [file]);\n};\n","import { Theme as MuiTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { DeepPartial } from 'tsdef';\n\nexport const lightTheme = {\n    colors: {\n        debugRed: '#fabdbd',\n        debugBlue: '#bdd8fa',\n        debugGreen: '#d2fabd',\n        debugPurple: '#d2bdfa',\n        debugYellow: '#fae9bd',\n\n        textActive: '#09f',\n    },\n\n    fontSizes: {\n        rootPrimary: 15,\n    },\n\n    margins: {\n        rootLayoutMargin: 8,\n    },\n\n    toolbar: {\n        size: 30,\n        lineHeight: '30px', // `px` suffix is required for `line-height` fields to work\n        fontSize: 15,\n        buttonRadius: 4,\n    },\n\n    dnd: {\n        canDropColor: 'green',\n        cannotDropColor: 'red',\n        canDropMask: 'rgba(180, 235, 180, 0.75)',\n        cannotDropMask: 'rgba(235, 180, 180, 0.75)',\n        fileListCanDropMaskOne: 'rgba(180, 235, 180, 0.1)',\n        fileListCanDropMaskTwo: 'rgba(180, 235, 180, 0.2)',\n        fileListCannotDropMaskOne: 'rgba(235, 180, 180, 0.1)',\n        fileListCannotDropMaskTwo: 'rgba(235, 180, 180, 0.2)',\n    },\n\n    dragLayer: {\n        border: 'solid 2px #09f',\n        padding: '7px 10px',\n        borderRadius: 2,\n    },\n\n    fileList: {\n        desktopGridGutter: 8,\n        mobileGridGutter: 5,\n    },\n\n    gridFileEntry: {\n        childrenCountSize: '1.6em',\n        iconColorFocused: '#000',\n        iconSize: '2.4em',\n        iconColor: '#fff',\n        borderRadius: 5,\n        fontSize: 14,\n\n        fileColorTint: 'rgba(255, 255, 255, 0.4)',\n        folderBackColorTint: 'rgba(255, 255, 255, 0.1)',\n        folderFrontColorTint: 'rgba(255, 255, 255, 0.4)',\n    },\n\n    listFileEntry: {\n        propertyFontSize: 14,\n        iconFontSize: '1.1em',\n        iconBorderRadius: 5,\n        fontSize: 14,\n    },\n};\n\nexport type ChonkyTheme = typeof lightTheme;\n\nexport const darkThemeOverride: DeepPartial<ChonkyTheme> = {\n    gridFileEntry: {\n        fileColorTint: 'rgba(50, 50, 50, 0.4)',\n        folderBackColorTint: 'rgba(50, 50, 50, 0.4)',\n        folderFrontColorTint: 'rgba(50, 50, 50, 0.15)',\n    },\n};\n\nexport const mobileThemeOverride: DeepPartial<ChonkyTheme> = {\n    fontSizes: {\n        rootPrimary: 13,\n    },\n    margins: {\n        rootLayoutMargin: 4,\n    },\n    toolbar: {\n        size: 28,\n        lineHeight: '28px',\n        fontSize: 13,\n    },\n    gridFileEntry: {\n        fontSize: 13,\n    },\n    listFileEntry: {\n        propertyFontSize: 12,\n        iconFontSize: '1em',\n        fontSize: 13,\n    },\n};\n\nexport const useIsMobileBreakpoint = () => {\n    return useMediaQuery('(max-width:480px)');\n};\n\nexport const getStripeGradient = (colorOne: string, colorTwo: string) =>\n    'repeating-linear-gradient(' +\n    '45deg,' +\n    `${colorOne},` +\n    `${colorOne} 10px,` +\n    `${colorTwo} 0,` +\n    `${colorTwo} 20px` +\n    ')';\n\nexport const makeLocalChonkyStyles = <C extends string = string>(\n    styles: (theme: ChonkyTheme & MuiTheme) => any\n    // @ts-ignore\n): any => createUseStyles<ChonkyTheme, C>(styles);\n\nexport const makeGlobalChonkyStyles = <C extends string = string>(\n    makeStyles: (theme: ChonkyTheme & MuiTheme) => any\n) => {\n    const selectorMapping = {};\n    const makeGlobalStyles = (theme: ChonkyTheme) => {\n        const localStyles = makeStyles(theme as any);\n        const globalStyles = {};\n        const localSelectors = Object.keys(localStyles);\n        localSelectors.map(localSelector => {\n            const globalSelector = `chonky-${localSelector}`;\n            const jssSelector = `@global .${globalSelector}`;\n            // @ts-ignore\n            globalStyles[jssSelector] = localStyles[localSelector];\n            // @ts-ignore\n            selectorMapping[localSelector] = globalSelector;\n        });\n        return globalStyles;\n    };\n\n    // @ts-ignore\n    const useStyles = createUseStyles<ChonkyTheme, C>(makeGlobalStyles as any);\n    return (...args: any[]): any => {\n        const styles = useStyles(...args);\n        const classes = {};\n        Object.keys(selectorMapping).map(localSelector => {\n            // @ts-ignore\n            classes[localSelector] = selectorMapping[localSelector];\n        });\n        return { ...classes, ...styles };\n    };\n};\n\nexport const important = <T>(value: T) => [value, '!important'];\n\nexport const c = classnames;\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { initialRootState } from '../../redux/state';\nimport { useDTE, usePropReduxUpdate } from '../../redux/store';\nimport {\n    thunkActivateSortAction, thunkUpdateDefaultFileViewActionId, thunkUpdateRawFileActions\n} from '../../redux/thunks/file-actions.thunks';\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { defaultConfig } from '../../util/default-config';\nimport { useFileBrowserHandle } from '../../util/file-browser-handle';\nimport { getValueOrFallback } from '../../util/helpers';\n\nexport const ChonkyBusinessLogicInner = React.memo(\n    React.forwardRef<FileBrowserHandle, FileBrowserProps>((props, ref) => {\n        // ==== Update Redux state\n        usePropReduxUpdate(reduxActions.setRawFiles, props.files ?? initialRootState.rawFiles);\n        usePropReduxUpdate(reduxActions.setRawFolderChain, props.folderChain);\n        useDTE(\n            thunkUpdateRawFileActions,\n            getValueOrFallback(props.fileActions, defaultConfig.fileActions),\n            getValueOrFallback(props.disableDefaultFileActions, defaultConfig.disableDefaultFileActions)\n        );\n        useDTE(\n            reduxActions.setExternalFileActionHandler,\n            getValueOrFallback(props.onFileAction, defaultConfig.onFileAction) as any\n        );\n        useDTE(\n            reduxActions.setSelectionDisabled,\n            getValueOrFallback(props.disableSelection, defaultConfig.disableSelection, 'boolean')\n        );\n        useDTE(\n            thunkActivateSortAction,\n            getValueOrFallback(props.defaultSortActionId, defaultConfig.defaultSortActionId)\n        );\n        useDTE(\n            thunkUpdateDefaultFileViewActionId,\n            getValueOrFallback(props.defaultFileViewActionId, defaultConfig.defaultFileViewActionId, 'string')\n        );\n\n        useDTE(\n            reduxActions.setThumbnailGenerator,\n            getValueOrFallback(props.thumbnailGenerator, defaultConfig.thumbnailGenerator)\n        );\n        useDTE(\n            reduxActions.setDoubleClickDelay,\n            getValueOrFallback(props.doubleClickDelay, defaultConfig.doubleClickDelay, 'number')\n        );\n        useDTE(\n            reduxActions.setDisableDragAndDrop,\n            getValueOrFallback(props.disableDragAndDrop, defaultConfig.disableDragAndDrop, 'boolean')\n        );\n        useDTE(\n            reduxActions.setClearSelectionOnOutsideClick,\n            getValueOrFallback(\n                props.clearSelectionOnOutsideClick,\n                defaultConfig.clearSelectionOnOutsideClick,\n                'boolean'\n            )\n        );\n\n        // ==== Setup the imperative handle for external use\n        useFileBrowserHandle(ref);\n\n        return null;\n    })\n);\nChonkyBusinessLogicInner.displayName = 'ChonkyBusinessLogicInner';\n\nexport const ChonkyBusinessLogic = React.memo(ChonkyBusinessLogicInner);\nChonkyBusinessLogic.displayName = 'ChonkyBusinessLogic';\n","import React, { useImperativeHandle } from 'react';\nimport { useDispatch, useStore } from 'react-redux';\n\nimport { reduxActions } from '../redux/reducers';\nimport { selectSelectionMap } from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { FileAction } from '../types/action.types';\nimport { FileBrowserHandle } from '../types/file-browser.types';\nimport { RootState } from '../types/redux.types';\n\nexport const useFileBrowserHandle = (ref: React.Ref<FileBrowserHandle>) => {\n    const store = useStore<RootState>();\n    const dispatch = useDispatch();\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            getFileSelection(): Set<string> {\n                const selectionMap = selectSelectionMap(store.getState());\n                const selectionSet = new Set(Object.keys(selectionMap));\n                return selectionSet;\n            },\n            setFileSelection(selection, reset = true): void {\n                const fileIds = Array.from(selection);\n                dispatch(reduxActions.selectFiles({ fileIds, reset }));\n            },\n            requestFileAction<Action extends FileAction>(\n                action: Action,\n                payload: Action['__payloadType']\n            ): Promise<void> {\n                return Promise.resolve(\n                    dispatch(thunkRequestFileAction(action, payload))\n                ).then();\n            },\n        }),\n        [store, dispatch]\n    );\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Box from '@material-ui/core/Box';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { reduxActions } from '../../redux/reducers';\nimport {\n    selectClearSelectionOnOutsideClick,\n    selectFileActionIds,\n    selectIsDnDDisabled,\n} from '../../redux/selectors';\nimport { useDndContextAvailable } from '../../util/dnd-fallback';\nimport { elementIsInsideButton } from '../../util/helpers';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { useContextMenuTrigger } from '../external/FileContextMenu-hooks';\nimport { DnDFileListDragLayer } from '../file-list/DnDFileListDragLayer';\nimport { HotkeyListener } from './HotkeyListener';\n\nexport interface ChonkyPresentationLayerProps {}\n\nexport const ChonkyPresentationLayer: React.FC<ChonkyPresentationLayerProps> = ({\n    children,\n}) => {\n    const dispatch = useDispatch();\n    const fileActionIds = useSelector(selectFileActionIds);\n    const dndDisabled = useSelector(selectIsDnDDisabled);\n    const clearSelectionOnOutsideClick = useSelector(\n        selectClearSelectionOnOutsideClick\n    );\n\n    // Deal with clicks outside of Chonky\n    const handleClickAway = useCallback(\n        (event: React.MouseEvent<Document>) => {\n            if (!clearSelectionOnOutsideClick || elementIsInsideButton(event.target)) {\n                // We only clear out the selection on outside click if the click target\n                // was not a button. We don't want to clear out the selection when a\n                // button is clicked because Chonky users might want to trigger some\n                // selection-related action on that button click.\n                return;\n            }\n            dispatch(reduxActions.clearSelection());\n        },\n        [dispatch, clearSelectionOnOutsideClick]\n    );\n\n    // Generate necessary components\n    const hotkeyListenerComponents = useMemo(\n        () =>\n            fileActionIds.map(actionId => (\n                <HotkeyListener\n                    key={`file-action-listener-${actionId}`}\n                    fileActionId={actionId}\n                />\n            )),\n        [fileActionIds]\n    );\n\n    const dndContextAvailable = useDndContextAvailable();\n    const showContextMenu = useContextMenuTrigger();\n\n    const classes = useStyles();\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <Box className={classes.chonkyRoot} onContextMenu={showContextMenu}>\n                {!dndDisabled && dndContextAvailable && <DnDFileListDragLayer />}\n                {hotkeyListenerComponents}\n                {children ? children : null}\n            </Box>\n        </ClickAwayListener>\n    );\n};\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    chonkyRoot: {\n        backgroundColor: theme.palette.background.paper,\n        border: `solid 1px ${theme.palette.divider}`,\n        padding: theme.margins.rootLayoutMargin,\n        fontSize: theme.fontSizes.rootPrimary,\n        color: theme.palette.text.primary,\n        touchAction: 'manipulation', // Disabling zoom on double tap\n        fontFamily: 'sans-serif',\n        flexDirection: 'column',\n        boxSizing: 'border-box',\n        textAlign: 'left',\n        borderRadius: 4,\n        display: 'flex',\n        height: '100%',\n\n        // Disabling select\n        webkitTouchCallout: 'none',\n        webkitUserSelect: 'none',\n        mozUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none',\n    },\n}));\n","import { useCallback, useContext } from 'react';\nimport { DndContext, useDrag, useDrop } from 'react-dnd';\n\nexport const useDndContextAvailable = () => {\n    const dndContext = useContext(DndContext);\n    const { dragDropManager } = dndContext;\n    return !!dragDropManager;\n};\n\nexport const useDragIfAvailable: typeof useDrag = (...args) => {\n    // This is an ugly hack to make `useDrag` not throw if a `DndContext` is not available.\n    // See: https://github.com/react-dnd/react-dnd/issues/2212\n    const dndContextAvailable = useDndContextAvailable();\n    const mockHook = useCallback(() => [{} as any, () => null, () => null], []);\n    // @ts-ignore\n    const useHook: typeof useDrag = dndContextAvailable ? useDrag : mockHook;\n    return useHook(...args);\n};\n\nexport const useDropIfAvailable: typeof useDrop = (...args) => {\n    const dndContextAvailable = useDndContextAvailable();\n    const mockHook = useCallback(() => [{} as any, () => null], []);\n    // @ts-ignore\n    const useHook: typeof useDrop = dndContextAvailable ? useDrop : mockHook;\n    return useHook(...args);\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { reduxActions } from '../../redux/reducers';\nimport { selectContextMenuMounted } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { findElementAmongAncestors } from '../../util/helpers';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\n\nexport const findClosestChonkyFileId = (\n    element: HTMLElement | any\n): Nullable<string> => {\n    const fileEntryWrapperDiv = findElementAmongAncestors(\n        element,\n        (element: any) =>\n            element.tagName &&\n            element.tagName.toLowerCase() === 'div' &&\n            element.dataset &&\n            element.dataset.chonkyFileId\n    );\n    return fileEntryWrapperDiv ? fileEntryWrapperDiv.dataset.chonkyFileId! : null;\n};\n\nexport const useContextMenuTrigger = () => {\n    const dispatch = useDispatch();\n    const contextMenuMountedRef = useInstanceVariable(\n        useSelector(selectContextMenuMounted)\n    );\n    return useCallback(\n        (event: React.MouseEvent<HTMLDivElement>) => {\n            // Use default browser context menu when Chonky context menu component\n            // is not mounted.\n            if (!contextMenuMountedRef.current) return;\n            // Users can use Alt+Right Click to bring up browser's default\n            // context menu instead of Chonky's context menu.\n            if (event.altKey) return;\n\n            event.preventDefault();\n\n            const triggerFileId = findClosestChonkyFileId(event.target);\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.OpenFileContextMenu, {\n                    clientX: event.clientX,\n                    clientY: event.clientY,\n                    triggerFileId,\n                })\n            );\n        },\n        [contextMenuMountedRef, dispatch]\n    );\n};\n\nexport const useContextMenuDismisser = () => {\n    const dispatch = useDispatch();\n    return useCallback(() => dispatch(reduxActions.hideContextMenu()), [dispatch]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { useDragLayer } from 'react-dnd';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyDndFileEntryItem, ChonkyDndFileEntryType } from '../../types/dnd.types';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface DnDFileListDragLayerProps {}\n\nconst layerStyles: React.CSSProperties = {\n    position: 'fixed',\n    pointerEvents: 'none',\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n};\nconst getItemStyles = (\n    initialCursorOffset: Nullable<{ x: number; y: number }>,\n    initialFileOffset: Nullable<{ x: number; y: number }>,\n    currentFileOffset: Nullable<{ x: number; y: number }>\n) => {\n    if (!initialCursorOffset || !initialFileOffset || !currentFileOffset) {\n        return {\n            display: 'none',\n        };\n    }\n    const x = initialCursorOffset.x + (currentFileOffset.x - initialFileOffset.x);\n    const y = initialCursorOffset.y + (currentFileOffset.y - initialFileOffset.y);\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        transform,\n        WebkitTransform: transform,\n    };\n};\n\nexport const DnDFileListDragLayer: React.FC<DnDFileListDragLayerProps> = () => {\n    const classes = useStyles();\n\n    const {\n        itemType,\n        item,\n        initialCursorOffset,\n        initialFileOffset,\n        currentFileOffset,\n        isDragging,\n    } = useDragLayer(monitor => ({\n        item: monitor.getItem() as ChonkyDndFileEntryItem,\n        itemType: monitor.getItemType(),\n        initialCursorOffset: monitor.getInitialClientOffset(),\n        initialFileOffset: monitor.getInitialSourceClientOffset(),\n        currentFileOffset: monitor.getSourceClientOffset(),\n        isDragging: monitor.isDragging(),\n    }));\n    if (!isDragging || itemType !== ChonkyDndFileEntryType || !item.payload) {\n        return null;\n    }\n\n    const selectionSize = item.payload.selectedFiles.length;\n    return (\n        <div style={layerStyles}>\n            <div\n                style={getItemStyles(\n                    initialCursorOffset,\n                    initialFileOffset,\n                    currentFileOffset\n                )}\n            >\n                <div className={classes.fileDragPreview}>\n                    <b>{item.payload.draggedFile.name}</b>\n                    {selectionSize > 1 && (\n                        <>\n                            {' and '}\n                            <strong>\n                                {selectionSize - 1} other file\n                                {selectionSize - 1 !== 1 ? 's' : ''}\n                            </strong>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    fileDragPreview: {\n        boxShadow: `2px 2px 5px ${theme.palette.divider}`,\n        backgroundColor: theme.palette.background.default,\n        borderRadius: theme.dragLayer.borderRadius,\n        fontSize: theme.fontSizes.rootPrimary,\n        color: theme.palette.text.primary,\n        padding: theme.dragLayer.padding,\n        border: theme.dragLayer.border,\n        display: 'inline-block',\n    },\n}));\n","import { DragObjectWithType } from 'react-dnd';\nimport { Nilable } from 'tsdef';\n\nimport { StartDragNDropPayload } from './action-payloads.types';\nimport { FileData } from './file.types';\n\nexport interface ChonkyDndDropResult {\n    dropTarget: Nilable<FileData> | any;\n    dropEffect: 'move' | 'copy';\n}\n\nexport type ChonkyDndFileEntryItem = DragObjectWithType & {\n    payload: StartDragNDropPayload;\n};\nexport const ChonkyDndFileEntryType = 'dnd-chonky-file-entry';\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport hotkeys from 'hotkeys-js';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\n\nexport interface HotkeyListenerProps {\n    fileActionId: string;\n}\n\nexport const HotkeyListener: React.FC<HotkeyListenerProps> = React.memo(props => {\n    const { fileActionId } = props;\n\n    const dispatch = useDispatch();\n    const fileAction = useParamSelector(selectFileActionData, fileActionId);\n\n    useEffect(() => {\n        if (!fileAction || !fileAction.hotkeys || fileAction.hotkeys.length === 0) {\n            return;\n        }\n\n        const hotkeysStr = fileAction.hotkeys.join(',');\n        const hotkeyCallback = (event: KeyboardEvent) => {\n            event.preventDefault();\n            dispatch(thunkRequestFileAction(fileAction, undefined));\n        };\n        hotkeys(hotkeysStr, hotkeyCallback);\n        return () => hotkeys.unbind(hotkeysStr, hotkeyCallback);\n    }, [dispatch, fileAction]);\n\n    return null;\n});\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Box from '@material-ui/core/Box';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport React, { ReactElement, useMemo } from 'react';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { useFolderChainItems } from './FileNavbar-hooks';\nimport { FolderChainButton } from './FolderChainButton';\nimport { SmartToolbarButton } from './ToolbarButton';\n\nexport interface FileNavbarProps {}\n\nexport const FileNavbar: React.FC<FileNavbarProps> = React.memo(() => {\n    const classes = useStyles();\n    const folderChainItems = useFolderChainItems();\n\n    const folderChainComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < folderChainItems.length; ++i) {\n            const key = `folder-chain-${i}`;\n            const component = (\n                <FolderChainButton\n                    key={key}\n                    first={i === 0}\n                    current={i === folderChainItems.length - 1}\n                    item={folderChainItems[i]}\n                />\n            );\n            components.push(component);\n        }\n        return components;\n    }, [folderChainItems]);\n\n    return (\n        <Box className={classes.navbarWrapper}>\n            <Box className={classes.navbarContainer}>\n                <SmartToolbarButton fileActionId={ChonkyActions.OpenParentFolder.id} />\n                <Breadcrumbs\n                    className={classes.navbarBreadcrumbs}\n                    classes={{ separator: classes.separator }}\n                >\n                    {folderChainComponents}\n                </Breadcrumbs>\n            </Box>\n        </Box>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    navbarWrapper: {\n        paddingBottom: theme.margins.rootLayoutMargin,\n    },\n    navbarContainer: {\n        display: 'flex',\n    },\n    upDirectoryButton: {\n        fontSize: important(theme.toolbar.fontSize),\n        height: theme.toolbar.size,\n        width: theme.toolbar.size,\n        padding: '0px !important',\n    },\n    navbarBreadcrumbs: {\n        fontSize: important(theme.toolbar.fontSize),\n        flexGrow: 100,\n    },\n    separator: {\n        marginRight: important(4),\n        marginLeft: important(4),\n    },\n}));\n","import { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectFolderChain } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { FileData } from '../../types/file.types';\nimport { FileHelper } from '../../util/file-helper';\n\nexport interface FolderChainItem {\n    file: Nullable<FileData>;\n    disabled: boolean;\n    onClick?: () => void;\n}\n\nexport const useFolderChainItems = (): FolderChainItem[] => {\n    const folderChain = useSelector(selectFolderChain);\n    const dispatch = useDispatch();\n\n    const folderChainItems = useMemo(() => {\n        const items: FolderChainItem[] = [];\n        if (!folderChain) return items;\n\n        for (let i = 0; i < folderChain.length; ++i) {\n            const file = folderChain[i];\n            items.push({\n                file,\n                disabled: !file,\n                onClick:\n                    !FileHelper.isOpenable(file) || i === folderChain.length - 1\n                        ? undefined\n                        : () =>\n                              dispatch(\n                                  thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                                      targetFile: file,\n                                      files: [file],\n                                  })\n                              ),\n            });\n        }\n        return items;\n    }, [dispatch, folderChain]);\n    return folderChainItems;\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext, useMemo } from 'react';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useDndHoverOpen, useFileDrop } from '../../util/dnd';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeLocalChonkyStyles } from '../../util/styles';\nimport { useDndIcon } from '../file-list/FileEntry-hooks';\nimport { FolderChainItem } from './FileNavbar-hooks';\nimport { ToolbarButton } from './ToolbarButton';\n\nexport interface FolderChainButtonProps {\n    first: boolean;\n    current: boolean;\n    item: FolderChainItem;\n}\n\nexport const FolderChainButton: React.FC<FolderChainButtonProps> = React.memo(\n    ({ first, current, item }) => {\n        const { file, disabled, onClick } = item;\n        const { dndIsOver, dndCanDrop, drop } = useFileDrop({\n            file,\n            forceDisableDrop: !file || current,\n        });\n        const dndState = useMemo<DndEntryState>(\n            () => ({\n                dndIsOver,\n                dndCanDrop,\n                dndIsDragging: false,\n            }),\n            [dndCanDrop, dndIsOver]\n        );\n        useDndHoverOpen(file, dndState);\n        const dndIconName = useDndIcon(dndState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n\n        const classes = useStyles(dndState);\n        const className = c({\n            [classes.baseBreadcrumb]: true,\n            [classes.disabledBreadcrumb]: disabled,\n            [classes.currentBreadcrumb]: current,\n        });\n        const text = file ? file.name : 'Loading...';\n        const icon =\n            first && file?.folderChainIcon === undefined\n                ? ChonkyIconName.folder\n                : file?.folderChainIcon;\n\n        return (\n            <div className={classes.buttonContainer} ref={file ? drop : null}>\n                {file && dndIconName && (\n                    <div className={classes.dndIndicator}>\n                        <ChonkyIcon icon={dndIconName} fixedWidth={true} />\n                    </div>\n                )}\n                <ToolbarButton\n                    icon={icon}\n                    className={className}\n                    text={text}\n                    disabled={disabled}\n                    onClick={onClick}\n                />\n            </div>\n        );\n    }\n);\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    buttonContainer: {\n        position: 'relative',\n    },\n    baseBreadcrumb: {\n        color: (dndState: DndEntryState) => {\n            let color = theme.palette.text.primary;\n            if (dndState.dndIsOver) {\n                color = dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor;\n            }\n            return important(color);\n        },\n    },\n    disabledBreadcrumb: {\n        // Constant function here is on purpose. Without the function, the color here\n        // does not override the `baseBreadcrumb` color from above.\n        color: () => important(theme.palette.text.disabled),\n    },\n    currentBreadcrumb: {\n        textDecoration: important('underline'),\n    },\n    dndIndicator: {\n        color: (dndState: DndEntryState) =>\n            dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor,\n        backgroundColor: (dndState: DndEntryState) =>\n            dndState.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask,\n        lineHeight: `calc(${theme.toolbar.lineHeight} - 6px)`,\n        transform: 'translateX(-50%) translateY(-50%)',\n        borderRadius: theme.toolbar.buttonRadius,\n        height: theme.toolbar.size - 6,\n        width: theme.toolbar.size - 6,\n        boxSizing: 'border-box',\n        position: 'absolute',\n        textAlign: 'center',\n        left: '50%',\n        top: '50%',\n        zIndex: 5,\n    },\n}));\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { DragSourceMonitor, DropTargetMonitor } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { ExcludeKeys, Nullable } from 'tsdef';\n\nimport { EssentialActions } from '../action-definitions/essential';\nimport { ChonkyActions } from '../action-definitions/index';\nimport {\n    selectCurrentFolder,\n    selectFolderChain,\n    selectInstanceId,\n    selectSelectedFiles,\n} from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { StartDragNDropPayload } from '../types/action-payloads.types';\nimport {\n    ChonkyDndDropResult,\n    ChonkyDndFileEntryItem,\n    ChonkyDndFileEntryType,\n} from '../types/dnd.types';\nimport { DndEntryState } from '../types/file-list.types';\nimport { FileData } from '../types/file.types';\nimport { useDragIfAvailable, useDropIfAvailable } from './dnd-fallback';\nimport { FileHelper } from './file-helper';\nimport { useInstanceVariable } from './hooks-helpers';\n\nexport const useFileDrag = (file: Nullable<FileData>) => {\n    // Prepare the dnd payload\n    const store = useStore();\n    const fileRef = useInstanceVariable(file);\n    const getDndStartPayload = useCallback<() => StartDragNDropPayload>(() => {\n        const reduxState = store.getState();\n        return {\n            sourceInstanceId: selectInstanceId(reduxState),\n            source: selectCurrentFolder(reduxState),\n            // We force non-null type below because by convention, if drag & drop for\n            // this file was possible, it must have been non-null.\n            draggedFile: fileRef.current!,\n            selectedFiles: selectSelectedFiles(reduxState),\n        };\n    }, [store, fileRef]);\n\n    // For drag source\n    const dispatch = useDispatch();\n    const canDrag = useCallback(() => FileHelper.isDraggable(fileRef.current), [\n        fileRef,\n    ]);\n    const onDragStart = useCallback((): ChonkyDndFileEntryItem => {\n        const item: ChonkyDndFileEntryItem = {\n            type: ChonkyDndFileEntryType,\n            payload: getDndStartPayload(),\n        };\n        dispatch(thunkRequestFileAction(ChonkyActions.StartDragNDrop, item.payload));\n        return item;\n    }, [dispatch, getDndStartPayload]);\n    const onDragEnd = useCallback(\n        (item: ChonkyDndFileEntryItem, monitor: DragSourceMonitor) => {\n            const dropResult = monitor.getDropResult() as ChonkyDndDropResult;\n            if (\n                !FileHelper.isDraggable(item.payload.draggedFile) ||\n                !dropResult ||\n                !dropResult.dropTarget\n            ) {\n                return;\n            }\n\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.EndDragNDrop, {\n                    ...item.payload,\n                    destination: dropResult.dropTarget,\n                    copy: dropResult.dropEffect === 'copy',\n                })\n            );\n        },\n        [dispatch]\n    );\n\n    // Create refs for react-dnd hooks\n    const item = useMemo<ChonkyDndFileEntryItem>(\n        () => ({\n            type: ChonkyDndFileEntryType,\n            // Payload is actually added in `onDragStart`\n            payload: {} as StartDragNDropPayload,\n        }),\n        []\n    );\n    const collect = useCallback(monitor => ({ isDragging: monitor.isDragging() }), []);\n    const [{ isDragging: dndIsDragging }, drag, preview] = useDragIfAvailable({\n        item,\n        canDrag,\n        begin: onDragStart,\n        // @ts-ignore\n        end: onDragEnd,\n        collect,\n    });\n\n    useEffect(() => {\n        // Set drag preview to an empty image because `DnDFileListDragLayer` will\n        // provide its own preview.\n        preview(getEmptyImage(), { captureDraggingState: true });\n    }, [preview]);\n\n    return { dndIsDragging, drag };\n};\n\ninterface UseFileDropParams {\n    file: Nullable<FileData>;\n    forceDisableDrop?: boolean;\n    includeChildrenDrops?: boolean;\n}\n\nexport const useFileDrop = ({\n    file,\n    forceDisableDrop,\n    includeChildrenDrops,\n}: UseFileDropParams) => {\n    const folderChainRef = useInstanceVariable(useSelector(selectFolderChain));\n    const onDrop = useCallback(\n        (_item: ChonkyDndFileEntryItem, monitor) => {\n            if (!monitor.canDrop()) return;\n            const customDropResult: ExcludeKeys<ChonkyDndDropResult, 'dropEffect'> = {\n                dropTarget: file,\n            };\n            return customDropResult;\n        },\n        [file]\n    );\n    const canDrop = useCallback(\n        (item: ChonkyDndFileEntryItem, monitor: DropTargetMonitor) => {\n            if (\n                forceDisableDrop ||\n                !FileHelper.isDroppable(file) ||\n                (!monitor.isOver({ shallow: true }) && !includeChildrenDrops)\n            ) {\n                return false;\n            }\n            const { source, draggedFile, selectedFiles } = item.payload;\n\n            // We prevent folders from being dropped into themselves. We also prevent\n            // any folder from current folder chain being moved - we can't move the\n            // folder that we are currently in.\n            const prohibitedFileIds = new Set<string>();\n            prohibitedFileIds.add(file.id);\n            folderChainRef.current.map(folder => {\n                if (folder) prohibitedFileIds.add(folder.id);\n            });\n            const movedFiles: FileData[] = [draggedFile, ...selectedFiles];\n            for (const currFile of movedFiles) {\n                if (prohibitedFileIds.has(currFile.id)) return false;\n            }\n\n            // Finally, prohibit files from being moved into their parent folder\n            // (which is a no-op).\n            return file.id !== source?.id;\n        },\n        [forceDisableDrop, file, includeChildrenDrops, folderChainRef]\n    );\n    const collect = useCallback(\n        monitor => ({\n            isOver: monitor.isOver(),\n            isOverCurrent: monitor.isOver({ shallow: true }),\n            canDrop: monitor.canDrop(),\n        }),\n        []\n    );\n    const [\n        { isOver: dndIsOver, isOverCurrent: dndIsOverCurrent, canDrop: dndCanDrop },\n        drop,\n    ] = useDropIfAvailable({\n        accept: ChonkyDndFileEntryType,\n        drop: onDrop,\n        canDrop,\n        collect,\n    });\n    return { dndIsOver, dndIsOverCurrent, dndCanDrop, drop };\n};\n\nexport const useFileEntryDnD = (file: Nullable<FileData>) => {\n    const { dndIsDragging, drag } = useFileDrag(file);\n    const { dndIsOver, dndCanDrop, drop } = useFileDrop({ file });\n    const dndState = useMemo<DndEntryState>(\n        () => ({\n            dndIsDragging,\n            dndIsOver,\n            dndCanDrop,\n        }),\n        [dndCanDrop, dndIsDragging, dndIsOver]\n    );\n    return {\n        drop,\n        drag,\n        dndState,\n    };\n};\n\nexport const useDndHoverOpen = (file: Nullable<FileData>, dndState: DndEntryState) => {\n    const dispatch = useDispatch();\n    const currentFolderRef = useInstanceVariable(useSelector(selectCurrentFolder));\n    useEffect(() => {\n        let timeout: Nullable<any> = null;\n        if (\n            dndState.dndIsOver &&\n            FileHelper.isDndOpenable(file) &&\n            file.id !== currentFolderRef.current?.id\n        ) {\n            timeout = setTimeout(\n                () =>\n                    dispatch(\n                        thunkRequestFileAction(EssentialActions.OpenFiles, {\n                            targetFile: file,\n                            files: [file],\n                        })\n                    ),\n                // TODO: Make this timeout configurable\n                1500\n            );\n        }\n        return () => {\n            if (timeout) clearTimeout(timeout);\n        };\n    }, [dispatch, file, dndState.dndIsOver, currentFolderRef]);\n};\n","import React, {\n    HTMLProps, useCallback, useContext, useEffect, useMemo, useRef, useState\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable, Undefinable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectThumbnailGenerator } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { DndEntryState } from '../../types/file-list.types';\nimport { FileData } from '../../types/file.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { ChonkyIconContext, ColorsDark, ColorsLight, useIconData } from '../../util/icon-helper';\nimport { Logger } from '../../util/logger';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport { KeyboardClickEvent, MouseClickEvent } from '../internal/ClickableWrapper';\nimport { FileEntryState } from './GridEntryPreview';\n\nexport const useFileEntryHtmlProps = (file: Nullable<FileData>): HTMLProps<HTMLDivElement> => {\n    return useMemo(() => {\n        const dataProps: { [prop: string]: Undefinable<string> } = {\n            'data-test-id': 'file-entry',\n            'data-chonky-file-id': file ? file.id : undefined,\n        };\n\n        return {\n            role: 'listitem',\n            ...dataProps,\n        };\n    }, [file]);\n};\n\nexport const useFileEntryState = (file: Nullable<FileData>, selected: boolean, focused: boolean) => {\n    const iconData = useIconData(file);\n    const { thumbnailUrl, thumbnailLoading } = useThumbnailUrl(file);\n\n    return useMemo<FileEntryState>(() => {\n        const fileColor = thumbnailUrl ? ColorsDark[iconData.colorCode] : ColorsLight[iconData.colorCode];\n        const iconSpin = thumbnailLoading || !file;\n        const icon = thumbnailLoading ? ChonkyIconName.loading : iconData.icon;\n\n        return {\n            childrenCount: FileHelper.getChildrenCount(file),\n            icon: file && file.icon !== undefined ? file.icon : icon,\n            iconSpin: iconSpin,\n            thumbnailUrl: thumbnailUrl,\n            color: file && file.color !== undefined ? file.color : fileColor,\n            selected: selected,\n            focused: !!focused,\n        };\n    }, [file, focused, iconData, selected, thumbnailLoading, thumbnailUrl]);\n};\n\nexport const useDndIcon = (dndState: DndEntryState) => {\n    let dndIconName: Nullable<ChonkyIconName> = null;\n    if (dndState.dndIsOver) {\n        const showDropIcon = dndState.dndCanDrop;\n        dndIconName = showDropIcon ? ChonkyIconName.dndCanDrop : ChonkyIconName.dndCannotDrop;\n    } else if (dndState.dndIsDragging) {\n        dndIconName = ChonkyIconName.dndDragging;\n    }\n\n    return dndIconName;\n};\n\nexport const useModifierIconComponents = (file: Nullable<FileData>) => {\n    const modifierIcons: ChonkyIconName[] = useMemo(() => {\n        const modifierIcons: ChonkyIconName[] = [];\n        if (FileHelper.isHidden(file)) modifierIcons.push(ChonkyIconName.hidden);\n        if (FileHelper.isSymlink(file)) modifierIcons.push(ChonkyIconName.symlink);\n        if (FileHelper.isEncrypted(file)) modifierIcons.push(ChonkyIconName.lock);\n        return modifierIcons;\n    }, [file]);\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    const modifierIconComponents = useMemo(\n        () => modifierIcons.map((icon, index) => <ChonkyIcon key={`file-modifier-${index}`} icon={icon} file={file}  />),\n        // For some reason ESLint marks `ChonkyIcon` as an unnecessary dependency,\n        // but we expect it can change at runtime so we disable the check.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [ChonkyIcon, modifierIcons]\n    );\n    return modifierIconComponents;\n};\n\nconst _extname = (fileName: string) => {\n    const parts = fileName.split('.');\n    if (parts.length) {\n        return `.${parts[parts.length - 1]}`;\n    }\n    return '';\n};\n\nexport const useFileNameComponent = (file: Nullable<FileData|any>) => {\n    return useMemo(() => {\n        if (!file) return <TextPlaceholder minLength={15} maxLength={20} />;\n\n        let name;\n        let extension = null;\n\n        const isDir = FileHelper.isDirectory(file);\n        if (isDir) {\n            name = file.name;\n        } else {\n            extension = file?.ext ?? _extname(file?.name);\n            name = file?.name.substr(0, file?.name.length - extension.length);\n        }\n\n        return (\n            <div className=\"chonky-file-name\">\n                {file.sortName ?? name}\n                {extension && <span className=\"chonky-file-entry-description-title-extension\">{extension}</span>}\n                <span className=\"chonky-file-title\">{file.name}</span>\n            </div>\n        );\n    }, [file]);\n};\n\nexport const useThumbnailUrl = (file: Nullable<FileData>) => {\n    const thumbnailGenerator = useSelector(selectThumbnailGenerator);\n    const [thumbnailUrl, setThumbnailUrl] = useState<Nullable<string>>(null);\n    const [thumbnailLoading, setThumbnailLoading] = useState<boolean>(false);\n    const loadingAttempts = useRef(0);\n\n    useEffect(() => {\n        let loadingCancelled = false;\n\n        if (file) {\n            if (thumbnailGenerator) {\n                if (loadingAttempts.current === 0) {\n                    setThumbnailLoading(true);\n                }\n                loadingAttempts.current++;\n                Promise.resolve()\n                    .then(() => thumbnailGenerator(file))\n                    .then((thumbnailUrl: any) => {\n                        if (loadingCancelled) return;\n                        setThumbnailLoading(false);\n\n                        if (thumbnailUrl && typeof thumbnailUrl === 'string') {\n                            setThumbnailUrl(thumbnailUrl);\n                        }\n                    })\n                    .catch(error => {\n                        if (!loadingCancelled) setThumbnailLoading(false);\n                        Logger.error(`User-defined \"thumbnailGenerator\" handler threw an error: ${error.message}`);\n                    });\n            } else if (file.thumbnailUrl) {\n                setThumbnailUrl(file.thumbnailUrl);\n            }\n        }\n\n        return () => {\n            loadingCancelled = true;\n        };\n    }, [file, setThumbnailUrl, setThumbnailLoading, thumbnailGenerator]);\n\n    return { thumbnailUrl, thumbnailLoading };\n};\n\nexport const useFileClickHandlers = (file: Nullable<FileData>, displayIndex: number) => {\n    const dispatch = useDispatch();\n\n    // Prepare base handlers\n    const onMouseClick = useCallback(\n        (event: MouseClickEvent, clickType: 'single' | 'double') => {\n            if (!file) return;\n\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.MouseClickFile, {\n                    clickType,\n                    file,\n                    fileDisplayIndex: displayIndex,\n                    altKey: event.altKey,\n                    ctrlKey: event.ctrlKey,\n                    shiftKey: event.shiftKey,\n                })\n            );\n        },\n        [dispatch, file, displayIndex]\n    );\n    const onKeyboardClick = useCallback(\n        (event: KeyboardClickEvent) => {\n            if (!file) return;\n\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.KeyboardClickFile, {\n                    file,\n                    fileDisplayIndex: displayIndex,\n                    enterKey: event.enterKey,\n                    spaceKey: event.spaceKey,\n                    altKey: event.altKey,\n                    ctrlKey: event.ctrlKey,\n                    shiftKey: event.shiftKey,\n                })\n            );\n        },\n        [dispatch, file, displayIndex]\n    );\n\n    // Prepare single/double click handlers\n    const onSingleClick = useCallback((event: MouseClickEvent) => onMouseClick(event, 'single'), [onMouseClick]);\n    const onDoubleClick = useCallback((event: MouseClickEvent) => onMouseClick(event, 'double'), [onMouseClick]);\n\n    return {\n        onSingleClick,\n        onDoubleClick,\n        onKeyboardClick,\n    };\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { makeLocalChonkyStyles } from '../../util/styles';\n\nexport interface TextPlaceholderProps {\n    minLength: number;\n    maxLength: number;\n}\n\nconst getRandomInt = (min: number, max: number) => {\n    return min + Math.floor(Math.random() * Math.floor(max - min));\n};\nexport const TextPlaceholder: React.FC<TextPlaceholderProps> = React.memo(props => {\n    const { minLength, maxLength } = props;\n\n    const placeholderLength = getRandomInt(minLength, maxLength);\n    const whitespace = '&nbsp;'.repeat(placeholderLength);\n\n    const classes = useStyles();\n    return (\n        <span\n            className={classes.textPlaceholder}\n            dangerouslySetInnerHTML={{ __html: whitespace }}\n        />\n    );\n});\n\nconst useStyles = makeLocalChonkyStyles(() => ({\n    '@keyframes loading-placeholder': {\n        '0%': { opacity: 0.2 },\n        '50%': { opacity: 0.4 },\n        '100%': { opacity: 0.2 },\n    },\n    textPlaceholder: {\n        animationName: '$loading-placeholder',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'linear',\n        animationDuration: '1.5s',\n        backgroundColor: '#ccc',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        borderRadius: 4,\n        maxWidth: '40%',\n        minWidth: 20,\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Button from '@material-ui/core/Button';\nimport React, { useContext } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { CustomVisibilityState } from '../../types/action.types';\nimport { useFileActionProps, useFileActionTrigger } from '../../util/file-actions';\nimport { useLocalizedFileActionStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarButtonProps {\n    className?: string;\n    text: string;\n    tooltip?: string;\n    active?: boolean;\n    icon?: Nullable<ChonkyIconName | string>;\n    iconOnly?: boolean;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n    disabled?: boolean;\n    dropdown?: boolean;\n}\n\nexport const ToolbarButton: React.FC<ToolbarButtonProps> = React.memo(props => {\n    const {\n        className: externalClassName,\n        text,\n        tooltip,\n        active,\n        icon,\n        iconOnly,\n        onClick,\n        disabled,\n        dropdown,\n    } = props;\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n\n    const iconComponent =\n        icon || iconOnly ? (\n            <div className={iconOnly ? '' : classes.iconWithText}>\n                <ChonkyIcon\n                    icon={icon ? icon : ChonkyIconName.fallbackIcon}\n                    fixedWidth={true}\n                />\n            </div>\n        ) : null;\n\n    const className = c({\n        [externalClassName ?? '']: true,\n        [classes.baseButton]: true,\n        [classes.iconOnlyButton]: iconOnly,\n        [classes.activeButton]: !!active,\n    });\n    return (\n        <Button\n            className={className}\n            onClick={onClick}\n            title={tooltip ? tooltip : text}\n            disabled={disabled || !onClick}\n        >\n            {iconComponent}\n            {text && !iconOnly && <span>{text}</span>}\n            {dropdown && (\n                <div className={classes.iconDropdown}>\n                    <ChonkyIcon\n                        icon={icon ? icon : ChonkyIconName.dropdown}\n                        fixedWidth={true}\n                    />\n                </div>\n            )}\n        </Button>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    baseButton: {\n        fontSize: important(theme.toolbar.fontSize),\n        textTransform: important('none'),\n        letterSpacing: important(0),\n        minWidth: important('auto'),\n        lineHeight: theme.toolbar.lineHeight,\n        height: theme.toolbar.size,\n        paddingBottom: important(0),\n        paddingTop: important(0),\n    },\n    iconWithText: {\n        marginRight: 8,\n    },\n    iconOnlyButton: {\n        width: theme.toolbar.size,\n        textAlign: 'center',\n    },\n    iconDropdown: {\n        fontSize: '0.7em',\n        marginLeft: 2,\n        marginTop: 1,\n    },\n    activeButton: {\n        color: important(theme.colors.textActive),\n    },\n}));\n\nexport interface SmartToolbarButtonProps {\n    fileActionId: string;\n}\n\nexport const SmartToolbarButton: React.FC<SmartToolbarButtonProps> = React.memo(\n    props => {\n        const { fileActionId } = props;\n\n        const action = useParamSelector(selectFileActionData, fileActionId);\n        const triggerAction = useFileActionTrigger(fileActionId);\n        const { icon, active, disabled } = useFileActionProps(fileActionId);\n        const { buttonName, buttonTooltip } = useLocalizedFileActionStrings(action);\n\n        if (!action) return null;\n        const { button } = action;\n        if (!button) return null;\n        if (action.customVisibility !== undefined && action.customVisibility() === CustomVisibilityState.Hidden) return null;\n\n        return (\n            <ToolbarButton\n                text={buttonName}\n                tooltip={buttonTooltip}\n                icon={icon}\n                iconOnly={button.iconOnly}\n                active={active}\n                onClick={triggerAction}\n                disabled={disabled}\n            />\n        );\n    }\n);\n","import { MaybePromise, Nullable } from 'tsdef';\n\nimport { FileActionState } from './action-handler.types';\nimport { FileViewConfig } from './file-view.types';\nimport { FileFilter, FileMap } from './file.types';\nimport { ChonkyIconName } from './icons.types';\nimport { ChonkyDispatch, RootState } from './redux.types';\nimport { FileSortKeySelector } from './sort.types';\n\nexport interface FileAction {\n    /**\n     * Unique file action ID. If you set the action ID to one of the built-in Chonky\n     * action action IDs, you custom action definition will override the built-in\n     * definition.\n     */\n    id: string;\n    /**\n     * When set to `true`, the action will only be active (dispatchable) when user\n     * selects one or more files. If `fileFilter` is defined, it will be applied to\n     * selection before checking if its empty.\n     */\n    requiresSelection?: boolean; // Requires selection of 1+ files\n    /**\n     * A predicate that determines whether a file should be included in the selection\n     * for this action.\n     */\n    fileFilter?: FileFilter;\n    /**\n     * List of hotkeys that should trigger this action, defined using `hotkey-js`\n     * notation.\n     * @see https://www.npmjs.com/package/hotkeys-js\n     */\n    hotkeys?: string[] | readonly string[];\n    /**\n     * When button is defined and `toolbar` or `contextMenu` is set to `true`, a\n     * button will be added to the relevant UI component. Clicking on this button\n     * will active this action. The appearance of the button will change based on\n     * the action definition and the current Chonky state.\n     */\n    button?: FileActionButton;\n    /**\n     * When `sortKeySelector` is specified, the action becomes a sorting toggle. When\n     * this action is activated, it will sort files using the key selector, toggling\n     * between Ascending and Descending orders.\n     */\n    sortKeySelector?: FileSortKeySelector;\n    /**\n     * When `fileViewConfig` is specified, triggering this action will apply the\n     * provided config to Chonky's file view.\n     */\n    fileViewConfig?: FileViewConfig;\n    /**\n     * When `option` is specified, the action becomes an option toggle. When the action\n     * is activated, the boolean value of the option will be toggled.\n     */\n    option?: FileActionOption;\n    /**\n     * When selection transform is defined, activating this action will update the file\n     * selection. If the transform function returns `null`, selection will be left\n     * untouched.\n     */\n    selectionTransform?: FileSelectionTransform;\n    /**\n     * When effect is defined, it will be called right before dispatching the action to\n     * the user defined action handler. If the effect function returns a promise, Chonky\n     * will wait for the promise to resolve or fail before dispatching the action to the\n     * handler. If this function returns `true`, the file action will NOT be dispatched\n     * the the handler.\n     */\n    effect?: FileActionEffect;\n    /**\n     * When customVisibility is defined, it will change the display state of the file action\n     * The function must return the visibility as one of the CustomVisibilityState values:\n     *  - Hidden\n     *  - Disabled\n     *  - Default\n     *  - Active\n     */\n    customVisibility?: () => CustomVisibilityState;\n    /**\n     * Field used to infer the type of action payload. It is used solely for Typescript\n     * type inference and action validation.\n     */\n    __payloadType?: any;\n    /**\n     * Field used to infer the type of extra state for this action. It is used solely\n     * for Typescript type inference and action validation.\n     */\n    __extraStateType?: any;\n}\n\nexport interface FileActionButton {\n    name: string; // Button name\n    toolbar?: boolean; // Whether to show the button in the toolbar\n    contextMenu?: boolean; // Whether to show the button in the context menu\n    group?: string; // Button group (dropdown in toolbar or section in context menu)\n    tooltip?: string; // Help tooltip text\n    icon?: ChonkyIconName | string | any; // Icon name\n    iconOnly?: boolean; // Whether to only display the icon\n}\n\nexport interface FileActionOption {\n    id: string; // Unique option ID\n    defaultValue: boolean; // Whether the option is enabled by default (required)\n}\n\nexport type FileSelectionTransform = (data: {\n    prevSelection: Set<string>;\n    fileIds: ReadonlyArray<string>;\n    fileMap: Readonly<FileMap>;\n    hiddenFileIds: Set<string>;\n}) => Nullable<Set<string>>;\n\nexport type FileActionEffect<Action extends FileAction = any> = (data: {\n    action: Action;\n    payload: Action['__payloadType'];\n    state: FileActionState<{}>; // extra state is empty on purpose\n    reduxDispatch: ChonkyDispatch;\n    getReduxState: () => RootState;\n}) => MaybePromise<undefined | boolean | void>;\n\nexport type FileActionMap = { [actonId: string]: FileAction };\n\nexport enum CustomVisibilityState {\n    Hidden, \n    Disabled, \n    Default,\n    Active\n};\n","import { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../action-definitions/index';\nimport {\n    selectFileActionData,\n    selectFileViewConfig,\n    selectOptionValue,\n    selectParentFolder,\n    selectSelectedFilesForActionCount,\n    selectSortActionId,\n    selectSortOrder,\n} from '../redux/selectors';\nimport { useParamSelector } from '../redux/store';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { CustomVisibilityState } from '../types/action.types';\nimport { SortOrder } from '../types/sort.types';\nimport { FileHelper } from './file-helper';\n\nexport const useFileActionTrigger = (fileActionId: string) => {\n    const dispatch = useDispatch();\n    const fileAction = useParamSelector(selectFileActionData, fileActionId);\n    return useCallback(() => dispatch(thunkRequestFileAction(fileAction, undefined)), [\n        dispatch,\n        fileAction,\n    ]);\n};\n\nexport const useFileActionProps = (\n    fileActionId: string\n): { icon: Nullable<ChonkyIconName | string>; active: boolean; disabled: boolean } => {\n    const parentFolder = useSelector(selectParentFolder);\n    const fileViewConfig = useSelector(selectFileViewConfig);\n\n    const sortActionId = useSelector(selectSortActionId);\n    const sortOrder = useSelector(selectSortOrder);\n\n    const action = useParamSelector(selectFileActionData, fileActionId);\n    // @ts-ignore\n    const optionValue = useParamSelector(selectOptionValue, action?.option?.id);\n\n    const actionSelectionSize = useParamSelector(\n        selectSelectedFilesForActionCount,\n        fileActionId\n    );\n\n    const actionSelectionEmpty = actionSelectionSize === 0;\n\n    return useMemo(() => {\n        if (!action) return { icon: null, active: false, disabled: true };\n\n        let icon = action.button?.icon ?? null;\n        if (action.sortKeySelector) {\n            if (sortActionId === action.id) {\n                if (sortOrder === SortOrder.ASC) {\n                    icon = ChonkyIconName.sortAsc;\n                } else {\n                    icon = ChonkyIconName.sortDesc;\n                }\n            } else {\n                icon = ChonkyIconName.placeholder;\n            }\n        } else if (action.option) {\n            if (optionValue) {\n                icon = ChonkyIconName.toggleOn;\n            } else {\n                icon = ChonkyIconName.toggleOff;\n            }\n        }\n\n        const isSortButtonAndCurrentSort = action.id === sortActionId;\n        const isFileViewButtonAndCurrentView = action.fileViewConfig === fileViewConfig;\n        const isOptionAndEnabled = action.option ? !!optionValue : false;\n\n        let customDisabled = false;\n        let customActive = false;\n        if (action.customVisibility !== undefined) {\n            customDisabled = action.customVisibility() === CustomVisibilityState.Disabled;\n            customActive = action.customVisibility() === CustomVisibilityState.Active;\n        }\n        const active =\n            isSortButtonAndCurrentSort ||\n            isFileViewButtonAndCurrentView ||\n            isOptionAndEnabled ||\n            customActive;\n        \n        let disabled: boolean = (!!action.requiresSelection && actionSelectionEmpty) || customDisabled;\n\n        if (action.id === ChonkyActions.OpenParentFolder.id) {\n            // We treat `open_parent_folder` file action as a special case as it\n            // requires the parent folder to be present to work...\n            disabled = disabled || !FileHelper.isOpenable(parentFolder);\n        }\n\n        return { icon, active, disabled };\n    }, [\n        parentFolder,\n        fileViewConfig,\n        sortActionId,\n        sortOrder,\n        action,\n        optionValue,\n        actionSelectionEmpty,\n    ]);\n};\n","import React, { ReactElement, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectToolbarItems } from '../../redux/selectors';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { SmartToolbarButton } from './ToolbarButton';\nimport { ToolbarDropdown } from './ToolbarDropdown';\nimport { ToolbarInfo } from './ToolbarInfo';\nimport { ToolbarSearch } from './ToolbarSearch';\n\nexport interface FileToolbarProps {}\n\nexport const FileToolbar: React.FC<FileToolbarProps> = React.memo(() => {\n    const classes = useStyles();\n    const toolbarItems = useSelector(selectToolbarItems);\n\n    const toolbarItemComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < toolbarItems.length; ++i) {\n            const item = toolbarItems[i];\n\n            const key = `toolbar-item-${typeof item === 'string' ? item : item.name}`;\n            const component =\n                typeof item === 'string' ? (\n                    <SmartToolbarButton key={key} fileActionId={item} />\n                ) : (\n                    <ToolbarDropdown\n                        key={key}\n                        name={item.name}\n                        fileActionIds={item.fileActionIds}\n                    />\n                );\n            components.push(component);\n        }\n        return components;\n    }, [toolbarItems]);\n\n    return (\n        <div className={classes.toolbarWrapper}>\n            <div className={classes.toolbarContainer}>\n                <div className={classes.toolbarLeft}>\n                    <ToolbarSearch />\n                    <ToolbarInfo />\n                </div>\n                <div className={classes.toolbarRight}>{toolbarItemComponents}</div>\n            </div>\n        </div>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    toolbarWrapper: {},\n    toolbarContainer: {\n        flexWrap: 'wrap-reverse',\n        display: 'flex',\n    },\n    toolbarLeft: {\n        paddingBottom: theme.margins.rootLayoutMargin,\n        flexWrap: 'nowrap',\n        flexGrow: 10000,\n        display: 'flex',\n    },\n    toolbarLeftFiller: {\n        flexGrow: 10000,\n    },\n    toolbarRight: {\n        paddingBottom: theme.margins.rootLayoutMargin,\n        flexWrap: 'nowrap',\n        display: 'flex',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Menu from '@material-ui/core/Menu';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { FileActionGroup } from '../../types/action-menus.types';\nimport { useLocalizedFileActionGroup } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { ToolbarButton } from './ToolbarButton';\nimport { SmartToolbarDropdownButton } from './ToolbarDropdownButton';\n\nexport type ToolbarDropdownProps = FileActionGroup;\n\nexport const ToolbarDropdown: React.FC<ToolbarDropdownProps> = React.memo(props => {\n    const { name, fileActionIds } = props;\n    const [anchor, setAnchor] = React.useState<null | HTMLElement>(null);\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLButtonElement>) => setAnchor(event.currentTarget),\n        [setAnchor]\n    );\n    const handleClose = useCallback(() => setAnchor(null), [setAnchor]);\n\n    const menuItemComponents = useMemo(\n        () =>\n            fileActionIds.map(id => (\n                <SmartToolbarDropdownButton\n                    key={`menu-item-${id}`}\n                    fileActionId={id}\n                    onClickFollowUp={handleClose}\n                />\n            )),\n        [fileActionIds, handleClose]\n    );\n\n    const localizedName = useLocalizedFileActionGroup(name);\n    const classes = useStyles();\n    return (\n        <>\n            <ToolbarButton text={localizedName} onClick={handleClick} dropdown={true} />\n            <Menu\n                autoFocus\n                keepMounted\n                elevation={2}\n                anchorEl={anchor}\n                onClose={handleClose}\n                open={Boolean(anchor)}\n                transitionDuration={150}\n                classes={{ list: classes.dropdownList }}\n            >\n                {menuItemComponents}\n            </Menu>\n        </>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    dropdownList: {\n        paddingBottom: important(0),\n        paddingTop: important(0),\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useCallback, useContext } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { CustomVisibilityState } from '../../types/action.types';\nimport { useFileActionProps, useFileActionTrigger } from '../../util/file-actions';\nimport { useLocalizedFileActionStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarDropdownButtonProps {\n    text: string;\n    active?: boolean;\n    icon?: Nullable<ChonkyIconName | string>;\n    onClick?: () => void;\n    disabled?: boolean;\n}\n\nexport const ToolbarDropdownButton = React.forwardRef(\n    (props: ToolbarDropdownButtonProps, ref: React.Ref<HTMLLIElement>) => {\n        const { text, active, icon, onClick, disabled } = props;\n        const classes = useStyles();\n        const ChonkyIcon = useContext(ChonkyIconContext);\n\n        const className = c({\n            [classes.baseButton]: true,\n            [classes.activeButton]: active,\n        });\n        return (\n            <MenuItem\n                ref={ref}\n                className={className}\n                onClick={onClick}\n                disabled={disabled}\n            >\n                {icon && (\n                    <ListItemIcon className={classes.icon}>\n                        <ChonkyIcon icon={icon} fixedWidth={true} />\n                    </ListItemIcon>\n                )}\n                <ListItemText primaryTypographyProps={{ className: classes.text }}>\n                    {text}\n                </ListItemText>\n            </MenuItem>\n        );\n    }\n);\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    baseButton: {\n        lineHeight: important(theme.toolbar.lineHeight),\n        height: important(theme.toolbar.size),\n        minHeight: important('auto'),\n        minWidth: important('auto'),\n        padding: important(20),\n    },\n    icon: {\n        fontSize: important(theme.toolbar.fontSize),\n        minWidth: important('auto'),\n        color: important('inherit'),\n        marginRight: 8,\n    },\n    text: {\n        fontSize: important(theme.toolbar.fontSize),\n    },\n    activeButton: {\n        color: important(theme.colors.textActive),\n    },\n}));\n\nexport interface SmartToolbarDropdownButtonProps {\n    fileActionId: string;\n    onClickFollowUp?: () => void;\n}\n\nexport const SmartToolbarDropdownButton = React.forwardRef(\n    (props: SmartToolbarDropdownButtonProps, ref: React.Ref<HTMLLIElement>) => {\n        const { fileActionId, onClickFollowUp } = props;\n\n        const action = useParamSelector(selectFileActionData, fileActionId);\n        const triggerAction = useFileActionTrigger(fileActionId);\n        const { icon, active, disabled } = useFileActionProps(fileActionId);\n        const { buttonName } = useLocalizedFileActionStrings(action);\n\n        // Combine external click handler with internal one\n        const handleClick = useCallback(() => {\n            triggerAction();\n            if (onClickFollowUp) onClickFollowUp();\n        }, [onClickFollowUp, triggerAction]);\n\n        if (!action) return null;\n        const { button } = action;\n        if (!button) return null;\n        if (action.customVisibility !== undefined && action.customVisibility() === CustomVisibilityState.Hidden) return null;\n\n        return (\n            <ToolbarDropdownButton\n                ref={ref}\n                text={buttonName}\n                icon={icon}\n                onClick={handleClick}\n                active={active}\n                disabled={disabled}\n            />\n        );\n    }\n);\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { selectHiddenFileCount, selectors, selectSelectionSize } from '../../redux/selectors';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarInfoProps {}\n\nexport const ToolbarInfo: React.FC<ToolbarInfoProps> = React.memo(() => {\n    const classes = useStyles();\n\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const selectionSize = useSelector(selectSelectionSize);\n    const hiddenCount = useSelector(selectHiddenFileCount);\n\n    const intl = useIntl();\n    const fileCountString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.Toolbar, 'visibleFileCount'),\n            defaultMessage: `{fileCount, plural,\n                =0 {# items}\n                one {# item}\n                other {# items}\n            }`,\n        },\n        { fileCount: displayFileIds.length }\n    );\n    const selectedString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.Toolbar, 'selectedFileCount'),\n            defaultMessage: `{fileCount, plural,\n                =0 {}\n                other {# selected}\n            }`,\n        },\n        { fileCount: selectionSize }\n    );\n    const hiddenString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.Toolbar, 'hiddenFileCount'),\n            defaultMessage: `{fileCount, plural,\n                =0 {}\n                other {# hidden}\n            }`,\n        },\n        { fileCount: hiddenCount }\n    );\n\n    return (\n        <div className={classes.infoContainer}>\n            <Typography className={classes.infoText} variant=\"body1\">\n                {fileCountString}\n                {(selectedString || hiddenString) && (\n                    <span className={classes.extraInfoSpan}>\n                        (\n                        <span className={classes.selectionSizeText}>\n                            {selectedString}\n                        </span>\n                        {selectedString && hiddenString && ', '}\n                        <span className={classes.hiddenCountText}>{hiddenString}</span>)\n                    </span>\n                )}\n            </Typography>\n        </div>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    infoContainer: {\n        height: theme.toolbar.size,\n        display: 'flex',\n    },\n    infoText: {\n        lineHeight: important(theme.toolbar.lineHeight),\n        fontSize: important(theme.toolbar.fontSize),\n        marginLeft: important(12),\n        height: theme.toolbar.size,\n    },\n    extraInfoSpan: {\n        marginRight: important(8),\n        marginLeft: important(8),\n        opacity: 0.8,\n    },\n    selectionSizeText: {\n        color: theme.colors.textActive,\n    },\n    hiddenCountText: {},\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { selectSearchString } from '../../redux/selectors';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useDebounce } from '../../util/hooks-helpers';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarSearchProps {}\n\nexport const ToolbarSearch: React.FC<ToolbarSearchProps> = React.memo(() => {\n    const intl = useIntl();\n    const searchPlaceholderString = intl.formatMessage({\n        id: getI18nId(I18nNamespace.Toolbar, 'searchPlaceholder'),\n        defaultMessage: 'Search',\n    });\n\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n\n    const searchInputRef = useRef<HTMLInputElement>();\n\n    const dispatch = useDispatch();\n    const reduxSearchString = useSelector(selectSearchString);\n\n    const [localSearchString, setLocalSearchString] = useState(reduxSearchString);\n    const [debouncedLocalSearchString] = useDebounce(localSearchString, 300);\n    const [showLoadingIndicator, setShowLoadingIndicator] = useState(false);\n\n    useEffect(() => {\n        dispatch(\n            reduxActions.setFocusSearchInput(() => {\n                if (searchInputRef.current) searchInputRef.current.focus();\n            })\n        );\n        return () => {\n            dispatch(reduxActions.setFocusSearchInput(null));\n        };\n    }, [dispatch]);\n\n    useEffect(() => {\n        setShowLoadingIndicator(false);\n        dispatch(reduxActions.setSearchString(debouncedLocalSearchString));\n    }, [debouncedLocalSearchString, dispatch]);\n\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        setShowLoadingIndicator(true);\n        setLocalSearchString(event.currentTarget.value);\n    }, []);\n    const handleKeyUp = useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            // Remove focus from the search input field when user presses escape.\n            // Note: We use KeyUp instead of KeyPress because some browser plugins can\n            //       intercept KeyPress events with Escape key.\n            //       @see https://stackoverflow.com/a/37461974\n            if (event.key === 'Escape') {\n                setLocalSearchString('');\n                dispatch(reduxActions.setSearchString(''));\n                if (searchInputRef.current) searchInputRef.current.blur();\n            }\n        },\n        [dispatch]\n    );\n\n    return (\n        <TextField\n            className={classes.searchFieldContainer}\n            size=\"small\"\n            variant=\"outlined\"\n            value={localSearchString}\n            placeholder={searchPlaceholderString}\n            onChange={handleChange as any}\n            inputRef={searchInputRef}\n            InputProps={{\n                onKeyUp: handleKeyUp,\n                startAdornment: (\n                    <InputAdornment className={classes.searchIcon} position=\"start\">\n                        <ChonkyIcon\n                            icon={showLoadingIndicator ? ChonkyIconName.loading : ChonkyIconName.search}\n                            spin={showLoadingIndicator}\n                        />\n                    </InputAdornment>\n                ),\n                className: classes.searchFieldInput,\n            }}\n            inputProps={{ className: classes.searchFieldInputInner }}\n        />\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    searchFieldContainer: {\n        height: theme.toolbar.size,\n        width: 150,\n    },\n    searchIcon: {\n        fontSize: '0.9em',\n        opacity: 0.75,\n    },\n    searchFieldInput: {\n        lineHeight: important(0),\n        padding: important(0),\n        margin: important(0),\n        fontSize: important(theme.toolbar.fontSize),\n        borderRadius: theme.toolbar.buttonRadius,\n        height: theme.toolbar.size - 4,\n        paddingLeft: important(8),\n        marginTop: 2,\n    },\n    searchFieldInputInner: {\n        lineHeight: important(`${theme.toolbar.size - 4}px`),\n        fontSize: important(theme.toolbar.fontSize),\n        height: important(theme.toolbar.size - 4),\n        padding: important([0, 8, 0, 0]),\n        margin: important(0),\n        '-webkit-appearance': 'none',\n    },\n}));\n","import React, { UIEvent, useCallback, useContext, useMemo, CSSProperties } from 'react';\nimport { useSelector } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport {\n    selectCurrentFolder,\n    selectFileViewConfig,\n    selectors,\n} from '../../redux/selectors';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useFileDrop } from '../../util/dnd';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport {\n    c,\n    getStripeGradient,\n    makeGlobalChonkyStyles,\n    makeLocalChonkyStyles,\n} from '../../util/styles';\nimport { FileListEmpty } from './FileListEmpty';\nimport { GridContainer } from './GridContainer';\nimport { ListContainer } from './ListContainer';\n\nexport interface FileListProps {\n    onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n    fileListStyle?: CSSProperties & { gridHeight: any };\n    activeStar: React.ReactElement<any, any>;\n    deactivateStar: React.ReactElement<any, any>;\n    tags: React.ReactElement<any, any>;\n}\n\ninterface StyleState {\n    dndCanDrop: boolean;\n    dndIsOverCurrent: boolean;\n}\n\nexport const FileList: React.FC<FileListProps> = React.memo((props: FileListProps) => {\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const viewConfig = useSelector(selectFileViewConfig);\n\n    const currentFolder = useSelector(selectCurrentFolder);\n    const { drop, dndCanDrop, dndIsOverCurrent } = useFileDrop({ file: currentFolder });\n    const styleState = useMemo<StyleState>(() => ({ dndCanDrop, dndIsOverCurrent }), [\n        dndCanDrop,\n        dndIsOverCurrent,\n    ]);\n\n    const localClasses = useLocalStyles(styleState);\n    const classes = useStyles(viewConfig);\n    const { onScroll, fileListStyle, activeStar, deactivateStar, tags } = props;\n\n    // In Chonky v0.x, this field was user-configurable. In Chonky v1.x+, we hardcode\n    // this to `true` to simplify configuration. Users can just wrap Chonky in their\n    // own `div` if they want to have finer control over the height.\n    const fillParentContainer = true;\n\n    const listRenderer = useCallback(\n        ({ width, height }: { width: number; height: number }) => {\n            if (displayFileIds.length === 0) {\n                return <FileListEmpty width={width} height={viewConfig.entryHeight} />;\n            } else if (viewConfig.mode === FileViewMode.List) {\n                return (\n                    <ListContainer\n                        width={width}\n                        height={height}\n                        fileListStyle={fileListStyle}\n                        activeStar={activeStar}\n                        deactivateStar={deactivateStar}\n                        tags={tags}\n                    />\n                );\n            } else {\n                return (\n                    <GridContainer\n                        width={width}\n                        height={height}\n                        fileListStyle={fileListStyle}\n                    />\n                );\n            }\n        },\n        [displayFileIds, viewConfig]\n    );\n\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    return (\n        <div\n            onScroll={onScroll}\n            ref={drop}\n            className={c([classes.fileListWrapper, localClasses.fileListWrapper])}\n            role=\"list\"\n        >\n            <div className={localClasses.dndDropZone}>\n                <div className={localClasses.dndDropZoneIcon}>\n                    <ChonkyIcon\n                        icon={\n                            dndCanDrop\n                                ? ChonkyIconName.dndCanDrop\n                                : ChonkyIconName.dndCannotDrop\n                        }\n                    />\n                </div>\n            </div>\n            <AutoSizer disableHeight={!fillParentContainer}>{listRenderer}</AutoSizer>\n        </div>\n    );\n});\nFileList.displayName = 'FileList';\n\nconst useLocalStyles = makeLocalChonkyStyles(theme => ({\n    fileListWrapper: {\n        minHeight: ChonkyActions.EnableGridView.fileViewConfig.entryHeight + 2,\n        background: (state: StyleState) =>\n            state.dndIsOverCurrent && state.dndCanDrop\n                ? state.dndCanDrop\n                    ? getStripeGradient(\n                          theme.dnd.fileListCanDropMaskOne,\n                          theme.dnd.fileListCanDropMaskTwo\n                      )\n                    : getStripeGradient(\n                          theme.dnd.fileListCannotDropMaskOne,\n                          theme.dnd.fileListCannotDropMaskTwo\n                      )\n                : 'none',\n    },\n    dndDropZone: {\n        display: (state: StyleState) =>\n            // When we cannot drop, we don't show an indicator at all\n            state.dndIsOverCurrent && state.dndCanDrop ? 'block' : 'none',\n        borderRadius: theme.gridFileEntry.borderRadius,\n        pointerEvents: 'none',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 2,\n    },\n    dndDropZoneIcon: {\n        backgroundColor: (state: StyleState) =>\n            state.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask,\n        color: (state: StyleState) =>\n            state.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor,\n        borderRadius: theme.gridFileEntry.borderRadius,\n        transform: 'translateX(-50%) translateY(-50%)',\n        position: 'absolute',\n        textAlign: 'center',\n        lineHeight: '60px',\n        fontSize: '2em',\n        left: '50%',\n        height: 60,\n        top: '50%',\n        width: 60,\n    },\n}));\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    fileListWrapper: {\n        height: '100%',\n        maxHeight: '100%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useContext } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface FileListEmptyProps {\n    width: number;\n    height: number;\n}\n\nexport const FileListEmpty: React.FC<FileListEmptyProps> = props => {\n    const { width, height } = props;\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    const style: CSSProperties = {\n        width,\n        height,\n    };\n\n    const intl = useIntl();\n    const emptyString = intl.formatMessage({\n        id: getI18nId(I18nNamespace.FileList, 'nothingToShow'),\n        defaultMessage: 'Nothing to show',\n    });\n\n    return (\n        <div className={classes.fileListEmpty} style={style}>\n            <div className={classes.fileListEmptyContent}>\n                <ChonkyIcon icon={ChonkyIconName.folderOpen} />\n                &nbsp; {emptyString}\n            </div>\n        </div>\n    );\n};\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    fileListEmpty: {\n        color: theme.palette.text.disabled,\n        position: 'relative',\n        textAlign: 'center',\n        fontSize: '1.2em',\n    },\n    fileListEmptyContent: {\n        transform: 'translateX(-50%) translateY(-50%)',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { VariableSizeGrid } from 'react-window';\n\nimport { ChonkyActions } from '../../action-definitions';\nimport { selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewConfigGrid } from '../../types/file-view.types';\nimport { RootState } from '../../types/redux.types';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\nimport { makeGlobalChonkyStyles, useIsMobileBreakpoint } from '../../util/styles';\nimport { SmartFileEntry } from './FileEntry';\n\nexport interface FileListGridProps {\n    width: number;\n    height: number;\n    fileListStyle?: CSSProperties & { gridHeight: any }\n}\n\ninterface GridConfig {\n    rowCount: number;\n    columnCount: number;\n    gutter: number;\n    rowHeight: number;\n    columnWidth: number;\n}\n\nexport const isMobileDevice = () => {\n    // noinspection JSDeprecatedSymbols\n    return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n};\n\nexport const getGridConfig = (\n    width: number,\n    fileCount: number,\n    viewConfig: FileViewConfigGrid,\n    isMobileBreakpoint: boolean\n): GridConfig => {\n    const gutter = isMobileBreakpoint ? 5 : 8;\n    const scrollbar = isMobileDevice() ? 0 : 18;\n\n    let columnCount: number;\n    let columnWidth: number;\n    if (isMobileBreakpoint) {\n        columnCount = 2;\n        columnWidth = (width - gutter - scrollbar) / columnCount;\n    } else {\n        columnWidth = viewConfig.entryWidth;\n        columnCount = Math.max(1, Math.floor((width - scrollbar) / (columnWidth + gutter)));\n    }\n\n    const rowCount = Math.ceil(fileCount / columnCount);\n\n    return {\n        rowCount,\n        columnCount,\n        gutter,\n        rowHeight: viewConfig.entryHeight,\n        columnWidth,\n    };\n};\n\nexport const GridContainer: React.FC<FileListGridProps> = React.memo(props => {\n    const { width, height, fileListStyle = { width: 0, gridHeight: 0 } } = props;\n\n    const viewConfig = useSelector(selectFileViewConfig) as FileViewConfigGrid;\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const fileCount = useMemo(() => displayFileIds.length, [displayFileIds]);\n\n    const gridRef = useRef<VariableSizeGrid>();\n    const isMobileBreakpoint = useIsMobileBreakpoint();\n\n    // Whenever the grid config changes at runtime, we call a method on the\n    // `VariableSizeGrid` handle to reset column width/row height cache.\n    // !!! Note that we deliberately update the `gridRef` firsts and update the React\n    //     state AFTER that. This is needed to avoid file entries jumping up/down.\n    const [gridConfig, setGridConfig] = useState(getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint));\n    const gridConfigRef = useRef(gridConfig);\n    useEffect(() => {\n        const oldConf = gridConfigRef.current;\n        const newConf = getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint);\n\n        gridConfigRef.current = newConf;\n        if (gridRef.current) {\n            if (oldConf.rowCount !== newConf.rowCount) {\n                gridRef.current.resetAfterRowIndex(Math.min(oldConf.rowCount, newConf.rowCount) - 1);\n            }\n            if (oldConf.columnCount !== newConf.columnCount) {\n                gridRef.current.resetAfterColumnIndex(Math.min(oldConf.columnCount, newConf.rowCount) - 1);\n            }\n            if (oldConf.columnWidth !== newConf.columnWidth) {\n                gridRef.current.resetAfterIndices({ columnIndex: 0, rowIndex: 0 });\n            }\n        }\n\n        setGridConfig(newConf);\n    }, [setGridConfig, gridConfigRef, isMobileBreakpoint, width, viewConfig, fileCount]);\n\n    const sizers = useMemo(() => {\n        const gc = gridConfigRef;\n        return {\n            getColumnWidth: (index: number) => {\n                if (fileListStyle.width) {\n                    return fileListStyle.width as any;\n                }\n                return gc.current.columnWidth! + (index === gc.current.columnCount - 1 ? 0 : gc.current.gutter)\n            },\n            getRowHeight: (index: number) => {\n                if (fileListStyle.gridHeight) {\n                    return fileListStyle.gridHeight;\n                }\n                return gc.current.rowHeight + (index === gc.current.rowCount - 1 ? 0 : gc.current.gutter)\n            },\n        };\n    }, [gridConfigRef]);\n\n    const displayFileIdsRef = useInstanceVariable(useSelector(selectors.getDisplayFileIds));\n    const getItemKey = useCallback(\n        (data: { columnIndex: number; rowIndex: number; data: any }) => {\n            const index = data.rowIndex * gridConfigRef.current.columnCount + data.columnIndex;\n\n            return displayFileIdsRef.current[index] ?? `loading-file-${index}`;\n        },\n        [gridConfigRef, displayFileIdsRef]\n    );\n\n    const cellRenderer = useCallback(\n        (data: { rowIndex: number; columnIndex: number; style: CSSProperties }) => {\n            const gc = gridConfigRef;\n            const index = data.rowIndex * gc.current.columnCount + data.columnIndex;\n            const fileId = displayFileIds[index];\n            if (displayFileIds[index] === undefined) return null;\n            const styleWithGutter: CSSProperties = {\n                ...data.style,\n                paddingRight: data.columnIndex === gc.current.columnCount - 1 ? 0 : gc.current.gutter,\n                paddingBottom: data.rowIndex === gc.current.rowCount - 1 ? 0 : gc.current.gutter,\n                boxSizing: 'border-box',\n            };\n\n            return (\n                <div style={styleWithGutter}>\n                    <SmartFileEntry fileId={fileId ?? null} displayIndex={index} fileViewMode={viewConfig.mode} />\n                </div>\n            );\n        },\n        [displayFileIds, viewConfig.mode]\n    );\n\n    const classes = useStyles();\n    const gridComponent = useMemo(() => {\n        return (\n            <VariableSizeGrid\n                ref={gridRef as any}\n                className={classes.gridContainer}\n                estimatedRowHeight={gridConfig.rowHeight + gridConfig.gutter}\n                rowHeight={sizers.getRowHeight}\n                estimatedColumnWidth={gridConfig.columnWidth + gridConfig.gutter}\n                columnWidth={sizers.getColumnWidth}\n                columnCount={gridConfig.columnCount}\n                height={height}\n                rowCount={gridConfig.rowCount}\n                width={width}\n                itemKey={getItemKey}\n            >\n                {cellRenderer}\n            </VariableSizeGrid>\n        );\n    }, [\n        classes.gridContainer,\n        gridConfig.rowHeight,\n        gridConfig.gutter,\n        gridConfig.columnWidth,\n        gridConfig.columnCount,\n        gridConfig.rowCount,\n        sizers.getRowHeight,\n        sizers.getColumnWidth,\n        height,\n        width,\n        getItemKey,\n        cellRenderer,\n    ]);\n\n    return gridComponent;\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    gridContainer: {},\n}));\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport {\n    selectFileData,\n    selectIsDnDDisabled,\n    selectIsFileSelected,\n} from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { DndEntryState, FileEntryProps } from '../../types/file-list.types';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { ClickableWrapper, ClickableWrapperProps } from '../internal/ClickableWrapper';\nimport { CompactEntry } from './CompactEntry';\nimport { DnDFileEntry } from './DnDFileEntry';\nimport { useFileClickHandlers } from './FileEntry-hooks';\nimport { GridEntry } from './GridEntry';\nimport { ListEntry } from './ListEntry';\n\nexport interface SmartFileEntryProps {\n    fileId: Nullable<string>;\n    displayIndex: number;\n    fileViewMode: FileViewMode;\n    activeStar?: React.ReactElement<any, any>;\n    deactivateStar?: React.ReactElement<any, any>;\n    tags?: React.ReactElement<any, any>;\n}\n\nconst disabledDndState: DndEntryState = {\n    dndIsDragging: false,\n    dndIsOver: false,\n    dndCanDrop: false,\n};\n\nexport const SmartFileEntry: React.FC<SmartFileEntryProps> = React.memo(\n    ({ fileId, displayIndex, fileViewMode, activeStar, deactivateStar, tags }) => {\n        const classes = useStyles();\n\n        // Basic properties\n        const file = useParamSelector(selectFileData, fileId);\n        const selected = useParamSelector(selectIsFileSelected, fileId);\n        const dndDisabled = useSelector(selectIsDnDDisabled);\n\n        // Clickable wrapper properties\n        const fileClickHandlers = useFileClickHandlers(file, displayIndex);\n        const [focused, setFocused] = useState(false);\n        const clickableWrapperProps: ClickableWrapperProps = {\n            wrapperTag: 'div',\n            passthroughProps: { className: classes.fileEntryClickableWrapper },\n            ...(FileHelper.isClickable(file) ? fileClickHandlers : undefined),\n            setFocused,\n        };\n\n        // File entry properties\n        const fileEntryProps: Omit<FileEntryProps, 'dndState'> = {\n            file,\n            selected,\n            focused,\n            activeStar,\n            deactivateStar,\n            tags,\n        };\n\n        let EntryComponent: React.FC<FileEntryProps>;\n        if (fileViewMode === FileViewMode.List) EntryComponent = ListEntry;\n        else if (fileViewMode === FileViewMode.Compact) EntryComponent = CompactEntry;\n        else EntryComponent = GridEntry;\n\n        return dndDisabled ? (\n            <ClickableWrapper {...clickableWrapperProps}>\n                <EntryComponent\n                    {...fileEntryProps}\n                    dndState={disabledDndState}\n                />\n            </ClickableWrapper>\n        ) : (\n            <DnDFileEntry file={file}>\n                {dndState => (\n                    <ClickableWrapper {...clickableWrapperProps}>\n                        <EntryComponent\n                            {...fileEntryProps}\n                            dndState={dndState}\n                        />\n                    </ClickableWrapper>\n                )}\n            </DnDFileEntry>\n        );\n    }\n);\nSmartFileEntry.displayName = 'SmartFileEntry';\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    fileEntryClickableWrapper: {\n        // We disable default browser outline because Chonky provides its own outline\n        // (which doesn't compromise accessibility, hopefully)\n        outline: 'none !important',\n        position: 'relative',\n        height: '100%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback } from 'react';\nimport { AnyObjectWithStringKeys } from 'tsdef';\n\nimport { useClickHandler, useKeyDownHandler } from './ClickableWrapper-hooks';\n\nexport interface MouseClickEvent {\n    altKey: boolean;\n    ctrlKey: boolean;\n    shiftKey: boolean;\n}\nexport type MouseClickEventHandler = (event: MouseClickEvent) => void;\n\nexport interface KeyboardClickEvent {\n    enterKey: boolean;\n    spaceKey: boolean;\n    altKey: boolean;\n    ctrlKey: boolean;\n    shiftKey: boolean;\n}\nexport type KeyboardClickEventHandler = (event: KeyboardClickEvent) => void;\n\nexport interface ClickableWrapperProps {\n    wrapperTag: any;\n    passthroughProps?: any;\n\n    onSingleClick?: MouseClickEventHandler;\n    onDoubleClick?: MouseClickEventHandler;\n    onKeyboardClick?: KeyboardClickEventHandler;\n    setFocused?: (focused: boolean) => void;\n}\n\nexport const ClickableWrapper: React.FC<ClickableWrapperProps> = props => {\n    const {\n        children,\n        wrapperTag: WrapperTag,\n        passthroughProps,\n        onSingleClick,\n        onDoubleClick,\n        onKeyboardClick,\n        setFocused,\n    } = props;\n\n    const handleClick = useClickHandler(onSingleClick, onDoubleClick);\n    const handleKeyDown = useKeyDownHandler(onKeyboardClick);\n\n    const compProps: AnyObjectWithStringKeys = {\n        onFocus: useCallback(() => setFocused && setFocused(true), [setFocused]),\n        onBlur: useCallback(() => setFocused && setFocused(false), [setFocused]),\n    };\n\n    if (onSingleClick || onDoubleClick || onKeyboardClick) {\n        compProps.onClick = handleClick;\n        compProps.onKeyDown = handleKeyDown;\n        compProps.tabIndex = 0;\n    }\n\n    const mergedProps = { ...compProps, ...passthroughProps };\n    return <WrapperTag {...mergedProps}>{children}</WrapperTag>;\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Nilable, Nullable } from 'tsdef';\n\nimport { selectDoubleClickDelay } from '../../redux/selectors';\nimport {\n    KeyboardClickEvent,\n    KeyboardClickEventHandler,\n    MouseClickEvent,\n    MouseClickEventHandler,\n} from './ClickableWrapper';\n\nexport const useClickHandler = (\n    onSingleClick: Nilable<MouseClickEventHandler>,\n    onDoubleClick: Nilable<MouseClickEventHandler>\n) => {\n    const doubleClickDelay = useSelector(selectDoubleClickDelay);\n\n    const counter = useRef({\n        clickCount: 0,\n        clickTimeout: null as Nullable<number>,\n    });\n\n    return useCallback(\n        (event: React.MouseEvent) => {\n            const mouseClickEvent: MouseClickEvent = {\n                altKey: event.altKey,\n                ctrlKey: event.ctrlKey || event.metaKey,\n                shiftKey: event.shiftKey,\n\n            };\n\n            counter.current.clickCount++;\n            if (counter.current.clickCount === 1) {\n                if (onSingleClick) {\n                    event.preventDefault();\n                    onSingleClick(mouseClickEvent);\n                }\n                counter.current.clickCount = 1;\n                // @ts-ignore\n                counter.current.clickTimeout = setTimeout(\n                    () => (counter.current.clickCount = 0),\n                    doubleClickDelay\n                );\n            } else if (counter.current.clickCount === 2) {\n                if (onDoubleClick) {\n                    event.preventDefault();\n                    onDoubleClick(mouseClickEvent);\n                }\n                if (typeof counter.current.clickTimeout === 'number') {\n                    clearTimeout(counter.current.clickTimeout);\n                    counter.current.clickTimeout = null;\n                    counter.current.clickCount = 0;\n                }\n            }\n        },\n        [doubleClickDelay, onSingleClick, onDoubleClick, counter]\n    );\n};\n\nexport const useKeyDownHandler = (onKeyboardClick?: KeyboardClickEventHandler) => {\n    return useCallback(\n        (event: React.KeyboardEvent) => {\n            if (!onKeyboardClick) return;\n\n            const keyboardClickEvent: KeyboardClickEvent = {\n                enterKey: event.nativeEvent.code === 'Enter',\n                spaceKey: event.nativeEvent.code === 'Space',\n                altKey: event.altKey,\n                ctrlKey: event.ctrlKey,\n                shiftKey: event.shiftKey,\n            };\n\n            if (keyboardClickEvent.spaceKey || keyboardClickEvent.enterKey) {\n                event.preventDefault();\n                event.stopPropagation();\n                onKeyboardClick(keyboardClickEvent);\n            }\n        },\n        [onKeyboardClick]\n    );\n};\n","import React, { useContext } from 'react';\n\nimport { FileEntryProps } from '../../types/file-list.types';\nimport { useLocalizedFileEntryStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport { useFileEntryHtmlProps, useFileEntryState } from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState } from './GridEntryPreview';\n\nexport const CompactEntry: React.FC<FileEntryProps> = React.memo(\n    // @ts-ignore\n    ({ file, selected, focused, dndState }) => {\n        const entryState: FileEntryState = useFileEntryState(file, selected, focused);\n\n        const { fileModDateString, fileSizeString } = useLocalizedFileEntryStrings(\n            file\n        );\n\n        const classes = useStyles(entryState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n        const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n        return (\n            <div className={classes.listFileEntry} {...fileEntryHtmlProps}>\n                <div className={classes.listFileEntryIcon}>\n                    <ChonkyIcon\n                        icon={entryState.icon}\n                        spin={entryState.iconSpin}\n                        fixedWidth={true}\n                    />\n                </div>\n                <div className={classes.listFileEntryDescription}>\n                    <div\n                        className={classes.listFileEntryName}\n                        title={file ? file.name : undefined}\n                    >\n                        <FileEntryName file={file} />\n                    </div>\n                    <div className={classes.listFileEntryProperties}>\n                        <div className={classes.listFileEntryProperty}>\n                            {file ? (\n                                fileModDateString ?? <span>—</span>\n                            ) : (\n                                <TextPlaceholder minLength={5} maxLength={15} />\n                            )}\n                        </div>\n                        <div className={classes.listFileEntryProperty}>\n                            {file ? (\n                                fileSizeString ?? <span>—</span>\n                            ) : (\n                                <TextPlaceholder minLength={10} maxLength={20} />\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"chonky-file-entry-outline\"></div>\n                <div className=\"chonky-file-entry-selection\"></div>\n            </div>\n        );\n    }\n);\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    listFileEntry: {\n        fontSize: theme.listFileEntry.fontSize,\n        alignItems: 'center',\n        position: 'relative',\n        display: 'flex',\n        height: '100%',\n    },\n    listFileEntryIcon: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: 'inset rgba(255, 255, 255, 0.5) 0 0 0 999px',\n        borderRadius: theme.listFileEntry.iconBorderRadius,\n        fontSize: theme.listFileEntry.iconFontSize,\n        color: '#fff',\n        padding: 8,\n    },\n    listFileSearch: {},\n    listFileEntryDescription: {\n        flexDirection: 'column',\n        display: 'flex',\n        flexGrow: 1,\n    },\n    listFileEntryName: {\n        padding: [0, 8, 4, 8],\n    },\n    listFileEntryProperties: {\n        fontSize: theme.listFileEntry.propertyFontSize,\n        flexDirection: 'row',\n        display: 'flex',\n    },\n    listFileEntryProperty: {\n        padding: [0, 8],\n        opacity: 0.4,\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { FileData } from '../../types/file.types';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { useFileNameComponent, useModifierIconComponents } from './FileEntry-hooks';\n\nexport interface FileEntryNameProps {\n    file: Nullable<FileData>;\n    className?: string;\n    tags?: React.ReactElement<any, any>;\n}\n\nexport const FileEntryName: React.FC<FileEntryNameProps> = React.memo(({ file, className }) => {\n    const modifierIconComponents = useModifierIconComponents(file);\n    const fileNameComponent = useFileNameComponent(file);\n    const fileTags = file?.tags?.split(\",\").filter((d:string) => Boolean(d));\n\n    const classes = useStyles();\n    return (\n        <span className={className} title={file ? file.name : undefined}>\n            {modifierIconComponents.length > 0 && (\n                <span className={classes.modifierIcons}>{modifierIconComponents}</span>\n            )}\n            {fileNameComponent}\n            {fileTags?.length ? (\n                <div className=\"chonky-tags\">\n                    {fileTags?.map((tag:string, index: number) => (\n                        <span className={'tags-'+ index.toString()+ '-' + tag} key={index.toString()+tag}>{tag}</span>\n                    ))}\n                </div>)\n             : null}\n        </span>\n    );\n});\nFileEntryName.displayName = 'FileEntryName';\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    modifierIcons: {\n        color: theme.palette.text.hint,\n        position: 'relative',\n        fontSize: '0.775em',\n        paddingRight: 5,\n    },\n}));\n","import React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { FileData } from '../../types/file.types';\nimport { useDndHoverOpen, useFileEntryDnD } from '../../util/dnd';\nimport { FileHelper } from '../../util/file-helper';\nimport { makeLocalChonkyStyles } from '../../util/styles';\n\nexport interface DnDFileEntryProps {\n    file: Nullable<FileData>;\n    children: (dndState: DndEntryState) => React.ReactElement;\n}\n\nexport const DnDFileEntry = React.memo(({ file, children }: DnDFileEntryProps) => {\n    const { drop, drag, dndState } = useFileEntryDnD(file);\n\n    useDndHoverOpen(file, dndState);\n    const classes = useStyles();\n    return (\n        <div ref={drop} className={classes.fillParent}>\n            <div\n                ref={FileHelper.isDraggable(file) ? drag : null}\n                className={classes.fillParent}\n            >\n                {children(dndState)}\n            </div>\n        </div>\n    );\n});\n\nexport const useStyles = makeLocalChonkyStyles(() => ({\n    fillParent: {\n        height: '100%',\n    },\n}));\n","import React from 'react';\n\nimport { FileEntryProps } from '../../types/file-list.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { useFileEntryHtmlProps, useFileEntryState } from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState, GridEntryPreviewFile, GridEntryPreviewFolder } from './GridEntryPreview';\n\nexport const GridEntry: React.FC<FileEntryProps> = React.memo(({ file, selected, focused, dndState }) => {\n    const isDirectory = FileHelper.isDirectory(file);\n    const entryState = useFileEntryState(file, selected, focused);\n\n    const classes = useFileEntryStyles(entryState);\n    const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n    const entryClassName = c({\n        [classes.gridFileEntry]: true,\n    });\n    return (\n        <div className={entryClassName} {...fileEntryHtmlProps}>\n            {isDirectory ? (\n                <GridEntryPreviewFolder\n                    className={classes.gridFileEntryPreview}\n                    entryState={entryState}\n                    dndState={dndState}\n                />\n            ) : (\n                <GridEntryPreviewFile\n                    className={classes.gridFileEntryPreview}\n                    entryState={entryState}\n                    dndState={dndState}\n                />\n            )}\n            <div className={classes.gridFileEntryNameContainer}>\n                <FileEntryName className={classes.gridFileEntryName} file={file} />\n            </div>\n        </div>\n    );\n});\nGridEntry.displayName = 'GridEntry';\n\nconst useFileEntryStyles = makeLocalChonkyStyles(theme => ({\n    gridFileEntry: {\n        flexDirection: 'column',\n        display: 'flex',\n        height: '100%',\n    },\n    gridFileEntryPreview: {\n        flexGrow: 1,\n    },\n    gridFileEntryNameContainer: {\n        fontSize: theme.gridFileEntry.fontSize,\n        wordBreak: 'break-word',\n        textAlign: 'center',\n        paddingTop: 5,\n    },\n    gridFileEntryName: {\n        backgroundColor: (state: FileEntryState) => (state.selected ? 'rgba(0,153,255, .25)' : 'transparent'),\n        textDecoration: (state: FileEntryState) => (state.focused ? 'underline' : 'none'),\n        borderRadius: 3,\n        padding: [2, 4],\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext, useEffect } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeLocalChonkyStyles } from '../../util/styles';\nimport { FileThumbnail } from './FileThumbnail';\nimport { GridEntryDndIndicator } from './GridEntryDndIndicator';\n\nexport type FileEntryState = {\n    childrenCount: Nullable<number>;\n    color: string;\n    icon: ChonkyIconName | string;\n    thumbnailUrl: Nullable<string>;\n    iconSpin: boolean;\n    selected: boolean;\n    focused: boolean;\n};\n\nexport interface FileEntryPreviewProps {\n    className?: string;\n    entryState: FileEntryState;\n    dndState: DndEntryState;\n}\n\nexport const GridEntryPreviewFolder: React.FC<FileEntryPreviewProps> = React.memo(props => {\n    const { className: externalClassName, entryState, dndState } = props;\n\n    const folderClasses = useFolderStyles(entryState);\n    const fileClasses = useFileStyles(entryState);\n    const commonClasses = useCommonEntryStyles(entryState);\n    const className = c({\n        [folderClasses.previewFile]: true,\n        [externalClassName || '']: !!externalClassName,\n    });\n    return (\n        <div className={className}>\n            <div className={folderClasses.folderBackSideMid}>\n                <div className={folderClasses.folderBackSideTop} />\n                <div className={folderClasses.folderFrontSide}>\n                    <GridEntryDndIndicator className={fileClasses.dndIndicator} dndState={dndState} />\n                    <div className={c([fileClasses.fileIcon, folderClasses.fileIcon])}>{entryState.childrenCount}</div>\n                    <div className={commonClasses.selectionIndicator}></div>\n                    <FileThumbnail className={fileClasses.thumbnail} thumbnailUrl={entryState.thumbnailUrl} />\n                </div>\n            </div>\n        </div>\n    );\n});\nGridEntryPreviewFolder.displayName = 'GridEntryPreviewFolder';\n\nconst useFolderStyles = makeLocalChonkyStyles(theme => ({\n    previewFile: {\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'relative',\n        overflow: 'hidden',\n    },\n    folderBackSideTop: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: (state: FileEntryState) => {\n            let color = theme.gridFileEntry.folderBackColorTint;\n            if (state.focused) color = 'rgba(0, 0, 0, 0.3)';\n            else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n            return `inset ${color} 0 0 0 999px`;\n        },\n        borderTopLeftRadius: theme.gridFileEntry.borderRadius,\n        borderTopRightRadius: 10,\n        position: 'absolute',\n        right: '60%',\n        height: 13,\n        top: -10,\n        left: 0,\n        '&:after': {\n            borderRightColor: theme.palette.background.paper,\n            borderTopColor: theme.palette.background.paper,\n            borderBottomColor: 'transparent',\n            borderLeftColor: 'transparent',\n            borderWidth: [0, 15, 10, 0],\n            borderStyle: 'solid',\n            position: 'absolute',\n            display: 'block',\n            content: '\"\"',\n            right: 0,\n            top: 0,\n        },\n    },\n    folderBackSideMid: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: (state: FileEntryState) => {\n            let color = theme.gridFileEntry.folderBackColorTint;\n            if (state.focused) color = 'rgba(0, 0, 0, 0.3)';\n            else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n            return `inset ${color} 0 0 0 999px`;\n        },\n        borderTopRightRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        left: 0,\n        top: 10,\n    },\n    folderFrontSide: {\n        boxShadow: (state: FileEntryState) => {\n            const shadows: string[] = [];\n            if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n            if (state.selected) shadows.push('inset rgba(0, 153, 255, .65) 0 0 0 3px');\n            shadows.push(`inset ${theme.gridFileEntry.folderFrontColorTint} 0 0 0 999px`);\n            return shadows.join(', ');\n        },\n        backgroundColor: (state: FileEntryState) => state.color,\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        overflow: 'hidden',\n        bottom: 0,\n        right: 0,\n        left: 0,\n        top: 10,\n    },\n    fileIcon: {\n        fontSize: important(theme.gridFileEntry.childrenCountSize),\n    },\n}));\n\nexport const GridEntryPreviewFile: React.FC<FileEntryPreviewProps> = React.memo(props => {\n    const { className: externalClassName, entryState, dndState } = props;\n\n    const fileClasses = useFileStyles(entryState);\n    const commonClasses = useCommonEntryStyles(entryState);\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    const className = c({\n        [fileClasses.previewFile]: true,\n        [externalClassName || '']: !!externalClassName,\n    });\n    return (\n        <div className={className}>\n            <GridEntryDndIndicator className={fileClasses.dndIndicator} dndState={dndState} />\n            <div className={fileClasses.fileIcon}>\n                <ChonkyIcon icon={entryState.icon} spin={entryState.iconSpin} />\n            </div>\n            <div className={commonClasses.selectionIndicator}></div>\n            <FileThumbnail className={fileClasses.thumbnail} thumbnailUrl={entryState.thumbnailUrl} />\n        </div>\n    );\n});\nGridEntryPreviewFile.displayName = 'GridEntryPreviewFile';\n\nconst useFileStyles = makeLocalChonkyStyles(theme => ({\n    previewFile: {\n        boxShadow: (state: FileEntryState) => {\n            const shadows: string[] = [];\n            if (state.selected) shadows.push('inset rgba(0,153,255, .65) 0 0 0 3px');\n            if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n            shadows.push(`inset ${theme.gridFileEntry.fileColorTint} 0 0 0 999px`);\n            return shadows.join(', ');\n        },\n        backgroundColor: (state: FileEntryState) => state.color,\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'relative',\n        overflow: 'hidden',\n    },\n    dndIndicator: {\n        zIndex: 14,\n    },\n    fileIcon: {\n        transform: 'translateX(-50%) translateY(-50%)',\n        fontSize: theme.gridFileEntry.iconSize,\n        opacity: (state: FileEntryState) => (state.thumbnailUrl && !state.focused ? 0 : 1),\n        color: (state: FileEntryState) =>\n            state.focused ? theme.gridFileEntry.iconColorFocused : theme.gridFileEntry.iconColor,\n        position: 'absolute',\n        left: '50%',\n        zIndex: 12,\n        top: '50%',\n    },\n    thumbnail: {\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        zIndex: 6,\n        bottom: 5,\n        right: 5,\n        left: 5,\n        top: 5,\n    },\n}));\n\nexport const useCommonEntryStyles = makeLocalChonkyStyles(() => ({\n    selectionIndicator: {\n        display: (state: FileEntryState) => (state.selected ? 'block' : 'none'),\n        background:\n            'repeating-linear-gradient(' +\n            '45deg,' +\n            'rgba(0,153,255,.14),' +\n            'rgba(0,153,255,.14) 10px,' +\n            'rgba(0,153,255,.25) 0,' +\n            'rgba(0,153,255,.25) 20px' +\n            ')',\n        backgroundColor: 'rgba(0, 153, 255, .14)',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 10,\n    },\n    focusIndicator: {\n        display: (state: FileEntryState) => (state.focused ? 'block' : 'none'),\n        boxShadow: 'inset rgba(0, 0, 0, 1) 0 0 0 2px',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 11,\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport c from 'classnames';\nimport React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface FileThumbnailProps {\n    className: string;\n    thumbnailUrl: Nullable<string>;\n}\n\nexport const FileThumbnail: React.FC<FileThumbnailProps> = React.memo(props => {\n    const { className, thumbnailUrl } = props;\n\n    const thumbnailStyle: React.CSSProperties = thumbnailUrl ? { backgroundImage: `url('${thumbnailUrl}')` } : {};\n\n    const classes = useStyles();\n    return <div className={c([className, classes.fileThumbnail])} style={thumbnailStyle} />;\n});\nFileThumbnail.displayName = 'FileThumbnail';\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    fileThumbnail: {\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'contain',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext } from 'react';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { useDndIcon } from './FileEntry-hooks';\n\nexport interface DnDIndicatorProps {\n    className: string;\n    dndState: DndEntryState;\n}\n\nexport const GridEntryDndIndicator: React.FC<DnDIndicatorProps> = React.memo(props => {\n    const { className: externalClassName, dndState } = props;\n    const dndIconName = useDndIcon(dndState);\n    const classes = useStyles(dndState);\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    if (!dndIconName) return null;\n    const className = c({\n        [classes.dndIndicator]: true,\n        [externalClassName]: true,\n    });\n    return (\n        <div className={className}>\n            <ChonkyIcon icon={dndIconName} />\n        </div>\n    );\n});\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    dndIndicator: {\n        color: (dndState: DndEntryState) =>\n            dndState.dndIsOver\n                ? dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor\n                : '#000',\n        boxSizing: 'border-box',\n        position: 'absolute',\n        fontSize: '1.2em',\n        opacity: 0.6,\n        padding: 6,\n        '&:before': {\n            borderBottom: '50px solid transparent',\n            borderLeft: '50px solid #fff',\n            position: 'absolute',\n            content: '\"\"',\n            zIndex: -1,\n            left: 0,\n            top: 0,\n        },\n    },\n}));\n","import React, { useContext, useMemo } from 'react';\n\nimport { DndEntryState, FileEntryProps } from '../../types/file-list.types';\nimport { useLocalizedFileEntryStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport {\n    useDndIcon,\n    useFileEntryHtmlProps,\n    useFileEntryState,\n} from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState, useCommonEntryStyles } from './GridEntryPreview';\nimport dotsInFiles from \"../../util/dotsInFiles\";\n\ninterface StyleState {\n    entryState: FileEntryState;\n    dndState: DndEntryState;\n}\n\nexport const ListEntry: React.FC<FileEntryProps> = React.memo(\n    ({ file, selected, focused, dndState,  activeStar, deactivateStar, tags }) => {\n        const entryState: FileEntryState = useFileEntryState(file, selected, focused);\n        const dndIconName = useDndIcon(dndState);\n\n        const { fileModDateString, fileSizeString } = useLocalizedFileEntryStrings(\n            file\n        );\n        const styleState = useMemo<StyleState>(\n            () => ({\n                entryState,\n                dndState,\n            }),\n            [dndState, entryState]\n        );\n        const classes = useStyles(styleState);\n        const commonClasses = useCommonEntryStyles(entryState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n        const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n        return (\n            <div className={`${classes.listFileEntry} ${file?.isChecked ? 'is-checked': ''}`} {...fileEntryHtmlProps}>\n                <div className={commonClasses.focusIndicator}></div>\n                <div\n                    className={c([\n                        commonClasses.selectionIndicator,\n                        classes.listFileEntrySelection,\n                    ])}\n                ></div>\n                \n                    <div className={classes.listFileEntryStar}>\n                    {!file?.isDir ? (\n                        <>\n                            {file?.isStarred ? activeStar : deactivateStar}\n                        </>\n                        ) : null\n                    }\n                    </div>\n                    \n                <div className={classes.listFileEntryIcon}>\n                    <ChonkyIcon\n                        icon={dndIconName ?? entryState.icon}\n                        spin={dndIconName ? false : entryState.iconSpin}\n                        fixedWidth={true}\n                        file={file}\n                    />\n                </div>\n                <div\n                    className={classes.listFileEntryName}\n                    title={file ? file.name : undefined}\n                >\n                    <FileEntryName file={file} tags={tags} />\n                </div>\n                {file?.isSearchResults && file?.folderPath ? (\n                    <div className={classes.listFileSearch}>\n                        {dotsInFiles(file?.folderPath)}\n                        <span className=\"list-file-search-tooltip\">{file?.folderPath}</span>\n                    </div>\n                ): null}\n                <div className={classes.listFileEntryProperty}>\n                    {file ? (\n                        fileModDateString ?? <span>—</span>\n                    ) : (\n                        <TextPlaceholder minLength={5} maxLength={15} />\n                    )}\n                </div>\n                <div className={classes.listFileSizeProperty}>\n                    {file ? (\n                        fileSizeString ?? <span>—</span>\n                    ) : (\n                        <TextPlaceholder minLength={10} maxLength={20} />\n                    )}\n                </div>\n                <div className={classes.listFileShared}>\n                    {file?.isShared ? 'Shared': 'Private'}\n                </div>\n            </div>\n        );\n    }\n);\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    listFileEntry: {\n        boxShadow: `inset ${theme.palette.divider} 0 -1px 0`,\n        fontSize: theme.listFileEntry.fontSize,\n        color: ({ dndState }: StyleState) =>\n            dndState.dndIsOver\n                ? dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor\n                : 'inherit',\n        alignItems: 'center',\n        position: 'relative',\n        display: 'flex',\n        height: '100%',\n    },\n    listFileEntrySelection: {\n        opacity: 0.6,\n    },\n    listFileEntryStar: {},\n    listFileShared: {},\n    listFileEntryIcon: {\n        color: ({ entryState, dndState }: StyleState) =>\n            dndState.dndIsOver\n                ? dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor\n                : entryState.color,\n        fontSize: theme.listFileEntry.iconFontSize,\n        boxSizing: 'border-box',\n        padding: [2, 4],\n        zIndex: 20,\n    },\n    listFileSearch: {},\n    listFileEntryName: {\n        textOverflow: 'ellipsis',\n        boxSizing: 'border-box',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        flex: '1 1 300px',\n        paddingLeft: 8,\n        zIndex: 20,\n    },\n    listFileEntryProperty: {\n        fontSize: theme.listFileEntry.propertyFontSize,\n        boxSizing: 'border-box',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        flex: '0 1 150px',\n        padding: [2, 8],\n        zIndex: 20,\n    },\n    listFileSizeProperty: {\n        fontSize: theme.listFileEntry.propertyFontSize,\n        boxSizing: 'border-box',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        flex: '0 1 150px',\n        padding: [2, 8],\n        zIndex: 20,\n    },\n}));\n","const dotsInFiles = (name: string) => {\n    let limit = 30;\n    if (!!name) {\n        if (name.length < limit) {\n            return name;\n        }\n        const [folderLocation] = name.split(/\\.(?=[^\\.]+$)/);\n        return folderLocation.slice(0, limit) + '...';\n    } else {\n        return '';\n    }\n};\n\nexport default dotsInFiles;\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useCallback, useMemo, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FixedSizeList } from 'react-window';\n\nimport { selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { SmartFileEntry } from './FileEntry';\n\nexport interface FileListListProps {\n    width: number;\n    height: number;\n    fileListStyle?: CSSProperties & { gridHeight: any };\n    activeStar: React.ReactElement<any, any>;\n    deactivateStar: React.ReactElement<any, any>;\n    tags: React.ReactElement<any, any>;\n}\n\nexport const ListContainer: React.FC<FileListListProps> = React.memo(props => {\n    const { width, height, fileListStyle = { height: 0 }, activeStar, deactivateStar, tags } = props;\n\n    const viewConfig = useSelector(selectFileViewConfig);\n\n    const listRef = useRef<FixedSizeList>();\n\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const displayFileIdsRef = useInstanceVariable(displayFileIds);\n    const getItemKey = useCallback(\n        (index: number) => displayFileIdsRef.current[index] ?? `loading-file-${index}`,\n        [displayFileIdsRef]\n    );\n\n    const classes = useStyles();\n    const listComponent = useMemo(() => {\n        // When entry size is null, we use List view\n        const rowRenderer = (data: { index: number; style: CSSProperties }) => {\n            return (\n                <div style={{ ...data.style  }}>\n                    <SmartFileEntry\n                        fileId={displayFileIds[data.index] ?? null}\n                        displayIndex={data.index}\n                        fileViewMode={FileViewMode.List}\n                        activeStar={activeStar}\n                        deactivateStar={deactivateStar}\n                        tags={tags}\n                    />\n                </div>\n            );\n        };\n\n        return (\n            <FixedSizeList\n                ref={listRef as any}\n                className={classes.listContainer}\n                itemSize={(fileListStyle.height as any) || viewConfig.entryHeight}\n                height={height}\n                itemCount={displayFileIds.length}\n                width={width}\n                itemKey={getItemKey}\n            >\n                {rowRenderer}\n            </FixedSizeList>\n        );\n    }, [\n        classes.listContainer,\n        viewConfig.entryHeight,\n        height,\n        displayFileIds,\n        width,\n        getItemKey,\n    ]);\n\n    return listComponent;\n});\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    listContainer: {\n        borderTop: `solid 1px ${theme.palette.divider}`,\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { ReactElement, useEffect, useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Menu from '@material-ui/core/Menu';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { selectContextMenuConfig, selectContextMenuItems } from '../../redux/selectors';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { useContextMenuDismisser } from './FileContextMenu-hooks';\nimport { SmartToolbarDropdownButton } from './ToolbarDropdownButton';\n\nexport interface FileContextMenuProps {}\n\nexport const FileContextMenu: React.FC<FileContextMenuProps> = React.memo(() => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(reduxActions.setContextMenuMounted(true));\n        return () => {\n            dispatch(reduxActions.setContextMenuMounted(false));\n        };\n    }, [dispatch]);\n\n    const intl = useIntl();\n    const browserMenuShortcutString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.FileContextMenu, 'browserMenuShortcut'),\n            defaultMessage: 'Browser menu: {shortcut}',\n        },\n        { shortcut: <strong>Alt + Right Click</strong> }\n    );\n\n    const contextMenuConfig = useSelector(selectContextMenuConfig);\n    const contextMenuItems = useSelector(selectContextMenuItems);\n\n    const hideContextMenu = useContextMenuDismisser();\n    const contextMenuItemComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < contextMenuItems.length; ++i) {\n            const item = contextMenuItems[i];\n\n            if (typeof item === 'string') {\n                components.push(\n                    <SmartToolbarDropdownButton\n                        key={`context-menu-item-${item}`}\n                        fileActionId={item}\n                        onClickFollowUp={hideContextMenu}\n                    />\n                );\n            } else {\n                item.fileActionIds.map(id =>\n                    components.push(\n                        <SmartToolbarDropdownButton\n                            key={`context-menu-item-${item.name}-${id}`}\n                            fileActionId={id}\n                            onClickFollowUp={hideContextMenu}\n                        />\n                    )\n                );\n            }\n        }\n        return components;\n    }, [contextMenuItems, hideContextMenu]);\n\n    const anchorPosition = useMemo(\n        () => (contextMenuConfig ? { top: contextMenuConfig.mouseY, left: contextMenuConfig.mouseX } : undefined),\n        [contextMenuConfig]\n    );\n\n    const classes = useStyles();\n    return (\n        <Menu\n            elevation={2}\n            disablePortal\n            onClose={hideContextMenu}\n            transitionDuration={150}\n            open={!!contextMenuConfig}\n            anchorPosition={anchorPosition}\n            anchorReference=\"anchorPosition\"\n            classes={{ list: classes.contextMenuList }}\n        >\n            {contextMenuItemComponents}\n            <ListSubheader component=\"div\" className={classes.browserMenuTooltip}>\n                {browserMenuShortcutString}\n            </ListSubheader>\n        </Menu>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    contextMenuList: {\n        paddingBottom: important(0),\n        paddingTop: important(0),\n    },\n    browserMenuTooltip: {\n        lineHeight: important('30px'),\n        fontSize: important('0.7em'),\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { FileList } from '../file-list/FileList';\nimport { FileBrowser } from './FileBrowser';\nimport { FileContextMenu } from './FileContextMenu';\nimport { FileNavbar } from './FileNavbar';\nimport { FileToolbar } from './FileToolbar';\n\nexport const FullFileBrowser = React.memo(\n    React.forwardRef<FileBrowserHandle, FileBrowserProps>((props, ref) => {\n        const { onScroll, fileListStyle, activeStar = <></>, deactivateStar = <></>, tags = <></> } = props;\n        return (\n            <FileBrowser ref={ref} {...props}>\n                <FileNavbar />\n                <FileToolbar />\n                <FileList\n                    onScroll={onScroll}\n                    fileListStyle={fileListStyle}\n                    activeStar={activeStar}\n                    deactivateStar={deactivateStar}\n                    tags={tags}\n                />\n                <FileContextMenu />\n            </FileBrowser>\n        );\n    })\n);\nFullFileBrowser.displayName = 'FullFileBrowser';\n","/**\n *\n */\n\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { ChonkyActions } from '../action-definitions';\nimport { FileActionData } from '../types/action-handler.types';\nimport { FileAction } from '../types/action.types';\nimport { FileArray, FileData } from '../types/file.types';\nimport { FileHelper } from '../util/file-helper';\n\nexport interface CustomFileData extends FileData {\n    parentId?: string;\n    childrenIds?: string[];\n}\nexport interface CustomFileMap<FT extends CustomFileData> {\n    [fileId: string]: FT;\n}\nexport interface FileMapParams<FT extends CustomFileData> {\n    baseFileMap: CustomFileMap<FT>;\n    initialFolderId: string;\n}\n\nexport const useFolderChain = <FT extends CustomFileData>(\n    fileMap: CustomFileMap<FT>,\n    currentFolderId: string\n): FileArray<FT> => {\n    return useMemo(() => {\n        const currentFolder = fileMap[currentFolderId];\n\n        const folderChain = [currentFolder];\n\n        let parentId = currentFolder.parentId;\n        while (parentId) {\n            const parentFile = fileMap[parentId];\n            if (parentFile) {\n                folderChain.unshift(parentFile);\n                parentId = parentFile.parentId;\n            } else {\n                break;\n            }\n        }\n\n        return folderChain;\n    }, [currentFolderId, fileMap]);\n};\n\nexport const useFiles = <FT extends CustomFileData>(\n    fileMap: CustomFileMap<FT>,\n    currentFolderId: string\n): FileArray<FT> => {\n    return useMemo(() => {\n        const currentFolder = fileMap[currentFolderId];\n        const childrenIds = currentFolder.childrenIds!;\n        const files = childrenIds.map((fileId: string) => fileMap[fileId]);\n        return files;\n    }, [currentFolderId, fileMap]);\n};\n\nexport const useFileMapMethods = <FT extends CustomFileData>(\n    baseFileMap: CustomFileMap<FT>,\n    initialFolderId: string\n) => {\n    const [fileMap, setFileMap] = useState(baseFileMap);\n    const [currentFolderId, setCurrentFolderId] = useState(initialFolderId);\n    const resetFileMap = useCallback(() => {\n        setFileMap(baseFileMap);\n        setCurrentFolderId(initialFolderId);\n    }, [baseFileMap, initialFolderId]);\n    const moveFiles = useCallback(\n        (files: FT[], source: FT, destination: FT) =>\n            setFileMap(currentFileMap => {\n                const newFileMap = { ...currentFileMap };\n                const moveFileIds = new Set(files.map(f => f.id));\n\n                // Delete files from their source folder.\n                const newSourceChildrenIds = source.childrenIds!.filter(id => !moveFileIds.has(id));\n                newFileMap[source.id] = {\n                    ...source,\n                    childrenIds: newSourceChildrenIds,\n                    childrenCount: newSourceChildrenIds.length,\n                };\n\n                // Add the files to their destination folder.\n                const newDestinationChildrenIds = [...destination.childrenIds!, ...files.map(f => f.id)];\n                newFileMap[destination.id] = {\n                    ...destination,\n                    childrenIds: newDestinationChildrenIds,\n                    childrenCount: newDestinationChildrenIds.length,\n                };\n\n                // Finally, update the parent folder ID on the files from source folder\n                // ID to the destination folder ID.\n                files.forEach(file => {\n                    newFileMap[file.id] = {\n                        ...file,\n                        parentId: destination.id,\n                    };\n                });\n\n                return newFileMap;\n            }),\n        []\n    );\n\n    const methods = useMemo(\n        () => ({\n            setFileMap,\n            setCurrentFolderId,\n            resetFileMap,\n            moveFiles,\n        }),\n        [setFileMap, setCurrentFolderId, resetFileMap, moveFiles]\n    );\n    return {\n        fileMap,\n        currentFolderId,\n        methods,\n    };\n};\nexport type FileMethods = ReturnType<typeof useFileMapMethods>['methods'];\n\nexport const useFileActionHandler = (methods: FileMethods) => {\n    return useCallback(\n        (data: FileActionData<FileAction>) => {\n            if (data.id === ChonkyActions.OpenFiles.id) {\n                const { targetFile, files } = data.payload;\n                const fileToOpen = targetFile ?? files[0];\n                if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\n                    methods.setCurrentFolderId(fileToOpen.id);\n                }\n            } else if (data.id === ChonkyActions.MoveFiles.id) {\n                methods.moveFiles(data.payload.files, data.payload.source!, data.payload.destination);\n            }\n        },\n        [methods]\n    );\n};\n\nexport const useFileMap = <FT extends CustomFileData = CustomFileData>({\n    baseFileMap,\n    initialFolderId,\n}: FileMapParams<FT>) => {\n    const { fileMap, currentFolderId, methods } = useFileMapMethods(baseFileMap, initialFolderId);\n    const folderChain = useFolderChain(fileMap, currentFolderId);\n    const files = useFiles(fileMap, currentFolderId);\n    const fileActionHandler = useFileActionHandler(methods as FileMethods);\n\n    const data = {\n        fileMap,\n        currentFolderId,\n        folderChain,\n        files,\n    };\n    return { data, methods, fileActionHandler };\n};\n"],"mappings":"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A,MACA,KACJ,EACaC,GAA4B,CACrC,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,KACA,MACA,OACA,QACA,OACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,KACJ,EACaC,GAA4B,CACrC,OACA,MACA,MACA,MACA,OACA,OACA,KACA,MACA,MACA,MACA,QACA,YACA,YACA,YACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,IACJ,EACaC,GAAwB,CACjC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACJ,EACaC,GAAuB,CAChC,OACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,U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","names":["createMuiTheme","MuiThemeProvider","merge","React","useMemo","DndProvider","HTML5Backend","IntlProvider","ThemeProvider","ReduxProvider","shortid","useCallback","useEffect","useDispatch","useSelector","configureStore","useEffect","useRef","useState","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","UNINITIALIZED_SENTINEL","useStaticValue","factory","valueRef","useInstanceVariable","ref","createSlice","Logger","args","bullets","FileHelper","file","maybeDate","error","Logger","sanitizeInputArray","mode","rawArray","sanitizedFiles","errorMessages","nonObjectFileCount","missingFieldFileCount","seenIds","duplicateIds","i","item","repeatedIdsString","errorMessageString","arrayString","itemString","Logger","sort","FuzzySearch","createSelector","OptionIds","selectInstanceId","state","selectExternalFileActionHandler","selectFileActionMap","selectFileActionIds","selectFileActionData","fileActionId","selectToolbarItems","selectContextMenuItems","selectFolderChain","selectCurrentFolder","folderChain","selectParentFolder","selectRawFiles","selectFileMap","selectCleanFileIds","selectFileData","fileId","selectHiddenFileIdMap","selectHiddenFileCount","selectFocusSearchInput","selectSearchString","selectSelectionMap","selectSelectedFileIds","selectSelectionSize","selectIsFileSelected","selectSelectedFiles","fileMap","id","selectSelectedFilesForAction","fileActionMap","action","getSelectedFiles","selectSelectedFilesForActionCount","_a","getSelectedFilesForAction","selectDisableSelection","selectFileViewConfig","selectSortActionId","selectSortOrder","selectOptionMap","selectOptionValue","optionId","selectThumbnailGenerator","selectDoubleClickDelay","selectIsDnDDisabled","selectClearSelectionOnOutsideClick","selectContextMenuMounted","selectContextMenuConfig","selectContextMenuTriggerFile","config","getFileActionMap","getOptionMap","getFileMap","getFileIds","getCleanFileIds","getSortActionId","getSortOrder","getSearchString","_getLastClick","makeGetAction","fileActionSelector","createSelector","makeGetOptionValue","defaultValue","optionMap","value","makeGetFiles","fileIdsSelector","fileIds","getSortedFileIds","OptionIds","sortOrder","files","sortAction","showFolderFirst","prepareSortKeySelector","selector","file","sortFunctions","FileHelper","configKeyName","sort","getSearcher","cleanFiles","FuzzySearch","getSearchFilteredFileIds","cleanFileIds","searchString","searcher","f","getHiddenFileIdMap","searchFilteredFileIds","showHiddenFiles","searchFilteredFileIdsSet","hiddenFileIdMap","getDisplayFileIds","sortedFileIds","getLastClickIndex","lastClick","displayFileIds","selectors","getFileData","getIsFileSelected","filters","selectionMap","selectedFiles","prevFiles","filter","mergeFileActionsArrays","fileActionArrays","seenActionIds","addToSeen","a","wasNotSeen","duplicateFreeArrays","arr","duplicateFreeArray","thunkUpdateRawFileActions","rawFileActions","disableDefaultFileActions","dispatch","sanitizedArray","errorMessages","sanitizeInputArray","defaultActionsToAdd","disabledActionIds","DefaultFileActions","action","fileActions","EssentialFileActions","optionDefaults","reduxActions","thunkUpdateToolbarNContextMenuItems","excludedToolbarFileActionIds","ChonkyActions","toolbarItems","seenToolbarGroups","contextMenuItems","seenContextMenuGroups","getGroup","itemArray","seenMap","groupName","group","button","thunkUpdateDefaultFileViewActionId","fileActionId","getState","fileActionMap","thunkActivateSortAction","oldActionId","oldOrder","order","thunkApplySelectionTransform","selectionTransform","state","prevSelection","selectSelectionMap","hiddenFileIds","selectHiddenFileIdMap","newSelection","selectCleanFileIds","selectFileMap","thunkDispatchFileAction","data","_dispatch","getState","Logger","state","action","selectFileActionMap","externalFileActionHandler","selectExternalFileActionHandler","error","thunkRequestFileAction","payload","dispatch","instanceId","selectInstanceId","selectedFiles","selectSelectedFiles","selectedFilesForAction","contextMenuTriggerFile","selectContextMenuTriggerFile","actionState","thunkActivateSortAction","fileViewConfig","reduxActions","option","thunkApplySelectionTransform","effect","maybeEffectPromise","effectResult","triggerDispatchAfterEffect","FileViewMode","ChonkyIconName","defineFileAction","action","effect","errorMessage","Logger","findElementAmongAncestors","maybeElement","predicate","elementIsInsideButton","buttonCandidate","element","getValueOrFallback","value","fallback","desiredType","reduxThunks","params","dispatch","getState","state","fileIdsToSelect","selectors","id","FileHelper","reduxActions","EssentialActions","defineFileAction","payload","reduxDispatch","getReduxState","FileHelper","thunkRequestFileAction","ChonkyActions","disableSelection","selectDisableSelection","reduxActions","lastClickIndex","selectors","rangeStart","rangeEnd","reduxThunks","selectSelectionSize","file","getIsFileSelected","draggedFile","selectedFiles","droppedFiles","parentFolder","selectParentFolder","Logger","triggerFile","getFileData","DefaultActions","defineFileAction","FileHelper","state","reduxDispatch","thunkRequestFileAction","EssentialActions","fileIds","hiddenFileIds","newSelection","fileId","prevSelection","file","OptionIds","getReduxState","focusSearchInput","selectFocusSearchInput","ExtraActions","defineFileAction","ChonkyActions","EssentialActions","DefaultActions","ExtraActions","EssentialFileActions","DefaultFileActions","initialRootState","ChonkyActions","reducers","state","action","fileActionMap","a","fileIds","rawFolderChain","folderChain","errorMessages","sanitizeInputArray","rawFiles","files","fileMap","f","cleanFileIds","selectedFileId","id","FileHelper","oldValue","optionId","reduxActions","rootReducer","createSlice","initialRootState","useEffect","watch","useStoreWatchers","store","useEffect","selectionWatcher","watch","selectSelectionMap","onSelectionChange","newSelection","oldSelection","selectedFilesIds","selectSelectedFileIds","selection","thunkRequestFileAction","ChonkyActions","unsubscribeCallbacks","unsubscribe","useChonkyStore","chonkyInstanceId","store","useStaticValue","preloadedState","initialRootState","configureStore","rootReducer","getDefaultMiddleware","useStoreWatchers","useParamSelector","parametrizedSelector","selectorParams","selector","useCallback","state","useSelector","useDTE","actionCreator","dispatch","useDispatch","useEffect","usePropReduxUpdate","payload","React","ChonkyIconPlaceholder","defaultConfig","ChonkyActions","ChonkyIconPlaceholder","setChonkyDefaults","config","key","filesize","createContext","useContext","useMemo","useIntl","I18nNamespace","getI18nId","namespace","stringId","getActionI18nId","actionId","useLocalizedFileActionGroup","groupName","intl","useIntl","useMemo","useLocalizedFileActionStrings","action","_a","_b","_c","buttonName","buttonTooltip","useLocalizedFileEntryStrings","file","formatters","useContext","ChonkyFormattersContext","defaultFormatters","safeModDate","FileHelper","_intl","size","sizeData","filesize","createContext","createContext","useMemo","ExactTrie","ChonkyIconContext","createContext","ChonkyIconPlaceholder","VideoExtensions","ImageExtensions","AudioExtensions","ColorsLight","ColorsDark","getIconTrie","colourIndex","step","IconsToExtensions","exactTrie","ExactTrie","pair","icon","extensions","i","colorCode","iconData","iconTrie","useIconData","file","useMemo","match","useMediaQuery","classnames","createUseStyles","lightTheme","darkThemeOverride","mobileThemeOverride","useIsMobileBreakpoint","getStripeGradient","colorOne","colorTwo","makeLocalChonkyStyles","styles","makeGlobalChonkyStyles","makeStyles","selectorMapping","useStyles","theme","localStyles","globalStyles","localSelector","globalSelector","jssSelector","args","classes","important","value","c","React","useImperativeHandle","useDispatch","useStore","useFileBrowserHandle","ref","store","useStore","dispatch","useDispatch","useImperativeHandle","selectionMap","selectSelectionMap","selection","reset","fileIds","reduxActions","action","payload","thunkRequestFileAction","ChonkyBusinessLogicInner","React","props","ref","usePropReduxUpdate","reduxActions","initialRootState","useDTE","thunkUpdateRawFileActions","getValueOrFallback","defaultConfig","thunkActivateSortAction","thunkUpdateDefaultFileViewActionId","useFileBrowserHandle","ChonkyBusinessLogic","Box","ClickAwayListener","React","useCallback","useMemo","useDispatch","useSelector","useCallback","useContext","DndContext","useDrag","useDrop","useDndContextAvailable","dndContext","dragDropManager","useDragIfAvailable","args","dndContextAvailable","mockHook","useDropIfAvailable","useCallback","useDispatch","useSelector","findClosestChonkyFileId","element","fileEntryWrapperDiv","findElementAmongAncestors","useContextMenuTrigger","dispatch","useDispatch","contextMenuMountedRef","useInstanceVariable","useSelector","selectContextMenuMounted","useCallback","event","triggerFileId","thunkRequestFileAction","ChonkyActions","useContextMenuDismisser","reduxActions","React","useDragLayer","ChonkyDndFileEntryType","layerStyles","getItemStyles","initialCursorOffset","initialFileOffset","currentFileOffset","x","y","transform","DnDFileListDragLayer","classes","useStyles","itemType","item","isDragging","useDragLayer","monitor","ChonkyDndFileEntryType","selectionSize","React","makeGlobalChonkyStyles","theme","hotkeys","React","useEffect","useDispatch","HotkeyListener","React","props","fileActionId","dispatch","useDispatch","fileAction","useParamSelector","selectFileActionData","useEffect","hotkeysStr","hotkeyCallback","event","thunkRequestFileAction","hotkeys","ChonkyPresentationLayer","children","dispatch","useDispatch","fileActionIds","useSelector","selectFileActionIds","dndDisabled","selectIsDnDDisabled","clearSelectionOnOutsideClick","selectClearSelectionOnOutsideClick","handleClickAway","useCallback","event","elementIsInsideButton","reduxActions","hotkeyListenerComponents","useMemo","actionId","React","HotkeyListener","dndContextAvailable","useDndContextAvailable","showContextMenu","useContextMenuTrigger","classes","useStyles","ClickAwayListener","Box","DnDFileListDragLayer","makeGlobalChonkyStyles","theme","FileBrowser","React","props","ref","instanceId","iconComponent","children","disableDragAndDrop","getValueOrFallback","defaultConfig","disableDragAndDropProvider","darkMode","i18n","formatters","useMemo","defaultFormatters","chonkyInstanceId","useStaticValue","shortid","store","useChonkyStore","isMobileBreakpoint","useIsMobileBreakpoint","theme","muiTheme","createMuiTheme","combinedTheme","merge","lightTheme","darkThemeOverride","mobileThemeOverride","chonkyComps","ChonkyBusinessLogic","ChonkyPresentationLayer","IntlProvider","ChonkyFormattersContext","ReduxProvider","ThemeProvider","MuiThemeProvider","ChonkyIconContext","ChonkyIconPlaceholder","DndProvider","HTML5Backend","Box","Breadcrumbs","React","useMemo","useMemo","useDispatch","useSelector","useFolderChainItems","folderChain","useSelector","selectFolderChain","dispatch","useDispatch","useMemo","items","i","file","FileHelper","thunkRequestFileAction","ChonkyActions","React","useContext","useMemo","useCallback","useEffect","useMemo","getEmptyImage","useDispatch","useSelector","useStore","useFileDrag","file","store","useStore","fileRef","useInstanceVariable","getDndStartPayload","useCallback","reduxState","selectInstanceId","selectCurrentFolder","selectSelectedFiles","dispatch","useDispatch","canDrag","FileHelper","onDragStart","item","ChonkyDndFileEntryType","thunkRequestFileAction","ChonkyActions","onDragEnd","monitor","dropResult","useMemo","collect","dndIsDragging","drag","preview","useDragIfAvailable","useEffect","getEmptyImage","useFileDrop","forceDisableDrop","includeChildrenDrops","folderChainRef","useSelector","selectFolderChain","onDrop","_item","canDrop","source","draggedFile","selectedFiles","prohibitedFileIds","folder","movedFiles","currFile","dndIsOver","dndIsOverCurrent","dndCanDrop","drop","useDropIfAvailable","useFileEntryDnD","dndState","useDndHoverOpen","currentFolderRef","_a","timeout","EssentialActions","React","useCallback","useContext","useEffect","useMemo","useRef","useState","useDispatch","useSelector","React","getRandomInt","min","max","TextPlaceholder","React","props","minLength","maxLength","placeholderLength","whitespace","classes","useStyles","makeLocalChonkyStyles","useFileEntryHtmlProps","file","useMemo","useFileEntryState","selected","focused","iconData","useIconData","thumbnailUrl","thumbnailLoading","useThumbnailUrl","fileColor","ColorsDark","ColorsLight","iconSpin","icon","FileHelper","useDndIcon","dndState","dndIconName","useModifierIconComponents","modifierIcons","ChonkyIcon","useContext","ChonkyIconContext","index","React","_extname","fileName","parts","useFileNameComponent","TextPlaceholder","name","extension","thumbnailGenerator","useSelector","selectThumbnailGenerator","setThumbnailUrl","useState","setThumbnailLoading","loadingAttempts","useRef","useEffect","loadingCancelled","error","Logger","useFileClickHandlers","displayIndex","dispatch","useDispatch","onMouseClick","useCallback","event","clickType","thunkRequestFileAction","ChonkyActions","onKeyboardClick","onSingleClick","onDoubleClick","Button","React","useContext","CustomVisibilityState","useCallback","useMemo","useDispatch","useSelector","useFileActionTrigger","fileActionId","dispatch","useDispatch","fileAction","useParamSelector","selectFileActionData","useCallback","thunkRequestFileAction","useFileActionProps","_a","parentFolder","useSelector","selectParentFolder","fileViewConfig","selectFileViewConfig","sortActionId","selectSortActionId","sortOrder","selectSortOrder","action","optionValue","selectOptionValue","actionSelectionEmpty","selectSelectedFilesForActionCount","useMemo","icon","isSortButtonAndCurrentSort","isFileViewButtonAndCurrentView","isOptionAndEnabled","customDisabled","customActive","active","disabled","ChonkyActions","FileHelper","ToolbarButton","React","props","externalClassName","text","tooltip","active","icon","iconOnly","onClick","disabled","dropdown","classes","useStyles","ChonkyIcon","useContext","ChonkyIconContext","iconComponent","className","c","Button","makeGlobalChonkyStyles","theme","important","SmartToolbarButton","fileActionId","action","useParamSelector","selectFileActionData","triggerAction","useFileActionTrigger","useFileActionProps","buttonName","buttonTooltip","useLocalizedFileActionStrings","button","FolderChainButton","React","first","current","item","file","disabled","onClick","dndIsOver","dndCanDrop","drop","useFileDrop","dndState","useMemo","useDndHoverOpen","dndIconName","useDndIcon","ChonkyIcon","useContext","ChonkyIconContext","classes","useStyles","className","c","text","icon","ToolbarButton","makeLocalChonkyStyles","theme","color","important","FileNavbar","React","classes","useStyles","folderChainItems","useFolderChainItems","folderChainComponents","useMemo","components","i","key","component","FolderChainButton","Box","SmartToolbarButton","ChonkyActions","Breadcrumbs","makeGlobalChonkyStyles","theme","important","React","useMemo","useSelector","Menu","React","useCallback","useMemo","ListItemIcon","ListItemText","MenuItem","React","useCallback","useContext","ToolbarDropdownButton","React","props","ref","text","active","icon","onClick","disabled","classes","useStyles","ChonkyIcon","useContext","ChonkyIconContext","className","c","MenuItem","ListItemIcon","ListItemText","makeGlobalChonkyStyles","theme","important","SmartToolbarDropdownButton","fileActionId","onClickFollowUp","action","useParamSelector","selectFileActionData","triggerAction","useFileActionTrigger","useFileActionProps","buttonName","useLocalizedFileActionStrings","handleClick","useCallback","button","ToolbarDropdown","React","props","name","fileActionIds","anchor","setAnchor","handleClick","useCallback","event","handleClose","menuItemComponents","useMemo","id","SmartToolbarDropdownButton","localizedName","useLocalizedFileActionGroup","classes","useStyles","ToolbarButton","Menu","makeGlobalChonkyStyles","important","React","useIntl","useSelector","Typography","ToolbarInfo","React","classes","useStyles","displayFileIds","useSelector","selectors","selectionSize","selectSelectionSize","hiddenCount","selectHiddenFileCount","intl","useIntl","fileCountString","getI18nId","selectedString","hiddenString","Typography","makeGlobalChonkyStyles","theme","important","React","useCallback","useContext","useEffect","useRef","useState","useIntl","useDispatch","useSelector","InputAdornment","TextField","ToolbarSearch","React","searchPlaceholderString","useIntl","getI18nId","classes","useStyles","ChonkyIcon","useContext","ChonkyIconContext","searchInputRef","useRef","dispatch","useDispatch","reduxSearchString","useSelector","selectSearchString","localSearchString","setLocalSearchString","useState","debouncedLocalSearchString","useDebounce","showLoadingIndicator","setShowLoadingIndicator","useEffect","reduxActions","handleChange","useCallback","event","handleKeyUp","TextField","InputAdornment","makeGlobalChonkyStyles","theme","important","FileToolbar","React","classes","useStyles","toolbarItems","useSelector","selectToolbarItems","toolbarItemComponents","useMemo","components","i","item","key","component","SmartToolbarButton","ToolbarDropdown","ToolbarSearch","ToolbarInfo","makeGlobalChonkyStyles","theme","React","useCallback","useContext","useMemo","useSelector","AutoSizer","React","useContext","useIntl","FileListEmpty","props","width","height","classes","useStyles","ChonkyIcon","useContext","ChonkyIconContext","style","emptyString","useIntl","getI18nId","React","makeGlobalChonkyStyles","theme","React","useCallback","useEffect","useMemo","useRef","useState","useSelector","VariableSizeGrid","React","useState","useSelector","React","useCallback","useCallback","useRef","useSelector","useClickHandler","onSingleClick","onDoubleClick","doubleClickDelay","useSelector","selectDoubleClickDelay","counter","useRef","useCallback","event","mouseClickEvent","useKeyDownHandler","onKeyboardClick","keyboardClickEvent","ClickableWrapper","props","children","WrapperTag","passthroughProps","onSingleClick","onDoubleClick","onKeyboardClick","setFocused","handleClick","useClickHandler","handleKeyDown","useKeyDownHandler","compProps","useCallback","mergedProps","React","React","useContext","React","FileEntryName","React","file","className","_a","modifierIconComponents","useModifierIconComponents","fileNameComponent","useFileNameComponent","fileTags","d","classes","useStyles","tag","index","makeLocalChonkyStyles","theme","CompactEntry","React","file","selected","focused","dndState","entryState","useFileEntryState","fileModDateString","fileSizeString","useLocalizedFileEntryStrings","classes","useStyles","ChonkyIcon","useContext","ChonkyIconContext","fileEntryHtmlProps","useFileEntryHtmlProps","FileEntryName","TextPlaceholder","makeLocalChonkyStyles","theme","state","React","DnDFileEntry","React","file","children","drop","drag","dndState","useFileEntryDnD","useDndHoverOpen","classes","useStyles","FileHelper","makeLocalChonkyStyles","React","React","useContext","c","React","FileThumbnail","React","props","className","thumbnailUrl","thumbnailStyle","classes","useStyles","c","makeGlobalChonkyStyles","React","useContext","GridEntryDndIndicator","React","props","externalClassName","dndState","dndIconName","useDndIcon","classes","useStyles","ChonkyIcon","useContext","ChonkyIconContext","className","c","makeLocalChonkyStyles","theme","GridEntryPreviewFolder","React","props","externalClassName","entryState","dndState","folderClasses","useFolderStyles","fileClasses","useFileStyles","commonClasses","useCommonEntryStyles","className","c","GridEntryDndIndicator","FileThumbnail","makeLocalChonkyStyles","theme","state","color","shadows","important","GridEntryPreviewFile","ChonkyIcon","useContext","ChonkyIconContext","GridEntry","React","file","selected","focused","dndState","isDirectory","FileHelper","entryState","useFileEntryState","classes","useFileEntryStyles","fileEntryHtmlProps","useFileEntryHtmlProps","entryClassName","c","GridEntryPreviewFolder","GridEntryPreviewFile","FileEntryName","makeLocalChonkyStyles","theme","state","React","useContext","useMemo","dotsInFiles","name","limit","folderLocation","dotsInFiles_default","ListEntry","React","file","selected","focused","dndState","activeStar","deactivateStar","tags","entryState","useFileEntryState","dndIconName","useDndIcon","fileModDateString","fileSizeString","useLocalizedFileEntryStrings","styleState","useMemo","classes","useStyles","commonClasses","useCommonEntryStyles","ChonkyIcon","useContext","ChonkyIconContext","fileEntryHtmlProps","useFileEntryHtmlProps","c","FileEntryName","dotsInFiles_default","TextPlaceholder","makeLocalChonkyStyles","theme","disabledDndState","SmartFileEntry","React","fileId","displayIndex","fileViewMode","activeStar","deactivateStar","tags","classes","useStyles","file","useParamSelector","selectFileData","selected","selectIsFileSelected","dndDisabled","useSelector","selectIsDnDDisabled","fileClickHandlers","useFileClickHandlers","focused","setFocused","useState","clickableWrapperProps","FileHelper","fileEntryProps","EntryComponent","ListEntry","CompactEntry","GridEntry","ClickableWrapper","DnDFileEntry","dndState","makeGlobalChonkyStyles","isMobileDevice","getGridConfig","width","fileCount","viewConfig","isMobileBreakpoint","gutter","scrollbar","columnCount","columnWidth","GridContainer","React","props","height","fileListStyle","useSelector","selectFileViewConfig","displayFileIds","selectors","useMemo","gridRef","useRef","useIsMobileBreakpoint","gridConfig","setGridConfig","useState","gridConfigRef","useEffect","oldConf","newConf","sizers","gc","index","displayFileIdsRef","useInstanceVariable","getItemKey","useCallback","data","cellRenderer","fileId","styleWithGutter","SmartFileEntry","classes","useStyles","VariableSizeGrid","makeGlobalChonkyStyles","React","useCallback","useMemo","useRef","useSelector","FixedSizeList","ListContainer","React","props","width","height","fileListStyle","activeStar","deactivateStar","tags","viewConfig","useSelector","selectFileViewConfig","listRef","useRef","displayFileIds","selectors","displayFileIdsRef","useInstanceVariable","getItemKey","useCallback","index","classes","useStyles","useMemo","rowRenderer","data","SmartFileEntry","FixedSizeList","makeLocalChonkyStyles","theme","FileList","React","props","displayFileIds","useSelector","selectors","viewConfig","selectFileViewConfig","currentFolder","selectCurrentFolder","drop","dndCanDrop","dndIsOverCurrent","useFileDrop","styleState","useMemo","localClasses","useLocalStyles","classes","useStyles","onScroll","fileListStyle","activeStar","deactivateStar","tags","fillParentContainer","listRenderer","useCallback","width","height","FileListEmpty","ListContainer","GridContainer","ChonkyIcon","useContext","ChonkyIconContext","c","AutoSizer","makeLocalChonkyStyles","theme","ChonkyActions","state","getStripeGradient","makeGlobalChonkyStyles","React","useEffect","useMemo","useIntl","useDispatch","useSelector","ListSubheader","Menu","FileContextMenu","React","dispatch","useDispatch","useEffect","reduxActions","browserMenuShortcutString","useIntl","getI18nId","contextMenuConfig","useSelector","selectContextMenuConfig","contextMenuItems","selectContextMenuItems","hideContextMenu","useContextMenuDismisser","contextMenuItemComponents","useMemo","components","i","item","SmartToolbarDropdownButton","id","anchorPosition","classes","useStyles","Menu","ListSubheader","makeGlobalChonkyStyles","important","React","FullFileBrowser","React","props","ref","onScroll","fileListStyle","activeStar","deactivateStar","tags","FileBrowser","FileNavbar","FileToolbar","FileList","FileContextMenu","file_map_exports","__export","useFileActionHandler","useFileMap","useFileMapMethods","useFiles","useFolderChain","useCallback","useMemo","useState","useFolderChain","fileMap","currentFolderId","useMemo","currentFolder","folderChain","parentId","parentFile","useFiles","fileId","useFileMapMethods","baseFileMap","initialFolderId","setFileMap","useState","setCurrentFolderId","resetFileMap","useCallback","moveFiles","files","source","destination","currentFileMap","newFileMap","moveFileIds","f","newSourceChildrenIds","id","newDestinationChildrenIds","file","methods","useFileActionHandler","data","ChonkyActions","targetFile","fileToOpen","FileHelper","useFileMap","fileActionHandler"]}